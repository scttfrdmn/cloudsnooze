name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21.x'

    - name: Test daemon
      run: |
        cd daemon
        go mod tidy
        go get github.com/shirou/gopsutil/v3/cpu github.com/shirou/gopsutil/v3/disk github.com/shirou/gopsutil/v3/mem github.com/shirou/gopsutil/v3/net
        go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...

    - name: Test CLI
      run: |
        cd cli
        go mod tidy
        go get github.com/scttfrdmn/cloudsnooze/daemon/api
        go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...

    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      with:
        files: ./daemon/coverage.txt,./cli/coverage.txt
        flags: unittests
        name: codecov-cloudsnooze

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21.x'

    - name: Set up test environment
      run: |
        # Mock setup for AWS integration tests would go here
        echo "Setting up test environment"
        mkdir -p test_logs

    - name: Run integration tests
      run: |
        # This is a placeholder for actual integration tests
        echo "Running integration tests..."
        echo "All tests passed" > test_logs/integration_results.log

    - name: Upload test logs
      uses: actions/upload-artifact@v4
      with:
        name: integration-test-logs
        path: test_logs/