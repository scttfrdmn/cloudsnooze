<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CloudSnooze – Documentation</title><link>https://cloudsnooze.io/docs/</link><description>Recent content in Documentation on CloudSnooze</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://cloudsnooze.io/docs/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs:</title><link>https://cloudsnooze.io/docs/building/packaging/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cloudsnooze.io/docs/building/packaging/</guid><description>
&lt;!--
Copyright 2025 Scott Friedman and CloudSnooze Contributors
SPDX-License-Identifier: Apache-2.0
-->
&lt;h1 id="cloudsnooze-packaging-guide">CloudSnooze Packaging Guide&lt;/h1>
&lt;p>This document details the packaging and release process for CloudSnooze.&lt;/p>
&lt;h2 id="versioning-scheme">Versioning Scheme&lt;/h2>
&lt;p>CloudSnooze follows Semantic Versioning (MAJOR.MINOR.PATCH):&lt;/p>
&lt;ul>
&lt;li>&lt;strong>MAJOR&lt;/strong>: Incompatible API changes&lt;/li>
&lt;li>&lt;strong>MINOR&lt;/strong>: Added functionality in a backwards-compatible manner&lt;/li>
&lt;li>&lt;strong>PATCH&lt;/strong>: Backwards-compatible bug fixes&lt;/li>
&lt;/ul>
&lt;h3 id="release-tags">Release Tags&lt;/h3>
&lt;p>Each release version is tagged in git using the format: &lt;code>v{MAJOR}.{MINOR}.{PATCH}&lt;/code>&lt;/p>
&lt;p>Examples:&lt;/p>
&lt;ul>
&lt;li>&lt;code>v0.1.0&lt;/code> - Initial release&lt;/li>
&lt;li>&lt;code>v0.1.1&lt;/code> - Bug fixes&lt;/li>
&lt;li>&lt;code>v0.2.0&lt;/code> - New features&lt;/li>
&lt;/ul>
&lt;h2 id="package-naming-conventions">Package Naming Conventions&lt;/h2>
&lt;h3 id="deb-packages-debianubuntu">DEB Packages (Debian/Ubuntu)&lt;/h3>
&lt;p>Format: &lt;code>cloudsnooze_{VERSION}_{ARCH}.deb&lt;/code>&lt;/p>
&lt;p>Examples:&lt;/p>
&lt;ul>
&lt;li>&lt;code>cloudsnooze_0.1.0_amd64.deb&lt;/code>&lt;/li>
&lt;li>&lt;code>cloudsnooze_0.1.0_arm64.deb&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>Latest symlink:&lt;/p>
&lt;ul>
&lt;li>&lt;code>cloudsnooze-latest_amd64.deb&lt;/code>&lt;/li>
&lt;li>&lt;code>cloudsnooze-latest_arm64.deb&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="rpm-packages-rhelcentosfedora">RPM Packages (RHEL/CentOS/Fedora)&lt;/h3>
&lt;p>Format: &lt;code>cloudsnooze-{VERSION}-{RELEASE}.{ARCH}.rpm&lt;/code>&lt;/p>
&lt;p>Examples:&lt;/p>
&lt;ul>
&lt;li>&lt;code>cloudsnooze-0.1.0-1.x86_64.rpm&lt;/code>&lt;/li>
&lt;li>&lt;code>cloudsnooze-0.1.0-1.aarch64.rpm&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>Latest symlink:&lt;/p>
&lt;ul>
&lt;li>&lt;code>cloudsnooze-latest.x86_64.rpm&lt;/code>&lt;/li>
&lt;li>&lt;code>cloudsnooze-latest.aarch64.rpm&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="building-packages">Building Packages&lt;/h2>
&lt;p>The packaging scripts in &lt;code>/packaging&lt;/code> directory automate the build process:&lt;/p>
&lt;h3 id="prerequisites">Prerequisites&lt;/h3>
&lt;ul>
&lt;li>Go 1.24 or later&lt;/li>
&lt;li>Required for DEB: &lt;code>dpkg-deb&lt;/code>&lt;/li>
&lt;li>Required for RPM: &lt;code>rpmbuild&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="building-deb-packages">Building DEB Packages&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0086b3">cd&lt;/span> packaging/deb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>./build.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Output will be in: &lt;code>./build/cloudsnooze_{VERSION}_{ARCH}.deb&lt;/code>&lt;/p>
&lt;h3 id="building-rpm-packages">Building RPM Packages&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0086b3">cd&lt;/span> packaging/rpm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>./build.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Output will be in: &lt;code>./build/dist/cloudsnooze-{VERSION}-1.{ARCH}.rpm&lt;/code>&lt;/p>
&lt;h3 id="building-all-packages">Building All Packages&lt;/h3>
&lt;p>The master release script handles version bumping and package building:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0086b3">cd&lt;/span> packaging
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>./release.sh --patch &lt;span style="color:#998;font-style:italic"># Increment patch version&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>./release.sh --minor &lt;span style="color:#998;font-style:italic"># Increment minor version&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>./release.sh --major &lt;span style="color:#998;font-style:italic"># Increment major version&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>./release.sh --release &lt;span style="color:#998;font-style:italic"># Use current version&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Output packages will be in: &lt;code>./packaging/release/&lt;/code>&lt;/p>
&lt;h2 id="github-releases">GitHub Releases&lt;/h2>
&lt;p>To create a GitHub release with the packaged files:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Run the release script to build all packages:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0086b3">cd&lt;/span> packaging
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>./release.sh --patch
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Push the git tag created by the script:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>git push origin v0.1.0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Create a new release on GitHub:&lt;/p>
&lt;ul>
&lt;li>Visit: &lt;a href="https://github.com/scttfrdmn/cloudsnooze/releases/new">https://github.com/scttfrdmn/cloudsnooze/releases/new&lt;/a>&lt;/li>
&lt;li>Select the tag just pushed&lt;/li>
&lt;li>Add release notes&lt;/li>
&lt;li>Upload all package files from &lt;code>./packaging/release/&lt;/code>&lt;/li>
&lt;li>For the &amp;ldquo;latest&amp;rdquo; release, also check &amp;ldquo;Set as latest release&amp;rdquo;&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="package-contents">Package Contents&lt;/h2>
&lt;p>Each package includes:&lt;/p>
&lt;ul>
&lt;li>&lt;code>/usr/bin/snoozed&lt;/code> - Main daemon executable&lt;/li>
&lt;li>&lt;code>/usr/bin/snooze&lt;/code> - CLI executable&lt;/li>
&lt;li>&lt;code>/etc/snooze/snooze.json&lt;/code> - Default configuration&lt;/li>
&lt;li>&lt;code>/usr/lib/systemd/system/snoozed.service&lt;/code> - Systemd service file&lt;/li>
&lt;li>&lt;code>/usr/share/doc/cloudsnooze/&lt;/code> - Documentation&lt;/li>
&lt;/ul>
&lt;h2 id="maintaining-multiple-architectures">Maintaining Multiple Architectures&lt;/h2>
&lt;p>The build scripts automatically detect the current architecture. To build for another architecture:&lt;/p>
&lt;h3 id="cross-compiling-for-arm64">Cross-compiling for ARM64&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"># For DEB&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0086b3">cd&lt;/span> packaging/deb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008080">GOOS&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>linux &lt;span style="color:#008080">GOARCH&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>arm64 &lt;span style="color:#008080">PKG_ARCH&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>arm64 ./build.sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"># For RPM &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0086b3">cd&lt;/span> packaging/rpm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008080">GOOS&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>linux &lt;span style="color:#008080">GOARCH&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>arm64 &lt;span style="color:#008080">PKG_ARCH&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>aarch64 ./build.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="testing-packages">Testing Packages&lt;/h2>
&lt;p>Before release, test packages on appropriate distributions:&lt;/p>
&lt;ul>
&lt;li>DEB: Test on Ubuntu 20.04 LTS and Debian 11&lt;/li>
&lt;li>RPM: Test on Amazon Linux 2 and RHEL/CentOS 8&lt;/li>
&lt;/ul>
&lt;p>Testing script:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"># Test installation&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo dpkg -i cloudsnooze_0.1.0_amd64.deb &lt;span style="color:#998;font-style:italic"># or&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo rpm -i cloudsnooze-0.1.0-1.x86_64.rpm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"># Verify service starts&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>systemctl status snoozed
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"># Test CLI&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>snooze status
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"># Test uninstallation&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo dpkg -r cloudsnooze &lt;span style="color:#998;font-style:italic"># or&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo rpm -e cloudsnooze
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="-latest-packages">&lt;code>-latest&lt;/code> Packages&lt;/h2>
&lt;p>The &lt;code>-latest&lt;/code> packages are symlinks that point to the most recent stable version&amp;rsquo;s actual package file. These symlinks are automatically created by the build scripts and are uploaded to the GitHub release.&lt;/p>
&lt;p>Usage in installation scripts:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"># Always get the latest version&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>curl -LO https://github.com/scttfrdmn/cloudsnooze/releases/download/latest/cloudsnooze-latest_amd64.deb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo dpkg -i cloudsnooze-latest_amd64.deb
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs:</title><link>https://cloudsnooze.io/docs/design/command-structure/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cloudsnooze.io/docs/design/command-structure/</guid><description>
&lt;!--
Copyright 2025 Scott Friedman and CloudSnooze Contributors
SPDX-License-Identifier: Apache-2.0
-->
&lt;h1 id="cloudsnooze---command-structure">CloudSnooze - Command Structure&lt;/h1>
&lt;p>This document outlines the command structure for the CloudSnooze CLI tool (&lt;code>snooze&lt;/code>), including all available commands, options, and usage examples.&lt;/p>
&lt;h2 id="top-level-command">Top-Level Command&lt;/h2>
&lt;pre tabindex="0">&lt;code>snooze [command] [options]
&lt;/code>&lt;/pre>&lt;p>Global flags:&lt;/p>
&lt;ul>
&lt;li>&lt;code>--help, -h&lt;/code>: Display help for any command&lt;/li>
&lt;li>&lt;code>--version, -v&lt;/code>: Display version information&lt;/li>
&lt;li>&lt;code>--config, -c&lt;/code>: Specify an alternative configuration file path&lt;/li>
&lt;/ul>
&lt;h2 id="primary-commands">Primary Commands&lt;/h2>
&lt;h3 id="status">status&lt;/h3>
&lt;p>Display the current system status, including metrics and daemon information.&lt;/p>
&lt;pre tabindex="0">&lt;code>snooze status [options]
&lt;/code>&lt;/pre>&lt;p>Options:&lt;/p>
&lt;ul>
&lt;li>&lt;code>--watch, -w&lt;/code>: Continuously update the display (like top)&lt;/li>
&lt;li>&lt;code>--interval=N, -i N&lt;/code>: Refresh interval in seconds when using watch mode&lt;/li>
&lt;/ul>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"># Show current status&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>snooze status
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"># Watch status with 5-second refresh&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>snooze status --watch --interval&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#099">5&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Output example:&lt;/p>
&lt;pre tabindex="0">&lt;code>CloudSnooze Status
------------------
Status: Running
Monitoring since: 2025-04-19 14:30:45 UTC
Current metrics:
- CPU: 5.2% (threshold: 10.0%)
- Memory: 22.7% (threshold: 30.0%)
- Network: 12.3 KB/s (threshold: 50.0 KB/s)
- Disk I/O: 0.5 KB/s (threshold: 100.0 KB/s)
- Input idle: 125s (threshold: 900s)
- GPU [NVIDIA T4]: 0.0% (threshold: 5.0%)
System idle: No (Input activity detected)
Current naptime: 0 of 30 minutes
&lt;/code>&lt;/pre>&lt;h3 id="config">config&lt;/h3>
&lt;p>View or modify configuration parameters.&lt;/p>
&lt;pre tabindex="0">&lt;code>snooze config [action] [parameter] [value]
&lt;/code>&lt;/pre>&lt;p>Actions:&lt;/p>
&lt;ul>
&lt;li>&lt;code>list&lt;/code>: Show all configuration parameters&lt;/li>
&lt;li>&lt;code>get&lt;/code>: Get a specific parameter&amp;rsquo;s value&lt;/li>
&lt;li>&lt;code>set&lt;/code>: Set a parameter&amp;rsquo;s value&lt;/li>
&lt;li>&lt;code>reset&lt;/code>: Reset to default values&lt;/li>
&lt;li>&lt;code>import&lt;/code>: Import configuration from a file&lt;/li>
&lt;li>&lt;code>export&lt;/code>: Export configuration to a file&lt;/li>
&lt;li>&lt;code>verify&lt;/code>: Verify configuration syntax&lt;/li>
&lt;/ul>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"># List all configuration options&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>snooze config list
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"># Get a specific parameter&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>snooze config get naptime
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"># Set a parameter&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>snooze config &lt;span style="color:#0086b3">set&lt;/span> cpu-threshold 15.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"># Reset to defaults&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>snooze config reset
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"># Import from file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>snooze config import myconfig.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"># Export to file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>snooze config &lt;span style="color:#0086b3">export&lt;/span> backup.json
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="history">history&lt;/h3>
&lt;p>View the history of instance snooze events.&lt;/p>
&lt;pre tabindex="0">&lt;code>snooze history [options]
&lt;/code>&lt;/pre>&lt;p>Options:&lt;/p>
&lt;ul>
&lt;li>&lt;code>--limit=N, -l N&lt;/code>: Limit to N entries (default: 10)&lt;/li>
&lt;li>&lt;code>--since=DATE, -s DATE&lt;/code>: Show entries since DATE&lt;/li>
&lt;li>&lt;code>--format=FORMAT, -f FORMAT&lt;/code>: Output format (text, json, csv)&lt;/li>
&lt;li>&lt;code>--output=FILE, -o FILE&lt;/code>: Write output to FILE&lt;/li>
&lt;/ul>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"># View last 10 snooze events&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>snooze &lt;span style="color:#0086b3">history&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"># View last 20 events in JSON format&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>snooze &lt;span style="color:#0086b3">history&lt;/span> --limit&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#099">20&lt;/span> --format&lt;span style="color:#000;font-weight:bold">=&lt;/span>json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"># Export all events since last week to CSV&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>snooze &lt;span style="color:#0086b3">history&lt;/span> --since&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#d14">&amp;#34;1 week ago&amp;#34;&lt;/span> --format&lt;span style="color:#000;font-weight:bold">=&lt;/span>csv --output&lt;span style="color:#000;font-weight:bold">=&lt;/span>history.csv
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="startstoprestart">start/stop/restart&lt;/h3>
&lt;p>Control the daemon service.&lt;/p>
&lt;pre tabindex="0">&lt;code>snooze start
snooze stop
snooze restart
&lt;/code>&lt;/pre>&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"># Start the daemon&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>snooze start
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"># Stop the daemon&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>snooze stop
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"># Restart the daemon&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>snooze restart
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="enabledisable">enable/disable&lt;/h3>
&lt;p>Control automatic startup of the daemon.&lt;/p>
&lt;pre tabindex="0">&lt;code>snooze enable
snooze disable
&lt;/code>&lt;/pre>&lt;h3 id="simulate">simulate&lt;/h3>
&lt;p>Run a simulation based on specified metrics to see if snoozing would be triggered.&lt;/p>
&lt;pre tabindex="0">&lt;code>snooze simulate [options]
&lt;/code>&lt;/pre>&lt;p>Options:&lt;/p>
&lt;ul>
&lt;li>&lt;code>--cpu=PCT&lt;/code>: CPU usage percentage&lt;/li>
&lt;li>&lt;code>--memory=PCT&lt;/code>: Memory usage percentage&lt;/li>
&lt;li>&lt;code>--network=KBPS&lt;/code>: Network I/O in KB/s&lt;/li>
&lt;li>&lt;code>--disk=KBPS&lt;/code>: Disk I/O in KB/s&lt;/li>
&lt;li>&lt;code>--input=SECS&lt;/code>: Input idle time in seconds&lt;/li>
&lt;li>&lt;code>--gpu=PCT&lt;/code>: GPU usage percentage&lt;/li>
&lt;li>&lt;code>--duration=MINS&lt;/code>: Duration to simulate in minutes&lt;/li>
&lt;/ul>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"># Simulate with low resource usage for 40 minutes&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>snooze simulate --cpu&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#099">5&lt;/span> --memory&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#099">20&lt;/span> --network&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#099">10&lt;/span> --input&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#099">1800&lt;/span> --duration&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#099">40&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"># Simulate with high CPU but low everything else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>snooze simulate --cpu&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#099">80&lt;/span> --memory&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#099">20&lt;/span> --network&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#099">5&lt;/span> --input&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#099">1800&lt;/span> --duration&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#099">35&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="advanced-commands">Advanced Commands&lt;/h2>
&lt;h3 id="tags">tags&lt;/h3>
&lt;p>Manage instance tags (AWS-specific).&lt;/p>
&lt;pre tabindex="0">&lt;code>snooze tags [action] [instance-id]
&lt;/code>&lt;/pre>&lt;p>Actions:&lt;/p>
&lt;ul>
&lt;li>&lt;code>list&lt;/code>: List CloudSnooze tags for an instance&lt;/li>
&lt;li>&lt;code>clear&lt;/code>: Clear CloudSnooze tags from an instance&lt;/li>
&lt;/ul>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"># List tags for current instance&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>snooze tags list
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"># List tags for a specific instance&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>snooze tags list i-1234567890abcdef0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"># Clear tags from current instance&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>snooze tags clear
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="logs">logs&lt;/h3>
&lt;p>View and manage daemon logs.&lt;/p>
&lt;pre tabindex="0">&lt;code>snooze logs [options]
&lt;/code>&lt;/pre>&lt;p>Options:&lt;/p>
&lt;ul>
&lt;li>&lt;code>--tail=N, -n N&lt;/code>: Show the last N lines&lt;/li>
&lt;li>&lt;code>--follow, -f&lt;/code>: Follow the log output (like tail -f)&lt;/li>
&lt;li>&lt;code>--since=TIME&lt;/code>: Show logs since TIME&lt;/li>
&lt;/ul>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"># View last 50 log lines&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>snooze logs --tail&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#099">50&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"># Follow logs in real-time&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>snooze logs --follow
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"># View logs since yesterday&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>snooze logs --since&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#d14">&amp;#34;1 day ago&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="export-metrics">export-metrics&lt;/h3>
&lt;p>Export collected metrics for analysis.&lt;/p>
&lt;pre tabindex="0">&lt;code>snooze export-metrics [options]
&lt;/code>&lt;/pre>&lt;p>Options:&lt;/p>
&lt;ul>
&lt;li>&lt;code>--since=TIME&lt;/code>: Export metrics since TIME&lt;/li>
&lt;li>&lt;code>--format=FORMAT, -f FORMAT&lt;/code>: Output format (json, csv)&lt;/li>
&lt;li>&lt;code>--output=FILE, -o FILE&lt;/code>: Write to FILE instead of stdout&lt;/li>
&lt;/ul>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"># Export all metrics as JSON&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>snooze export-metrics --format&lt;span style="color:#000;font-weight:bold">=&lt;/span>json --output&lt;span style="color:#000;font-weight:bold">=&lt;/span>metrics.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"># Export last week&amp;#39;s metrics as CSV&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>snooze export-metrics --since&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#d14">&amp;#34;1 week ago&amp;#34;&lt;/span> --format&lt;span style="color:#000;font-weight:bold">=&lt;/span>csv --output&lt;span style="color:#000;font-weight:bold">=&lt;/span>metrics.csv
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="test-permissions">test-permissions&lt;/h3>
&lt;p>Test cloud provider permissions required by CloudSnooze.&lt;/p>
&lt;pre tabindex="0">&lt;code>snooze test-permissions
&lt;/code>&lt;/pre>&lt;p>Output example:&lt;/p>
&lt;pre tabindex="0">&lt;code>Testing cloud provider permissions...
✓ Can describe instances
✓ Can stop current instance
✓ Can create tags
✓ Can access CloudWatch (optional)
All required permissions are configured correctly.
&lt;/code>&lt;/pre>&lt;h2 id="exit-codes">Exit Codes&lt;/h2>
&lt;p>The CLI tool uses the following exit codes:&lt;/p>
&lt;ul>
&lt;li>&lt;code>0&lt;/code>: Success&lt;/li>
&lt;li>&lt;code>1&lt;/code>: General error&lt;/li>
&lt;li>&lt;code>2&lt;/code>: Configuration error&lt;/li>
&lt;li>&lt;code>3&lt;/code>: Permission error&lt;/li>
&lt;li>&lt;code>4&lt;/code>: Communication error with daemon&lt;/li>
&lt;li>&lt;code>5&lt;/code>: Command syntax error&lt;/li>
&lt;/ul></description></item><item><title>Docs:</title><link>https://cloudsnooze.io/docs/design/data-model/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cloudsnooze.io/docs/design/data-model/</guid><description>
&lt;!--
Copyright 2025 Scott Friedman and CloudSnooze Contributors
SPDX-License-Identifier: Apache-2.0
-->
&lt;h1 id="cloudsnooze---data-model">CloudSnooze - Data Model&lt;/h1>
&lt;p>This document defines the primary data structures used in CloudSnooze, including configuration, metrics, and communication protocols.&lt;/p>
&lt;h2 id="configuration-model">Configuration Model&lt;/h2>
&lt;p>The main configuration for CloudSnooze is stored in JSON format at &lt;code>/etc/snooze/snooze.json&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">// Config represents the complete configuration
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span>&lt;span style="color:#000;font-weight:bold">type&lt;/span> Config &lt;span style="color:#000;font-weight:bold">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic">// General settings
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span> CheckIntervalSeconds &lt;span style="color:#458;font-weight:bold">int&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;check_interval_seconds&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> NaptimeMinutes &lt;span style="color:#458;font-weight:bold">int&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;naptime_minutes&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic">// Thresholds
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span> CPUThresholdPercent &lt;span style="color:#458;font-weight:bold">float64&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;cpu_threshold_percent&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> MemoryThresholdPercent &lt;span style="color:#458;font-weight:bold">float64&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;memory_threshold_percent&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> NetworkThresholdKBps &lt;span style="color:#458;font-weight:bold">float64&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;network_threshold_kbps&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DiskIOThresholdKBps &lt;span style="color:#458;font-weight:bold">float64&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;disk_io_threshold_kbps&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> InputIdleThresholdSecs &lt;span style="color:#458;font-weight:bold">int&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;input_idle_threshold_secs&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic">// GPU/Accelerator settings
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span> GPUMonitoringEnabled &lt;span style="color:#458;font-weight:bold">bool&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;gpu_monitoring_enabled&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> GPUThresholdPercent &lt;span style="color:#458;font-weight:bold">float64&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;gpu_threshold_percent&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic">// AWS settings
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span> AWSRegion &lt;span style="color:#458;font-weight:bold">string&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;aws_region&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> EnableInstanceTags &lt;span style="color:#458;font-weight:bold">bool&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;enable_instance_tags&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> TaggingPrefix &lt;span style="color:#458;font-weight:bold">string&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;tagging_prefix&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic">// Logging settings
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span> Logging LoggingConfig &lt;span style="color:#d14">`json:&amp;#34;logging&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic">// Advanced settings
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span> MonitoringMode &lt;span style="color:#458;font-weight:bold">string&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;monitoring_mode&amp;#34;`&lt;/span> &lt;span style="color:#998;font-style:italic">// &amp;#34;basic&amp;#34; or &amp;#34;advanced&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">// LoggingConfig defines logging behavior
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span>&lt;span style="color:#000;font-weight:bold">type&lt;/span> LoggingConfig &lt;span style="color:#000;font-weight:bold">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> LogLevel &lt;span style="color:#458;font-weight:bold">string&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;log_level&amp;#34;`&lt;/span> &lt;span style="color:#998;font-style:italic">// &amp;#34;debug&amp;#34;, &amp;#34;info&amp;#34;, &amp;#34;warn&amp;#34;, &amp;#34;error&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span> EnableFileLogging &lt;span style="color:#458;font-weight:bold">bool&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;enable_file_logging&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> LogFilePath &lt;span style="color:#458;font-weight:bold">string&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;log_file_path&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> EnableSyslog &lt;span style="color:#458;font-weight:bold">bool&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;enable_syslog&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> EnableCloudWatch &lt;span style="color:#458;font-weight:bold">bool&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;enable_cloudwatch&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CloudWatchLogGroup &lt;span style="color:#458;font-weight:bold">string&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;cloudwatch_log_group&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Default configuration (&lt;code>snooze.json&lt;/code>):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;check_interval_seconds&amp;#34;&lt;/span>: &lt;span style="color:#099">60&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;naptime_minutes&amp;#34;&lt;/span>: &lt;span style="color:#099">30&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;cpu_threshold_percent&amp;#34;&lt;/span>: &lt;span style="color:#099">10.0&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;memory_threshold_percent&amp;#34;&lt;/span>: &lt;span style="color:#099">30.0&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;network_threshold_kbps&amp;#34;&lt;/span>: &lt;span style="color:#099">50.0&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;disk_io_threshold_kbps&amp;#34;&lt;/span>: &lt;span style="color:#099">100.0&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;input_idle_threshold_secs&amp;#34;&lt;/span>: &lt;span style="color:#099">900&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;gpu_monitoring_enabled&amp;#34;&lt;/span>: &lt;span style="color:#000;font-weight:bold">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;gpu_threshold_percent&amp;#34;&lt;/span>: &lt;span style="color:#099">5.0&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;aws_region&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;us-east-1&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;enable_instance_tags&amp;#34;&lt;/span>: &lt;span style="color:#000;font-weight:bold">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;tagging_prefix&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;CloudSnooze&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;logging&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;log_level&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;info&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;enable_file_logging&amp;#34;&lt;/span>: &lt;span style="color:#000;font-weight:bold">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;log_file_path&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;/var/log/cloudsnooze.log&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;enable_syslog&amp;#34;&lt;/span>: &lt;span style="color:#000;font-weight:bold">false&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;enable_cloudwatch&amp;#34;&lt;/span>: &lt;span style="color:#000;font-weight:bold">false&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;cloudwatch_log_group&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;CloudSnooze&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;monitoring_mode&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;basic&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="system-metrics-model">System Metrics Model&lt;/h2>
&lt;p>Collected metrics are structured as follows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">// SystemMetrics represents a complete set of system measurements
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span>&lt;span style="color:#000;font-weight:bold">type&lt;/span> SystemMetrics &lt;span style="color:#000;font-weight:bold">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Timestamp time.Time &lt;span style="color:#d14">`json:&amp;#34;timestamp&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CPUPercent &lt;span style="color:#458;font-weight:bold">float64&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;cpu_percent&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> MemoryPercent &lt;span style="color:#458;font-weight:bold">float64&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;memory_percent&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> NetworkKBps &lt;span style="color:#458;font-weight:bold">float64&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;network_kbps&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DiskIOKBps &lt;span style="color:#458;font-weight:bold">float64&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;disk_io_kbps&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> InputIdleSecs &lt;span style="color:#458;font-weight:bold">int&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;input_idle_secs&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> GPUMetrics []GPUMetric &lt;span style="color:#d14">`json:&amp;#34;gpu_metrics,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> IdleStatus &lt;span style="color:#458;font-weight:bold">bool&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;idle_status&amp;#34;`&lt;/span> &lt;span style="color:#998;font-style:italic">// true if system is idle
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span> IdleReason &lt;span style="color:#458;font-weight:bold">string&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;idle_reason,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">// GPUMetric represents metrics for a single GPU
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span>&lt;span style="color:#000;font-weight:bold">type&lt;/span> GPUMetric &lt;span style="color:#000;font-weight:bold">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Type &lt;span style="color:#458;font-weight:bold">string&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;type&amp;#34;`&lt;/span> &lt;span style="color:#998;font-style:italic">// &amp;#34;NVIDIA&amp;#34;, &amp;#34;AMD&amp;#34;, etc.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span> ID &lt;span style="color:#458;font-weight:bold">int&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;id&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Name &lt;span style="color:#458;font-weight:bold">string&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;name&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Utilization &lt;span style="color:#458;font-weight:bold">float64&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;utilization&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> MemoryUsed &lt;span style="color:#458;font-weight:bold">uint64&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;memory_used&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> MemoryTotal &lt;span style="color:#458;font-weight:bold">uint64&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;memory_total&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Temperature &lt;span style="color:#458;font-weight:bold">float64&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;temperature,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="snooze-event-model">Snooze Event Model&lt;/h2>
&lt;p>When an instance is snoozed (stopped), an event is recorded:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">// SnoozeEvent represents a stopping action
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span>&lt;span style="color:#000;font-weight:bold">type&lt;/span> SnoozeEvent &lt;span style="color:#000;font-weight:bold">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Timestamp time.Time &lt;span style="color:#d14">`json:&amp;#34;timestamp&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> InstanceID &lt;span style="color:#458;font-weight:bold">string&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;instance_id&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> InstanceType &lt;span style="color:#458;font-weight:bold">string&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;instance_type&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Region &lt;span style="color:#458;font-weight:bold">string&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;region&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Reason &lt;span style="color:#458;font-weight:bold">string&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;reason&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Metrics SystemMetrics &lt;span style="color:#d14">`json:&amp;#34;metrics&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Tags &lt;span style="color:#000;font-weight:bold">map&lt;/span>[&lt;span style="color:#458;font-weight:bold">string&lt;/span>]&lt;span style="color:#458;font-weight:bold">string&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;tags,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> NaptimeMins &lt;span style="color:#458;font-weight:bold">int&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;naptime_mins&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="aws-tags-model">AWS Tags Model&lt;/h2>
&lt;p>When tagging is enabled, the following tags are applied to instances:&lt;/p>
&lt;pre tabindex="0">&lt;code>CloudSnooze:State = &amp;#34;Snoozed&amp;#34;
CloudSnooze:Timestamp = &amp;#34;2025-04-19T15:30:45Z&amp;#34;
CloudSnooze:Reason = &amp;#34;CPU usage 2.3% below threshold 10.0%; Memory usage 15.7% below threshold 30.0%&amp;#34;
CloudSnooze:Version = &amp;#34;1.0.0&amp;#34;
&lt;/code>&lt;/pre>&lt;p>The prefix (&lt;code>CloudSnooze:&lt;/code>) is configurable in settings.&lt;/p>
&lt;h2 id="socket-api-communication-model">Socket API Communication Model&lt;/h2>
&lt;p>The Unix socket API used for communication between components uses JSON messages:&lt;/p>
&lt;h3 id="request-format">Request Format&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;command&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;STATUS|CONFIG_GET|CONFIG_SET|HISTORY|START|STOP|RESTART|SIMULATE&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;params&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;key1&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;value1&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;key2&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;value2&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="response-format">Response Format&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;status&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;success|error&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;data&amp;#34;&lt;/span>: {},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;error&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;Error message if status is error&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Example commands:&lt;/p>
&lt;ol>
&lt;li>&lt;code>STATUS&lt;/code> - Get current system status and metrics&lt;/li>
&lt;li>&lt;code>CONFIG_GET&lt;/code> - Retrieve current configuration&lt;/li>
&lt;li>&lt;code>CONFIG_SET param value&lt;/code> - Update a configuration parameter&lt;/li>
&lt;li>&lt;code>HISTORY&lt;/code> - Get snooze history&lt;/li>
&lt;li>&lt;code>START|STOP|RESTART&lt;/code> - Control the daemon&lt;/li>
&lt;li>&lt;code>SIMULATE&lt;/code> - Run a simulation with specified metrics&lt;/li>
&lt;/ol>
&lt;h2 id="history-storage-model">History Storage Model&lt;/h2>
&lt;p>Snooze history is stored in a local SQLite database (in advanced mode) or as JSON files:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">// HistoryEntry in the database
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span>&lt;span style="color:#000;font-weight:bold">type&lt;/span> HistoryEntry &lt;span style="color:#000;font-weight:bold">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ID &lt;span style="color:#458;font-weight:bold">int64&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;id&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Timestamp time.Time &lt;span style="color:#d14">`json:&amp;#34;timestamp&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> InstanceID &lt;span style="color:#458;font-weight:bold">string&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;instance_id&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Reason &lt;span style="color:#458;font-weight:bold">string&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;reason&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> MetricsJSON &lt;span style="color:#458;font-weight:bold">string&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;metrics_json&amp;#34;`&lt;/span> &lt;span style="color:#998;font-style:italic">// JSON serialized metrics
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In basic mode, a simple file-based history is maintained at &lt;code>/var/lib/snooze/history.json&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;events&amp;#34;&lt;/span>: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;timestamp&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;2025-04-19T14:20:30Z&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;instance_id&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;i-1234567890abcdef0&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;reason&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;CPU usage 2.3% below threshold 10.0%&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;naptime_mins&amp;#34;&lt;/span>: &lt;span style="color:#099">30&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;timestamp&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;2025-04-18T23:15:10Z&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;instance_id&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;i-1234567890abcdef0&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;reason&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;All metrics below thresholds&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;naptime_mins&amp;#34;&lt;/span>: &lt;span style="color:#099">30&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs:</title><link>https://cloudsnooze.io/docs/design/deployment-template/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cloudsnooze.io/docs/design/deployment-template/</guid><description>
&lt;!--
Copyright 2025 Scott Friedman and CloudSnooze Contributors
SPDX-License-Identifier: Apache-2.0
-->
&lt;h1 id="cloudsnooze-deployment-templates">CloudSnooze Deployment Templates&lt;/h1>
&lt;p>This document provides templates and examples for deploying CloudSnooze in various cloud environments.&lt;/p>
&lt;h2 id="aws-deployment">AWS Deployment&lt;/h2>
&lt;h3 id="cloudformation-template">CloudFormation Template&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000080">AWSTemplateFormatVersion&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#d14">&amp;#39;2010-09-09&amp;#39;&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">&lt;/span>&lt;span style="color:#000080">Description&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#d14">&amp;#39;CloudSnooze Deployment&amp;#39;&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">&lt;/span>&lt;span style="color:#000080">Parameters&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">InstanceType&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">Type&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>String&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">Default&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>t3.medium&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">Description&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>Instance type for deployment&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">KeyName&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">Type&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>AWS::EC2::KeyPair::KeyName&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">Description&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>SSH key for instance access&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">VpcId&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">Type&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>AWS::EC2::VPC::Id&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">Description&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>VPC for deployment&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">SubnetId&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">Type&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>AWS::EC2::Subnet::Id&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">Description&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>Subnet for deployment&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">CloudSnoozeVersion&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">Type&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>String&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">Default&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#099">0.1.0&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">Description&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>CloudSnooze version to deploy&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">&lt;/span>&lt;span style="color:#000080">Resources&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">CloudSnoozeInstanceRole&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">Type&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>AWS::IAM::Role&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">Properties&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">AssumeRolePolicyDocument&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">Version&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#d14">&amp;#39;2012-10-17&amp;#39;&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">Statement&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- &lt;span style="color:#000080">Effect&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>Allow&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">Principal&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">Service&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>ec2.amazonaws.com&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">Action&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>sts:AssumeRole&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">ManagedPolicyArns&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">Policies&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- &lt;span style="color:#000080">PolicyName&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>CloudSnoozeInstancePolicy&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">PolicyDocument&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">Version&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#d14">&amp;#39;2012-10-17&amp;#39;&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">Statement&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- &lt;span style="color:#000080">Effect&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>Allow&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">Action&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- ec2:StopInstances&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- ec2:DescribeInstances&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- ec2:CreateTags&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- ec2:DescribeTags&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">Resource&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#d14">&amp;#39;*&amp;#39;&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- &lt;span style="color:#000080">Effect&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>Allow&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">Action&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- logs:CreateLogGroup&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- logs:CreateLogStream&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- logs:PutLogEvents&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">Resource&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#d14">&amp;#39;arn:aws:logs:*:*:log-group:/aws/cloudsnooze/*&amp;#39;&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">CloudSnoozeInstanceProfile&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">Type&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>AWS::IAM::InstanceProfile&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">Properties&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">Roles&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- !Ref CloudSnoozeInstanceRole&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">CloudSnoozeSecurityGroup&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">Type&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>AWS::EC2::SecurityGroup&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">Properties&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">GroupDescription&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>Security group for CloudSnooze instance&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">VpcId&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>!Ref VpcId&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">SecurityGroupIngress&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- &lt;span style="color:#000080">IpProtocol&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>tcp&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">FromPort&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#099">22&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">ToPort&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#099">22&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">CidrIp&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#099">0.0.0.0&lt;/span>/0&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- &lt;span style="color:#000080">IpProtocol&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>tcp&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">FromPort&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#099">80&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">ToPort&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#099">80&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">CidrIp&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#099">0.0.0.0&lt;/span>/0&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- &lt;span style="color:#000080">IpProtocol&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>tcp&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">FromPort&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#099">443&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">ToPort&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#099">443&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">CidrIp&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#099">0.0.0.0&lt;/span>/0&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">CloudSnoozeInstance&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">Type&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>AWS::EC2::Instance&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">Properties&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">InstanceType&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>!Ref InstanceType&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">KeyName&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>!Ref KeyName&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">IamInstanceProfile&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>!Ref CloudSnoozeInstanceProfile&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">SubnetId&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>!Ref SubnetId&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">SecurityGroupIds&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- !GetAtt CloudSnoozeSecurityGroup.GroupId&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">ImageId&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>!FindInMap [RegionMap, !Ref &amp;#39;AWS::Region&amp;#39;, AMI]&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">UserData&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">Fn::Base64&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>!Sub |&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#998;font-style:italic">#!/bin/bash -xe&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#998;font-style:italic"># Install CloudSnooze&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>mkdir -p /opt/cloudsnooze&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>cd /opt/cloudsnooze&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#998;font-style:italic"># Install dependencies&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>apt-get update&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>apt-get install -y curl systemd&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#998;font-style:italic"># Download and install CloudSnooze&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>curl -LO https://github.com/scttfrdmn/cloudsnooze/releases/download/v${CloudSnoozeVersion}/cloudsnooze_${CloudSnoozeVersion}_amd64.deb&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>dpkg -i cloudsnooze_${CloudSnoozeVersion}_amd64.deb&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#998;font-style:italic"># Configure CloudSnooze&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>cat &amp;gt; /etc/snooze/snooze.json &amp;lt;&amp;lt; &amp;#39;EOF&amp;#39;&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>{&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">&amp;#34;CPUThresholdPercent&amp;#34;: &lt;/span>&lt;span style="color:#099">5.0&lt;/span>,&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">&amp;#34;MemoryThresholdPercent&amp;#34;: &lt;/span>&lt;span style="color:#099">10.0&lt;/span>,&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">&amp;#34;NetworkThresholdKBps&amp;#34;: &lt;/span>&lt;span style="color:#099">5.0&lt;/span>,&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">&amp;#34;DiskIOThresholdKBps&amp;#34;: &lt;/span>&lt;span style="color:#099">10.0&lt;/span>,&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">&amp;#34;GPUThresholdPercent&amp;#34;: &lt;/span>&lt;span style="color:#099">5.0&lt;/span>,&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">&amp;#34;InputIdleThresholdSecs&amp;#34;: &lt;/span>&lt;span style="color:#099">1800&lt;/span>,&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">&amp;#34;NaptimeMinutes&amp;#34;: &lt;/span>&lt;span style="color:#099">60&lt;/span>,&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">&amp;#34;CheckIntervalSeconds&amp;#34;: &lt;/span>&lt;span style="color:#099">60&lt;/span>,&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">&amp;#34;EnableInstanceTags&amp;#34;: &lt;/span>&lt;span style="color:#000;font-weight:bold">true&lt;/span>,&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">&amp;#34;DetailedInstanceTags&amp;#34;: &lt;/span>&lt;span style="color:#000;font-weight:bold">true&lt;/span>,&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">&amp;#34;TaggingPrefix&amp;#34;: &lt;/span>&lt;span style="color:#d14">&amp;#34;CloudSnooze&amp;#34;&lt;/span>,&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">&amp;#34;GPUMonitoringEnabled&amp;#34;: &lt;/span>&lt;span style="color:#000;font-weight:bold">true&lt;/span>,&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">&amp;#34;AWSRegion&amp;#34;: &lt;/span>&lt;span style="color:#d14">&amp;#34;${AWS::Region}&amp;#34;&lt;/span>,&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">&amp;#34;Logging&amp;#34;: &lt;/span>{&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">&amp;#34;EnableCloudWatch&amp;#34;: &lt;/span>&lt;span style="color:#000;font-weight:bold">true&lt;/span>,&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">&amp;#34;CloudWatchLogGroup&amp;#34;: &lt;/span>&lt;span style="color:#d14">&amp;#34;/aws/cloudsnooze/instance-logs&amp;#34;&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>}&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>}&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>EOF&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#998;font-style:italic"># Start the service&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>systemctl enable snoozed&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>systemctl start snoozed&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">&lt;/span>&lt;span style="color:#000080">Mappings&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">RegionMap&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">us-east-1&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">AMI&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>ami-0c55b159cbfafe1f0&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">us-east-2&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">AMI&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>ami-05d72852800cbf29e&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">us-west-1&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">AMI&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>ami-0f2176987ee50226e&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">us-west-2&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">AMI&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>ami-01fee56b22f308154&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">&lt;/span>&lt;span style="color:#000080">Outputs&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">InstanceId&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">Description&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>Instance ID of the CloudSnooze instance&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">Value&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>!Ref CloudSnoozeInstance&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">PublicDNS&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">Description&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>Public DNS of the CloudSnooze instance&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#000080">Value&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>!GetAtt CloudSnoozeInstance.PublicDnsName&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="terraform-template">Terraform Template&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-hcl" data-lang="hcl">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">provider&lt;/span> &lt;span style="color:#d14">&amp;#34;aws&amp;#34;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> region &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000;font-weight:bold">var&lt;/span>.&lt;span style="color:#000;font-weight:bold">aws_region&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">variable&lt;/span> &lt;span style="color:#d14">&amp;#34;aws_region&amp;#34;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> default &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#d14">&amp;#34;us-east-1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">variable&lt;/span> &lt;span style="color:#d14">&amp;#34;instance_type&amp;#34;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> default &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#d14">&amp;#34;t3.medium&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">variable&lt;/span> &lt;span style="color:#d14">&amp;#34;key_name&amp;#34;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> description &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#d14">&amp;#34;SSH key for instance access&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">variable&lt;/span> &lt;span style="color:#d14">&amp;#34;vpc_id&amp;#34;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> description &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#d14">&amp;#34;VPC for deployment&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">variable&lt;/span> &lt;span style="color:#d14">&amp;#34;subnet_id&amp;#34;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> description &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#d14">&amp;#34;Subnet for deployment&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">variable&lt;/span> &lt;span style="color:#d14">&amp;#34;cloudsnooze_version&amp;#34;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> default &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#d14">&amp;#34;0.1.0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> description &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#d14">&amp;#34;CloudSnooze version to deploy&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;span style="color:#998;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"># IAM Role and Policy
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span>&lt;span style="color:#000;font-weight:bold">resource&lt;/span> &lt;span style="color:#d14">&amp;#34;aws_iam_role&amp;#34; &amp;#34;cloudsnooze_role&amp;#34;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#d14">&amp;#34;cloudsnooze-instance-role&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> assume_role_policy &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000;font-weight:bold">jsonencode&lt;/span>({
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Version &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#d14">&amp;#34;2012-10-17&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Statement &lt;span style="color:#000;font-weight:bold">=&lt;/span> [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Action &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#d14">&amp;#34;sts:AssumeRole&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Effect &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#d14">&amp;#34;Allow&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Principal &lt;span style="color:#000;font-weight:bold">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Service &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#d14">&amp;#34;ec2.amazonaws.com&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> })
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">resource&lt;/span> &lt;span style="color:#d14">&amp;#34;aws_iam_role_policy&amp;#34; &amp;#34;cloudsnooze_policy&amp;#34;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#d14">&amp;#34;cloudsnooze-instance-policy&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> role &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000;font-weight:bold">aws_iam_role&lt;/span>.&lt;span style="color:#000;font-weight:bold">cloudsnooze_role&lt;/span>.&lt;span style="color:#000;font-weight:bold">id&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> policy &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000;font-weight:bold">jsonencode&lt;/span>({
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Version &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#d14">&amp;#34;2012-10-17&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Statement &lt;span style="color:#000;font-weight:bold">=&lt;/span> [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Action &lt;span style="color:#000;font-weight:bold">=&lt;/span> [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;ec2:StopInstances&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;ec2:DescribeInstances&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;ec2:CreateTags&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;ec2:DescribeTags&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Effect &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#d14">&amp;#34;Allow&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Resource &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#d14">&amp;#34;*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Action &lt;span style="color:#000;font-weight:bold">=&lt;/span> [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;logs:CreateLogGroup&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;logs:CreateLogStream&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;logs:PutLogEvents&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Effect &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#d14">&amp;#34;Allow&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Resource &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#d14">&amp;#34;arn:aws:logs:*:*:log-group:/aws/cloudsnooze/*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> })
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">resource&lt;/span> &lt;span style="color:#d14">&amp;#34;aws_iam_instance_profile&amp;#34; &amp;#34;cloudsnooze_profile&amp;#34;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#d14">&amp;#34;cloudsnooze-instance-profile&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> role &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000;font-weight:bold">aws_iam_role&lt;/span>.&lt;span style="color:#000;font-weight:bold">cloudsnooze_role&lt;/span>.&lt;span style="color:#000;font-weight:bold">name&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;span style="color:#998;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"># Security Group
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span>&lt;span style="color:#000;font-weight:bold">resource&lt;/span> &lt;span style="color:#d14">&amp;#34;aws_security_group&amp;#34; &amp;#34;cloudsnooze_sg&amp;#34;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#d14">&amp;#34;cloudsnooze-sg&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> description &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#d14">&amp;#34;Security group for CloudSnooze instance&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vpc_id &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000;font-weight:bold">var&lt;/span>.&lt;span style="color:#000;font-weight:bold">vpc_id&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">ingress&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> from_port &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#099">22&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> to_port &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#099">22&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> protocol &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#d14">&amp;#34;tcp&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cidr_blocks &lt;span style="color:#000;font-weight:bold">=&lt;/span> [&lt;span style="color:#d14">&amp;#34;0.0.0.0/0&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">ingress&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> from_port &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#099">80&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> to_port &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#099">80&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> protocol &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#d14">&amp;#34;tcp&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cidr_blocks &lt;span style="color:#000;font-weight:bold">=&lt;/span> [&lt;span style="color:#d14">&amp;#34;0.0.0.0/0&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">ingress&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> from_port &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#099">443&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> to_port &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#099">443&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> protocol &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#d14">&amp;#34;tcp&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cidr_blocks &lt;span style="color:#000;font-weight:bold">=&lt;/span> [&lt;span style="color:#d14">&amp;#34;0.0.0.0/0&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">egress&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> from_port &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#099">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> to_port &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#099">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> protocol &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#d14">&amp;#34;-1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cidr_blocks &lt;span style="color:#000;font-weight:bold">=&lt;/span> [&lt;span style="color:#d14">&amp;#34;0.0.0.0/0&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;span style="color:#998;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"># EC2 Instance
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span>&lt;span style="color:#000;font-weight:bold">resource&lt;/span> &lt;span style="color:#d14">&amp;#34;aws_instance&amp;#34; &amp;#34;cloudsnooze_instance&amp;#34;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ami &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#d14">&amp;#34;ami-0c55b159cbfafe1f0&amp;#34;&lt;/span>&lt;span style="color:#998;font-style:italic"> # Ubuntu 20.04 LTS
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span> instance_type &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000;font-weight:bold">var&lt;/span>.&lt;span style="color:#000;font-weight:bold">instance_type&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> key_name &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000;font-weight:bold">var&lt;/span>.&lt;span style="color:#000;font-weight:bold">key_name&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> subnet_id &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000;font-weight:bold">var&lt;/span>.&lt;span style="color:#000;font-weight:bold">subnet_id&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vpc_security_group_ids &lt;span style="color:#000;font-weight:bold">=&lt;/span> [&lt;span style="color:#000;font-weight:bold">aws_security_group&lt;/span>.&lt;span style="color:#000;font-weight:bold">cloudsnooze_sg&lt;/span>.&lt;span style="color:#000;font-weight:bold">id&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> iam_instance_profile &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000;font-weight:bold">aws_iam_instance_profile&lt;/span>.&lt;span style="color:#000;font-weight:bold">cloudsnooze_profile&lt;/span>.&lt;span style="color:#000;font-weight:bold">name&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> user_data &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">&amp;lt;&amp;lt;-&lt;/span>&lt;span style="color:#000;font-weight:bold">EOF&lt;/span>&lt;span style="color:#998;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"> #!/bin/bash -xe
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"> # Install CloudSnooze
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span> &lt;span style="color:#000;font-weight:bold">mkdir&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">-&lt;/span>&lt;span style="color:#000;font-weight:bold">p&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">/&lt;/span>&lt;span style="color:#000;font-weight:bold">opt&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">/&lt;/span>&lt;span style="color:#000;font-weight:bold">cloudsnooze&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">cd&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">/&lt;/span>&lt;span style="color:#000;font-weight:bold">opt&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">/&lt;/span>&lt;span style="color:#000;font-weight:bold">cloudsnooze&lt;/span>&lt;span style="color:#998;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"> # Install dependencies
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span> &lt;span style="color:#000;font-weight:bold">apt&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">-&lt;/span>&lt;span style="color:#000;font-weight:bold">get&lt;/span> &lt;span style="color:#000;font-weight:bold">update&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">apt&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">-&lt;/span>&lt;span style="color:#000;font-weight:bold">get&lt;/span> &lt;span style="color:#000;font-weight:bold">install&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">-&lt;/span>&lt;span style="color:#000;font-weight:bold">y&lt;/span> &lt;span style="color:#000;font-weight:bold">curl&lt;/span> &lt;span style="color:#000;font-weight:bold">systemd&lt;/span>&lt;span style="color:#998;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"> # Download and install CloudSnooze
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span> &lt;span style="color:#000;font-weight:bold">curl&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">-&lt;/span>&lt;span style="color:#000;font-weight:bold">LO&lt;/span> &lt;span style="color:#000;font-weight:bold">https&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">://&lt;/span>&lt;span style="color:#000;font-weight:bold">github&lt;/span>.&lt;span style="color:#000;font-weight:bold">com&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">/&lt;/span>&lt;span style="color:#000;font-weight:bold">scttfrdmn&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">/&lt;/span>&lt;span style="color:#000;font-weight:bold">cloudsnooze&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">/&lt;/span>&lt;span style="color:#000;font-weight:bold">releases&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">/&lt;/span>&lt;span style="color:#000;font-weight:bold">download&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">/&lt;/span>&lt;span style="color:#000;font-weight:bold">v&lt;/span>&lt;span style="color:#d14">${&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">var&lt;/span>.&lt;span style="color:#a61717;background-color:#e3d2d2">cloudsnooze_version&lt;/span>&lt;span style="color:#d14">}&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">/&lt;/span>&lt;span style="color:#000;font-weight:bold">cloudsnooze_&lt;/span>&lt;span style="color:#d14">${&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">var&lt;/span>.&lt;span style="color:#a61717;background-color:#e3d2d2">cloudsnooze_version&lt;/span>&lt;span style="color:#d14">}&lt;/span>&lt;span style="color:#000;font-weight:bold">_amd64&lt;/span>.&lt;span style="color:#000;font-weight:bold">deb&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">dpkg&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">-&lt;/span>&lt;span style="color:#000;font-weight:bold">i&lt;/span> &lt;span style="color:#000;font-weight:bold">cloudsnooze_&lt;/span>&lt;span style="color:#d14">${&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">var&lt;/span>.&lt;span style="color:#a61717;background-color:#e3d2d2">cloudsnooze_version&lt;/span>&lt;span style="color:#d14">}&lt;/span>&lt;span style="color:#000;font-weight:bold">_amd64&lt;/span>.&lt;span style="color:#000;font-weight:bold">deb&lt;/span>&lt;span style="color:#998;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"> # Configure CloudSnooze
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span> &lt;span style="color:#000;font-weight:bold">cat&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">&amp;gt;&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">/&lt;/span>&lt;span style="color:#000;font-weight:bold">etc&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">/&lt;/span>&lt;span style="color:#000;font-weight:bold">snooze&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">/&lt;/span>&lt;span style="color:#000;font-weight:bold">snooze&lt;/span>.&lt;span style="color:#000;font-weight:bold">json&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">EOF&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;CPUThresholdPercent&amp;#34;&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">:&lt;/span> &lt;span style="color:#099">5&lt;/span>.&lt;span style="color:#099">0&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;MemoryThresholdPercent&amp;#34;&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">:&lt;/span> &lt;span style="color:#099">10&lt;/span>.&lt;span style="color:#099">0&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;NetworkThresholdKBps&amp;#34;&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">:&lt;/span> &lt;span style="color:#099">5&lt;/span>.&lt;span style="color:#099">0&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;DiskIOThresholdKBps&amp;#34;&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">:&lt;/span> &lt;span style="color:#099">10&lt;/span>.&lt;span style="color:#099">0&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;GPUThresholdPercent&amp;#34;&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">:&lt;/span> &lt;span style="color:#099">5&lt;/span>.&lt;span style="color:#099">0&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;InputIdleThresholdSecs&amp;#34;&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">:&lt;/span> &lt;span style="color:#099">1800&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;NaptimeMinutes&amp;#34;&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">:&lt;/span> &lt;span style="color:#099">60&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;CheckIntervalSeconds&amp;#34;&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">:&lt;/span> &lt;span style="color:#099">60&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;EnableInstanceTags&amp;#34;&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">:&lt;/span> &lt;span style="color:#458;font-weight:bold">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;DetailedInstanceTags&amp;#34;&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">:&lt;/span> &lt;span style="color:#458;font-weight:bold">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;TaggingPrefix&amp;#34;: &amp;#34;CloudSnooze&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;GPUMonitoringEnabled&amp;#34;&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">:&lt;/span> &lt;span style="color:#458;font-weight:bold">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;AWSRegion&amp;#34;: &amp;#34;${var.aws_region}&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;Logging&amp;#34;&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">:&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;EnableCloudWatch&amp;#34;&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">:&lt;/span> &lt;span style="color:#458;font-weight:bold">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;CloudWatchLogGroup&amp;#34;: &amp;#34;/aws/cloudsnooze/instance-logs&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">EOF&lt;/span>&lt;span style="color:#998;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"> # Start the service
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span> &lt;span style="color:#000;font-weight:bold">systemctl&lt;/span> &lt;span style="color:#000;font-weight:bold">enable&lt;/span> &lt;span style="color:#000;font-weight:bold">snoozed&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">systemctl&lt;/span> &lt;span style="color:#000;font-weight:bold">start&lt;/span> &lt;span style="color:#000;font-weight:bold">snoozed&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tags &lt;span style="color:#000;font-weight:bold">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Name &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#d14">&amp;#34;CloudSnooze-Instance&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">output&lt;/span> &lt;span style="color:#d14">&amp;#34;instance_id&amp;#34;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> value &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000;font-weight:bold">aws_instance&lt;/span>.&lt;span style="color:#000;font-weight:bold">cloudsnooze_instance&lt;/span>.&lt;span style="color:#000;font-weight:bold">id&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">output&lt;/span> &lt;span style="color:#d14">&amp;#34;public_dns&amp;#34;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> value &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000;font-weight:bold">aws_instance&lt;/span>.&lt;span style="color:#000;font-weight:bold">cloudsnooze_instance&lt;/span>.&lt;span style="color:#000;font-weight:bold">public_dns&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="user-data-scripts">User Data Scripts&lt;/h2>
&lt;h3 id="amazon-linux-2">Amazon Linux 2&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#999;font-weight:bold;font-style:italic">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#999;font-weight:bold;font-style:italic">&lt;/span>&lt;span style="color:#998;font-style:italic"># CloudSnooze installation for Amazon Linux 2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"># Install dependencies&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>yum update -y
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>yum install -y curl tar
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"># Download and install CloudSnooze&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>curl -LO https://github.com/scttfrdmn/cloudsnooze/releases/download/v0.1.0/cloudsnooze-0.1.0-1.x86_64.rpm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"># Use latest version instead:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"># curl -LO https://github.com/scttfrdmn/cloudsnooze/releases/download/latest/cloudsnooze-latest.x86_64.rpm&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rpm -i cloudsnooze-0.1.0-1.x86_64.rpm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"># Configure CloudSnooze&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cat &amp;gt; /etc/snooze/snooze.json &lt;span style="color:#d14">&amp;lt;&amp;lt; &amp;#39;EOF&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d14">{
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d14"> &amp;#34;CPUThresholdPercent&amp;#34;: 5.0,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d14"> &amp;#34;MemoryThresholdPercent&amp;#34;: 10.0,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d14"> &amp;#34;NetworkThresholdKBps&amp;#34;: 5.0,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d14"> &amp;#34;DiskIOThresholdKBps&amp;#34;: 10.0,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d14"> &amp;#34;GPUThresholdPercent&amp;#34;: 5.0,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d14"> &amp;#34;InputIdleThresholdSecs&amp;#34;: 1800,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d14"> &amp;#34;NaptimeMinutes&amp;#34;: 60,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d14"> &amp;#34;CheckIntervalSeconds&amp;#34;: 60,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d14"> &amp;#34;EnableInstanceTags&amp;#34;: true,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d14"> &amp;#34;DetailedInstanceTags&amp;#34;: true,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d14"> &amp;#34;TaggingPrefix&amp;#34;: &amp;#34;CloudSnooze&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d14"> &amp;#34;GPUMonitoringEnabled&amp;#34;: true,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d14"> &amp;#34;AWSRegion&amp;#34;: &amp;#34;us-east-1&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d14"> &amp;#34;Logging&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d14"> &amp;#34;EnableCloudWatch&amp;#34;: true,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d14"> &amp;#34;CloudWatchLogGroup&amp;#34;: &amp;#34;/aws/cloudsnooze/instance-logs&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d14"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d14">}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d14">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"># Start the service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>systemctl &lt;span style="color:#0086b3">enable&lt;/span> snoozed
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>systemctl start snoozed
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="ubuntudebian">Ubuntu/Debian&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#999;font-weight:bold;font-style:italic">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#999;font-weight:bold;font-style:italic">&lt;/span>&lt;span style="color:#998;font-style:italic"># CloudSnooze installation for Ubuntu/Debian&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"># Install dependencies&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apt-get update
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apt-get install -y curl systemd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"># Download and install CloudSnooze&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>curl -LO https://github.com/scttfrdmn/cloudsnooze/releases/download/v0.1.0/cloudsnooze_0.1.0_amd64.deb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"># Use latest version instead:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"># curl -LO https://github.com/scttfrdmn/cloudsnooze/releases/download/latest/cloudsnooze-latest_amd64.deb&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dpkg -i cloudsnooze_0.1.0_amd64.deb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"># Configure CloudSnooze&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cat &amp;gt; /etc/snooze/snooze.json &lt;span style="color:#d14">&amp;lt;&amp;lt; &amp;#39;EOF&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d14">{
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d14"> &amp;#34;CPUThresholdPercent&amp;#34;: 5.0,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d14"> &amp;#34;MemoryThresholdPercent&amp;#34;: 10.0,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d14"> &amp;#34;NetworkThresholdKBps&amp;#34;: 5.0,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d14"> &amp;#34;DiskIOThresholdKBps&amp;#34;: 10.0,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d14"> &amp;#34;GPUThresholdPercent&amp;#34;: 5.0,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d14"> &amp;#34;InputIdleThresholdSecs&amp;#34;: 1800,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d14"> &amp;#34;NaptimeMinutes&amp;#34;: 60,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d14"> &amp;#34;CheckIntervalSeconds&amp;#34;: 60,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d14"> &amp;#34;EnableInstanceTags&amp;#34;: true,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d14"> &amp;#34;DetailedInstanceTags&amp;#34;: true,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d14"> &amp;#34;TaggingPrefix&amp;#34;: &amp;#34;CloudSnooze&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d14"> &amp;#34;GPUMonitoringEnabled&amp;#34;: true,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d14"> &amp;#34;AWSRegion&amp;#34;: &amp;#34;us-east-1&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d14"> &amp;#34;Logging&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d14"> &amp;#34;EnableCloudWatch&amp;#34;: true,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d14"> &amp;#34;CloudWatchLogGroup&amp;#34;: &amp;#34;/aws/cloudsnooze/instance-logs&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d14"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d14">}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d14">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"># Start the service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>systemctl &lt;span style="color:#0086b3">enable&lt;/span> snoozed
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>systemctl start snoozed
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="version-information">Version Information&lt;/h2>
&lt;p>This deployment template is compatible with CloudSnooze v0.1.0 and uses the versioning scheme documented in the packaging system.&lt;/p>
&lt;p>For latest package links, use:&lt;/p>
&lt;ul>
&lt;li>DEB: &lt;code>https://github.com/scttfrdmn/cloudsnooze/releases/download/latest/cloudsnooze-latest_amd64.deb&lt;/code>&lt;/li>
&lt;li>RPM: &lt;code>https://github.com/scttfrdmn/cloudsnooze/releases/download/latest/cloudsnooze-latest.x86_64.rpm&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>For specific version links, use:&lt;/p>
&lt;ul>
&lt;li>DEB: &lt;code>https://github.com/scttfrdmn/cloudsnooze/releases/download/v0.1.0/cloudsnooze_0.1.0_amd64.deb&lt;/code>&lt;/li>
&lt;li>RPM: &lt;code>https://github.com/scttfrdmn/cloudsnooze/releases/download/v0.1.0/cloudsnooze-0.1.0-1.x86_64.rpm&lt;/code>&lt;/li>
&lt;/ul></description></item><item><title>Docs:</title><link>https://cloudsnooze.io/docs/design/integration-roadmap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cloudsnooze.io/docs/design/integration-roadmap/</guid><description>
&lt;!--
Copyright 2025 Scott Friedman and CloudSnooze Contributors
SPDX-License-Identifier: Apache-2.0
-->
&lt;h1 id="cloudsnooze-integration-roadmap">CloudSnooze Integration Roadmap&lt;/h1>
&lt;p>This document outlines the plan for integrating CloudSnooze with external communication platforms and automation services, enhancing the project&amp;rsquo;s flexibility and utility.&lt;/p>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>CloudSnooze provides powerful cloud instance management, but its effectiveness is enhanced when integrated with external services for notifications, automation, and data flow. This roadmap details how CloudSnooze will expand its integration capabilities to support platforms like Slack, Microsoft Teams, and automation hubs like Zapier, Make.com (formerly Integromat), and n8n.&lt;/p>
&lt;h2 id="integration-types">Integration Types&lt;/h2>
&lt;p>The integration strategy involves three primary methods:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Webhook-Based Integration&lt;/strong>: Send and receive data via HTTP webhooks&lt;/li>
&lt;li>&lt;strong>Direct API Integration&lt;/strong>: Purpose-built connectors for specific services&lt;/li>
&lt;li>&lt;strong>Integration Hub Support&lt;/strong>: Ready-made templates for automation platforms&lt;/li>
&lt;/ol>
&lt;h2 id="implementation-phases">Implementation Phases&lt;/h2>
&lt;h3 id="phase-1-core-webhook-architecture-q3-2025">Phase 1: Core Webhook Architecture (Q3 2025)&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Webhook Emission Framework&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Design a flexible event-based webhook system&lt;/li>
&lt;li>Implement configurable HTTP POST requests for system events&lt;/li>
&lt;li>Create payload templates for different event types&lt;/li>
&lt;li>Develop security features (HMAC signing, API keys)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Notification Events&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Instance start/stop events&lt;/li>
&lt;li>Threshold crossing alerts&lt;/li>
&lt;li>Error and warning notifications&lt;/li>
&lt;li>Cost-saving summaries&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Configuration System&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Add webhook configuration to main config&lt;/li>
&lt;li>Implement webhook management via CLI&lt;/li>
&lt;li>Add webhook testing capabilities&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">// Example webhook configuration
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;webhooks&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;instance_stopped&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;url&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;method&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;POST&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;headers&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;Content-Type&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;application/json&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;payload_template&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;slack_instance_stopped&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;enabled&amp;#34;&lt;/span>: &lt;span style="color:#000;font-weight:bold">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;retry_count&amp;#34;&lt;/span>: &lt;span style="color:#099">3&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;include_metrics&amp;#34;&lt;/span>: &lt;span style="color:#000;font-weight:bold">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="phase-2-direct-platform-integrations-q4-2025">Phase 2: Direct Platform Integrations (Q4 2025)&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Slack Integration with Interactive Controls&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>OAuth-based authentication&lt;/li>
&lt;li>Rich message formatting with metrics displays&lt;/li>
&lt;li>&lt;strong>Interactive components for two-way communication:&lt;/strong>
&lt;ul>
&lt;li>Action buttons for direct instance control (start/stop/restart)&lt;/li>
&lt;li>Custom commands via Slack Bot (&lt;code>/snooze stop i-1234567890abcdef0&lt;/code>)&lt;/li>
&lt;li>Interactive dialogs for configuration changes&lt;/li>
&lt;li>Approval workflows for critical actions&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Persistent context for conversation threads&lt;/li>
&lt;li>Channel configuration by event type&lt;/li>
&lt;li>User permission mapping between Slack and CloudSnooze&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Microsoft Teams Integration with Interactive Features&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Teams connector support with bot functionality&lt;/li>
&lt;li>Adaptive card templates for metrics visualization&lt;/li>
&lt;li>&lt;strong>Interactive components for two-way control:&lt;/strong>
&lt;ul>
&lt;li>Action buttons for direct instance management&lt;/li>
&lt;li>Command support within Teams chat (&lt;code>@CloudSnooze restart i-1234567890abcdef0&lt;/code>)&lt;/li>
&lt;li>Interactive forms for configuration changes&lt;/li>
&lt;li>Actionable notifications with approval workflows&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Tab integration for persistent dashboard&lt;/li>
&lt;li>Integration with Teams permissions model&lt;/li>
&lt;li>Message threading for context preservation&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Email Notification System&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>SMTP-based notifications&lt;/li>
&lt;li>HTML email templates with metrics&lt;/li>
&lt;li>Customizable alert thresholds&lt;/li>
&lt;li>Digest options (daily/weekly summaries)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="phase-3-integration-hub-support-q1-2026">Phase 3: Integration Hub Support (Q1 2026)&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Zapier Integration&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Create official Zapier app&lt;/li>
&lt;li>Define triggers (instance events, threshold alerts)&lt;/li>
&lt;li>Implement actions (instance control, configuration)&lt;/li>
&lt;li>Provide pre-built Zap templates&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Make.com (Integromat) Support&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Develop Make.com app module&lt;/li>
&lt;li>Custom scenario templates&lt;/li>
&lt;li>Data transformation helpers&lt;/li>
&lt;li>Scheduling and conditional flows&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>n8n Compatibility&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Node development for n8n&lt;/li>
&lt;li>Credential handling&lt;/li>
&lt;li>Workflow templates for common use cases&lt;/li>
&lt;li>Self-hosted integration guidance&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="phase-4-advanced-integration-features-q2-2026">Phase 4: Advanced Integration Features (Q2 2026)&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Bidirectional Control API&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Remote instance management&lt;/li>
&lt;li>Configuration updates via API&lt;/li>
&lt;li>Secure authentication system&lt;/li>
&lt;li>Rate limiting and access control&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Custom Integration Framework&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Plugin system for third-party integrations&lt;/li>
&lt;li>Integration SDK with documentation&lt;/li>
&lt;li>Testing framework for custom integrations&lt;/li>
&lt;li>Marketplace for community integrations&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Data Export Options&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>CSV/JSON data export of metrics&lt;/li>
&lt;li>Integration with monitoring platforms&lt;/li>
&lt;li>Cost analysis data for BI tools&lt;/li>
&lt;li>Historical data warehousing options&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="specific-implementation-examples">Specific Implementation Examples&lt;/h2>
&lt;h3 id="slack-interactive-integration-example">Slack Interactive Integration Example&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">// slack.go
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span>&lt;span style="color:#000;font-weight:bold">package&lt;/span> integrations
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">import&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;bytes&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;encoding/json&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;net/http&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;time&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;github.com/scttfrdmn/cloudsnooze/daemon/common&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">type&lt;/span> SlackMessage &lt;span style="color:#000;font-weight:bold">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Text &lt;span style="color:#458;font-weight:bold">string&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;text,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Blocks []SlackBlock &lt;span style="color:#d14">`json:&amp;#34;blocks,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Attachments []&lt;span style="color:#000;font-weight:bold">interface&lt;/span>{} &lt;span style="color:#d14">`json:&amp;#34;attachments,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">type&lt;/span> SlackBlock &lt;span style="color:#000;font-weight:bold">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Type &lt;span style="color:#458;font-weight:bold">string&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;type&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Text &lt;span style="color:#000;font-weight:bold">*&lt;/span>SlackText &lt;span style="color:#d14">`json:&amp;#34;text,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Fields []SlackText &lt;span style="color:#d14">`json:&amp;#34;fields,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Elements []&lt;span style="color:#000;font-weight:bold">interface&lt;/span>{} &lt;span style="color:#d14">`json:&amp;#34;elements,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> BlockID &lt;span style="color:#458;font-weight:bold">string&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;block_id,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">type&lt;/span> SlackText &lt;span style="color:#000;font-weight:bold">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Type &lt;span style="color:#458;font-weight:bold">string&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;type&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Text &lt;span style="color:#458;font-weight:bold">string&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;text&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">type&lt;/span> SlackButton &lt;span style="color:#000;font-weight:bold">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Type &lt;span style="color:#458;font-weight:bold">string&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;type&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Text SlackText &lt;span style="color:#d14">`json:&amp;#34;text&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ActionID &lt;span style="color:#458;font-weight:bold">string&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;action_id&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Value &lt;span style="color:#458;font-weight:bold">string&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;value&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Style &lt;span style="color:#458;font-weight:bold">string&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;style,omitempty&amp;#34;`&lt;/span> &lt;span style="color:#998;font-style:italic">// primary, danger
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">// SendSlackInstanceStoppedNotification sends an interactive notification to Slack
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">// with buttons that allow direct control of the instance
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span>&lt;span style="color:#000;font-weight:bold">func&lt;/span> &lt;span style="color:#900;font-weight:bold">SendSlackInstanceStoppedNotification&lt;/span>(webhook &lt;span style="color:#458;font-weight:bold">string&lt;/span>, metrics common.SystemMetrics, instanceID, region, reason &lt;span style="color:#458;font-weight:bold">string&lt;/span>) &lt;span style="color:#458;font-weight:bold">error&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> message &lt;span style="color:#000;font-weight:bold">:=&lt;/span> SlackMessage{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Blocks: []SlackBlock{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Type: &lt;span style="color:#d14">&amp;#34;header&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Text: &lt;span style="color:#000;font-weight:bold">&amp;amp;&lt;/span>SlackText{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Type: &lt;span style="color:#d14">&amp;#34;plain_text&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Text: &lt;span style="color:#d14">&amp;#34;CloudSnooze: Instance Stopped 💤&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Type: &lt;span style="color:#d14">&amp;#34;section&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Text: &lt;span style="color:#000;font-weight:bold">&amp;amp;&lt;/span>SlackText{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Type: &lt;span style="color:#d14">&amp;#34;mrkdwn&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Text: fmt.&lt;span style="color:#900;font-weight:bold">Sprintf&lt;/span>(&lt;span style="color:#d14">&amp;#34;Instance `%s` has been stopped due to inactivity.&amp;#34;&lt;/span>, instanceID),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Type: &lt;span style="color:#d14">&amp;#34;section&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Fields: []SlackText{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {Type: &lt;span style="color:#d14">&amp;#34;mrkdwn&amp;#34;&lt;/span>, Text: fmt.&lt;span style="color:#900;font-weight:bold">Sprintf&lt;/span>(&lt;span style="color:#d14">&amp;#34;*Stop Reason:*\n%s&amp;#34;&lt;/span>, reason)},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {Type: &lt;span style="color:#d14">&amp;#34;mrkdwn&amp;#34;&lt;/span>, Text: fmt.&lt;span style="color:#900;font-weight:bold">Sprintf&lt;/span>(&lt;span style="color:#d14">&amp;#34;*Stop Time:*\n%s&amp;#34;&lt;/span>, time.&lt;span style="color:#900;font-weight:bold">Now&lt;/span>().&lt;span style="color:#900;font-weight:bold">Format&lt;/span>(time.RFC1123))},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {Type: &lt;span style="color:#d14">&amp;#34;mrkdwn&amp;#34;&lt;/span>, Text: fmt.&lt;span style="color:#900;font-weight:bold">Sprintf&lt;/span>(&lt;span style="color:#d14">&amp;#34;*Region:*\n%s&amp;#34;&lt;/span>, region)},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {Type: &lt;span style="color:#d14">&amp;#34;mrkdwn&amp;#34;&lt;/span>, Text: fmt.&lt;span style="color:#900;font-weight:bold">Sprintf&lt;/span>(&lt;span style="color:#d14">&amp;#34;*Instance ID:*\n%s&amp;#34;&lt;/span>, instanceID)},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Type: &lt;span style="color:#d14">&amp;#34;section&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Fields: []SlackText{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {Type: &lt;span style="color:#d14">&amp;#34;mrkdwn&amp;#34;&lt;/span>, Text: fmt.&lt;span style="color:#900;font-weight:bold">Sprintf&lt;/span>(&lt;span style="color:#d14">&amp;#34;*CPU Usage:*\n%.2f%%&amp;#34;&lt;/span>, metrics.CPUUsage)},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {Type: &lt;span style="color:#d14">&amp;#34;mrkdwn&amp;#34;&lt;/span>, Text: fmt.&lt;span style="color:#900;font-weight:bold">Sprintf&lt;/span>(&lt;span style="color:#d14">&amp;#34;*Memory Usage:*\n%.2f%%&amp;#34;&lt;/span>, metrics.MemoryUsage)},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {Type: &lt;span style="color:#d14">&amp;#34;mrkdwn&amp;#34;&lt;/span>, Text: fmt.&lt;span style="color:#900;font-weight:bold">Sprintf&lt;/span>(&lt;span style="color:#d14">&amp;#34;*Network:*\n%.2f KB/s&amp;#34;&lt;/span>, metrics.NetworkRate)},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {Type: &lt;span style="color:#d14">&amp;#34;mrkdwn&amp;#34;&lt;/span>, Text: fmt.&lt;span style="color:#900;font-weight:bold">Sprintf&lt;/span>(&lt;span style="color:#d14">&amp;#34;*Disk I/O:*\n%.2f KB/s&amp;#34;&lt;/span>, metrics.DiskIORate)},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Type: &lt;span style="color:#d14">&amp;#34;actions&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> BlockID: &lt;span style="color:#d14">&amp;#34;instance_actions_&amp;#34;&lt;/span> &lt;span style="color:#000;font-weight:bold">+&lt;/span> instanceID,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Elements: []&lt;span style="color:#000;font-weight:bold">interface&lt;/span>{}{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SlackButton{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Type: &lt;span style="color:#d14">&amp;#34;button&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Text: SlackText{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Type: &lt;span style="color:#d14">&amp;#34;plain_text&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Text: &lt;span style="color:#d14">&amp;#34;Start Instance&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ActionID: &lt;span style="color:#d14">&amp;#34;start_instance&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Value: instanceID &lt;span style="color:#000;font-weight:bold">+&lt;/span> &lt;span style="color:#d14">&amp;#34;|&amp;#34;&lt;/span> &lt;span style="color:#000;font-weight:bold">+&lt;/span> region,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Style: &lt;span style="color:#d14">&amp;#34;primary&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SlackButton{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Type: &lt;span style="color:#d14">&amp;#34;button&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Text: SlackText{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Type: &lt;span style="color:#d14">&amp;#34;plain_text&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Text: &lt;span style="color:#d14">&amp;#34;View Details&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ActionID: &lt;span style="color:#d14">&amp;#34;view_details&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Value: instanceID &lt;span style="color:#000;font-weight:bold">+&lt;/span> &lt;span style="color:#d14">&amp;#34;|&amp;#34;&lt;/span> &lt;span style="color:#000;font-weight:bold">+&lt;/span> region,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SlackButton{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Type: &lt;span style="color:#d14">&amp;#34;button&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Text: SlackText{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Type: &lt;span style="color:#d14">&amp;#34;plain_text&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Text: &lt;span style="color:#d14">&amp;#34;Change Thresholds&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ActionID: &lt;span style="color:#d14">&amp;#34;change_thresholds&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Value: instanceID &lt;span style="color:#000;font-weight:bold">+&lt;/span> &lt;span style="color:#d14">&amp;#34;|&amp;#34;&lt;/span> &lt;span style="color:#000;font-weight:bold">+&lt;/span> region,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Type: &lt;span style="color:#d14">&amp;#34;context&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Elements: []&lt;span style="color:#000;font-weight:bold">interface&lt;/span>{}{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SlackText{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Type: &lt;span style="color:#d14">&amp;#34;mrkdwn&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Text: fmt.&lt;span style="color:#900;font-weight:bold">Sprintf&lt;/span>(&lt;span style="color:#d14">&amp;#34;You can also use Slack commands like `/snooze start %s` or `/snooze status`&amp;#34;&lt;/span>, instanceID),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> payload, err &lt;span style="color:#000;font-weight:bold">:=&lt;/span> json.&lt;span style="color:#900;font-weight:bold">Marshal&lt;/span>(message)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">if&lt;/span> err &lt;span style="color:#000;font-weight:bold">!=&lt;/span> &lt;span style="color:#000;font-weight:bold">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">return&lt;/span> fmt.&lt;span style="color:#900;font-weight:bold">Errorf&lt;/span>(&lt;span style="color:#d14">&amp;#34;error marshaling Slack message: %w&amp;#34;&lt;/span>, err)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> resp, err &lt;span style="color:#000;font-weight:bold">:=&lt;/span> http.&lt;span style="color:#900;font-weight:bold">Post&lt;/span>(webhook, &lt;span style="color:#d14">&amp;#34;application/json&amp;#34;&lt;/span>, bytes.&lt;span style="color:#900;font-weight:bold">NewBuffer&lt;/span>(payload))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">if&lt;/span> err &lt;span style="color:#000;font-weight:bold">!=&lt;/span> &lt;span style="color:#000;font-weight:bold">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">return&lt;/span> fmt.&lt;span style="color:#900;font-weight:bold">Errorf&lt;/span>(&lt;span style="color:#d14">&amp;#34;error sending Slack notification: %w&amp;#34;&lt;/span>, err)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">defer&lt;/span> resp.Body.&lt;span style="color:#900;font-weight:bold">Close&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">if&lt;/span> resp.StatusCode &lt;span style="color:#000;font-weight:bold">!=&lt;/span> http.StatusOK {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">return&lt;/span> fmt.&lt;span style="color:#900;font-weight:bold">Errorf&lt;/span>(&lt;span style="color:#d14">&amp;#34;non-200 response from Slack: %d&amp;#34;&lt;/span>, resp.StatusCode)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">return&lt;/span> &lt;span style="color:#000;font-weight:bold">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">// HandleSlackInteraction processes interactive callbacks from Slack
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span>&lt;span style="color:#000;font-weight:bold">func&lt;/span> &lt;span style="color:#900;font-weight:bold">HandleSlackInteraction&lt;/span>(payload []&lt;span style="color:#458;font-weight:bold">byte&lt;/span>) (&lt;span style="color:#458;font-weight:bold">string&lt;/span>, &lt;span style="color:#458;font-weight:bold">error&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic">// Parse the interaction payload
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span> &lt;span style="color:#000;font-weight:bold">var&lt;/span> interaction &lt;span style="color:#000;font-weight:bold">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Type &lt;span style="color:#458;font-weight:bold">string&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;type&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Actions []&lt;span style="color:#000;font-weight:bold">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ActionID &lt;span style="color:#458;font-weight:bold">string&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;action_id&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Value &lt;span style="color:#458;font-weight:bold">string&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;value&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#d14">`json:&amp;#34;actions&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> User &lt;span style="color:#000;font-weight:bold">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ID &lt;span style="color:#458;font-weight:bold">string&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;id&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Username &lt;span style="color:#458;font-weight:bold">string&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;username&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#d14">`json:&amp;#34;user&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">if&lt;/span> err &lt;span style="color:#000;font-weight:bold">:=&lt;/span> json.&lt;span style="color:#900;font-weight:bold">Unmarshal&lt;/span>(payload, &lt;span style="color:#000;font-weight:bold">&amp;amp;&lt;/span>interaction); err &lt;span style="color:#000;font-weight:bold">!=&lt;/span> &lt;span style="color:#000;font-weight:bold">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">return&lt;/span> &lt;span style="color:#d14">&amp;#34;&amp;#34;&lt;/span>, fmt.&lt;span style="color:#900;font-weight:bold">Errorf&lt;/span>(&lt;span style="color:#d14">&amp;#34;error parsing interaction: %w&amp;#34;&lt;/span>, err)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic">// Only process button actions for now
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span> &lt;span style="color:#000;font-weight:bold">if&lt;/span> interaction.Type &lt;span style="color:#000;font-weight:bold">!=&lt;/span> &lt;span style="color:#d14">&amp;#34;block_actions&amp;#34;&lt;/span> &lt;span style="color:#000;font-weight:bold">||&lt;/span> &lt;span style="color:#0086b3">len&lt;/span>(interaction.Actions) &lt;span style="color:#000;font-weight:bold">==&lt;/span> &lt;span style="color:#099">0&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">return&lt;/span> &lt;span style="color:#d14">&amp;#34;Unsupported interaction type&amp;#34;&lt;/span>, &lt;span style="color:#000;font-weight:bold">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> action &lt;span style="color:#000;font-weight:bold">:=&lt;/span> interaction.Actions[&lt;span style="color:#099">0&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic">// Parse the value which contains instanceID and region
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span> parts &lt;span style="color:#000;font-weight:bold">:=&lt;/span> strings.&lt;span style="color:#900;font-weight:bold">Split&lt;/span>(action.Value, &lt;span style="color:#d14">&amp;#34;|&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">if&lt;/span> &lt;span style="color:#0086b3">len&lt;/span>(parts) &lt;span style="color:#000;font-weight:bold">!=&lt;/span> &lt;span style="color:#099">2&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">return&lt;/span> &lt;span style="color:#d14">&amp;#34;Invalid action value format&amp;#34;&lt;/span>, &lt;span style="color:#000;font-weight:bold">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> instanceID &lt;span style="color:#000;font-weight:bold">:=&lt;/span> parts[&lt;span style="color:#099">0&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> region &lt;span style="color:#000;font-weight:bold">:=&lt;/span> parts[&lt;span style="color:#099">1&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">switch&lt;/span> action.ActionID {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">case&lt;/span> &lt;span style="color:#d14">&amp;#34;start_instance&amp;#34;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic">// Call AWS API to start the instance
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span> err &lt;span style="color:#000;font-weight:bold">:=&lt;/span> &lt;span style="color:#900;font-weight:bold">startInstance&lt;/span>(region, instanceID)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">if&lt;/span> err &lt;span style="color:#000;font-weight:bold">!=&lt;/span> &lt;span style="color:#000;font-weight:bold">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">return&lt;/span> fmt.&lt;span style="color:#900;font-weight:bold">Sprintf&lt;/span>(&lt;span style="color:#d14">&amp;#34;Failed to start instance %s: %v&amp;#34;&lt;/span>, instanceID, err), &lt;span style="color:#000;font-weight:bold">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">return&lt;/span> fmt.&lt;span style="color:#900;font-weight:bold">Sprintf&lt;/span>(&lt;span style="color:#d14">&amp;#34;Instance %s is starting. This may take a few minutes.&amp;#34;&lt;/span>, instanceID), &lt;span style="color:#000;font-weight:bold">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">case&lt;/span> &lt;span style="color:#d14">&amp;#34;view_details&amp;#34;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic">// Fetch and return detailed information about the instance
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span> details, err &lt;span style="color:#000;font-weight:bold">:=&lt;/span> &lt;span style="color:#900;font-weight:bold">getInstanceDetails&lt;/span>(region, instanceID)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">if&lt;/span> err &lt;span style="color:#000;font-weight:bold">!=&lt;/span> &lt;span style="color:#000;font-weight:bold">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">return&lt;/span> fmt.&lt;span style="color:#900;font-weight:bold">Sprintf&lt;/span>(&lt;span style="color:#d14">&amp;#34;Failed to get details for instance %s: %v&amp;#34;&lt;/span>, instanceID, err), &lt;span style="color:#000;font-weight:bold">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">return&lt;/span> fmt.&lt;span style="color:#900;font-weight:bold">Sprintf&lt;/span>(&lt;span style="color:#d14">&amp;#34;*Instance Details*\n%s&amp;#34;&lt;/span>, details), &lt;span style="color:#000;font-weight:bold">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">case&lt;/span> &lt;span style="color:#d14">&amp;#34;change_thresholds&amp;#34;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic">// This would typically open a dialog, but for simplicity we&amp;#39;ll just acknowledge
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span> &lt;span style="color:#000;font-weight:bold">return&lt;/span> &lt;span style="color:#d14">&amp;#34;Opening threshold configuration dialog...&amp;#34;&lt;/span>, &lt;span style="color:#000;font-weight:bold">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">default&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">return&lt;/span> &lt;span style="color:#d14">&amp;#34;Unsupported action&amp;#34;&lt;/span>, &lt;span style="color:#000;font-weight:bold">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="zapier-integration-example">Zapier Integration Example&lt;/h3>
&lt;p>Zapier Trigger: &lt;code>instance_stopped&lt;/code>&lt;/p>
&lt;p>Trigger payload:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;event_type&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;instance_stopped&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;instance_id&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;i-1234567890abcdef0&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;timestamp&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;2025-06-15T14:23:45Z&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;region&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;us-east-1&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;metrics&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;cpu_usage&amp;#34;&lt;/span>: &lt;span style="color:#099">1.2&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;memory_usage&amp;#34;&lt;/span>: &lt;span style="color:#099">3.5&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;network_traffic&amp;#34;&lt;/span>: &lt;span style="color:#099">0.1&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;disk_io&amp;#34;&lt;/span>: &lt;span style="color:#099">0.02&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;reason&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;System idle for 30 minutes&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;cost_saved_estimate&amp;#34;&lt;/span>: &lt;span style="color:#099">0.125&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;instance_type&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;t3.medium&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="cli-command-additions">CLI Command Additions&lt;/h3>
&lt;pre tabindex="0">&lt;code># New CLI integration commands
snooze integrations list # List all configured integrations
snooze integrations add slack WEBHOOK_URL # Add Slack integration
snooze integrations add teams WEBHOOK_URL # Add Microsoft Teams integration
snooze integrations add email [options] # Add email notifications
snooze integrations test slack # Test Slack integration
snooze integrations remove slack # Remove Slack integration
snooze integrations export zapier # Generate Zapier integration files
&lt;/code>&lt;/pre>&lt;h2 id="user-benefits">User Benefits&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Enhanced Visibility&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Real-time notifications when instances are stopped&lt;/li>
&lt;li>Alerts when thresholds are approaching&lt;/li>
&lt;li>Cost-saving reports and insights&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Remote Management&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Control instances through familiar interfaces&lt;/li>
&lt;li>Automate responses to specific conditions&lt;/li>
&lt;li>Approval workflows for critical instances&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Workflow Automation&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Connect instance management to other systems&lt;/li>
&lt;li>Trigger workflows based on cloud events&lt;/li>
&lt;li>Chain actions across multiple services&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Organizational Awareness&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Keep teams informed of cost-saving activities&lt;/li>
&lt;li>Provide management with cost reduction metrics&lt;/li>
&lt;li>Alert developers when their instances are affected&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="architecture-diagram">Architecture Diagram&lt;/h2>
&lt;pre tabindex="0">&lt;code> ┌─────────────────┐
│ │
│ CloudSnooze │
│ │
└─────┬───────────┘
│
│ Events
│
┌────────▼─────────┐
│ │
│ Integration Hub │
│ │
└──┬──────┬────┬───┘
│ │ │
┌───────────────┘ │ └──────────────┐
│ │ │
┌────────▼─────────┐ ┌────────▼─────────┐ ┌───────▼────────┐
│ │ │ │ │ │
│ Direct Platform │ │ Webhooks │ │ Automation │
│ Integrations │ │ │ │ Platforms │
│ │ │ │ │ │
└──┬──────┬────────┘ └───────┬──────────┘ └──┬────────┬───┘
│ │ │ │ │
┌─────▼─┐ ┌──▼────┐ ┌─────▼─────┐ ┌───▼───┐ ┌──▼────┐
│ │ │ │ │ │ │ │ │ │
│ Slack │ │ Teams │ │ Custom │ │ Zapier│ │Make.com│
│ │ │ │ │ Webhooks │ │ │ │ │
└───────┘ └───────┘ └───────────┘ └───────┘ └───────┘
&lt;/code>&lt;/pre>&lt;h2 id="success-metrics-and-kpis">Success Metrics and KPIs&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>Integration Adoption Rate&lt;/strong>: 50% of users configuring at least one integration&lt;/li>
&lt;li>&lt;strong>Notification Delivery&lt;/strong>: 99.9% successful delivery of notifications&lt;/li>
&lt;li>&lt;strong>Integration Platform Coverage&lt;/strong>: Support for 5+ major platforms&lt;/li>
&lt;li>&lt;strong>User Satisfaction&lt;/strong>: 90%+ approval rating for integration features&lt;/li>
&lt;li>&lt;strong>Time to Value&lt;/strong>: &amp;lt;10 minutes to set up first integration&lt;/li>
&lt;/ul>
&lt;h2 id="timeline-summary">Timeline Summary&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>Q3 2025&lt;/strong>: Core webhook architecture (10 weeks)&lt;/li>
&lt;li>&lt;strong>Q4 2025&lt;/strong>: Direct platform integrations (12 weeks)&lt;/li>
&lt;li>&lt;strong>Q1 2026&lt;/strong>: Integration hub support (10 weeks)&lt;/li>
&lt;li>&lt;strong>Q2 2026&lt;/strong>: Advanced integration features (12 weeks)&lt;/li>
&lt;/ul>
&lt;h2 id="resource-requirements">Resource Requirements&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>Development&lt;/strong>: 2 developers (part-time)&lt;/li>
&lt;li>&lt;strong>Design&lt;/strong>: 1 designer for UI components&lt;/li>
&lt;li>&lt;strong>Documentation&lt;/strong>: Technical writer for integration guides&lt;/li>
&lt;li>&lt;strong>Testing&lt;/strong>: QA engineer for cross-platform testing&lt;/li>
&lt;li>&lt;strong>External Services&lt;/strong>: Development accounts for Slack, Zapier, etc.&lt;/li>
&lt;/ul>
&lt;h2 id="chatops-integration-two-way-communication">ChatOps Integration (Two-Way Communication)&lt;/h2>
&lt;p>CloudSnooze will implement a comprehensive ChatOps approach, allowing users to not only receive notifications but also control instances and modify configurations directly from chat platforms. This creates a seamless operational workflow where monitoring, alerts, and actions all happen in the same conversation context.&lt;/p>
&lt;h3 id="key-chatops-capabilities">Key ChatOps Capabilities&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Conversational Commands&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Natural language processing for simple commands&lt;/li>
&lt;li>Structured commands for complex operations&lt;/li>
&lt;li>Context-aware responses based on previous messages&lt;/li>
&lt;li>Command suggestions and auto-completion&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Interactive Controls&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>One-click buttons for common actions (start/stop/restart)&lt;/li>
&lt;li>Drop-down selectors for choosing instances or regions&lt;/li>
&lt;li>Form-based inputs for threshold configuration&lt;/li>
&lt;li>Progress indicators for long-running operations&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Conversation Flow Examples&lt;/strong>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>User: @CloudSnooze list idle instances
Bot: Found 3 instances that are currently idle:
• i-1234abcd (us-east-1): CPU 2%, Memory 15%, idle for 45 minutes
• i-5678efgh (us-west-2): CPU 1%, Memory 12%, idle for 30 minutes
• i-9012ijkl (eu-west-1): CPU 3%, Memory 18%, idle for 25 minutes
Would you like to stop any of these instances?
User: stop the first one
Bot: I&amp;#39;ll stop instance i-1234abcd in us-east-1.
[Stop Instance] [View Details] [Cancel]
User: [clicks Stop Instance]
Bot: ✅ Instance i-1234abcd has been stopped successfully.
Estimated cost savings: $0.12/hour
&lt;/code>&lt;/pre>&lt;ol start="4">
&lt;li>&lt;strong>Multi-User Collaboration&lt;/strong>
&lt;ul>
&lt;li>Shared visibility of instance state and actions&lt;/li>
&lt;li>Role-based access control tied to chat platform roles&lt;/li>
&lt;li>Action audit trail within the conversation&lt;/li>
&lt;li>Approval workflows for critical actions&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="implementation-architecture">Implementation Architecture&lt;/h3>
&lt;p>The ChatOps integration will use a stateful bot implementation that maintains conversation context and understands user intent across message exchanges. This allows for natural, flowing interactions rather than isolated command/response pairs.&lt;/p>
&lt;h2 id="future-expansion-possibilities">Future Expansion Possibilities&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>Voice Assistant Integration&lt;/strong>: Alexa and Google Assistant skills&lt;/li>
&lt;li>&lt;strong>Mobile Push Notifications&lt;/strong>: Direct push to CloudSnooze mobile app&lt;/li>
&lt;li>&lt;strong>Custom Scripting&lt;/strong>: Execute custom scripts on events&lt;/li>
&lt;li>&lt;strong>Incident Management&lt;/strong>: Integration with PagerDuty, OpsGenie, etc.&lt;/li>
&lt;li>&lt;strong>Analytics Platform&lt;/strong>: Datadog, New Relic, Grafana integrations&lt;/li>
&lt;/ul></description></item><item><title>Docs:</title><link>https://cloudsnooze.io/docs/design/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cloudsnooze.io/docs/design/overview/</guid><description>
&lt;!--
Copyright 2025 Scott Friedman and CloudSnooze Contributors
SPDX-License-Identifier: Apache-2.0
-->
&lt;h1 id="cloudsnooze---project-overview">CloudSnooze - Project Overview&lt;/h1>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>CloudSnooze is a lightweight, efficient solution for automatically stopping idle cloud instances to save costs. It monitors various system metrics and, when all metrics remain below specified thresholds for a defined period, safely stops the instance.&lt;/p>
&lt;h2 id="key-features">Key Features&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>Low-resource monitoring&lt;/strong>: Written in Go for minimal impact on the monitored instance&lt;/li>
&lt;li>&lt;strong>Multi-metric detection&lt;/strong>: Considers CPU, memory, network, disk I/O, user input, and GPU activity&lt;/li>
&lt;li>&lt;strong>User activity awareness&lt;/strong>: Detects actual keyboard and mouse usage, not just login sessions&lt;/li>
&lt;li>&lt;strong>Cloud provider agnostic&lt;/strong>: Initially supporting AWS, with design for future expansion&lt;/li>
&lt;li>&lt;strong>Cross-architecture support&lt;/strong>: Works on both x86_64 and ARM64 instances&lt;/li>
&lt;li>&lt;strong>Multiple interfaces&lt;/strong>: CLI tool, GUI application, and daemon&lt;/li>
&lt;li>&lt;strong>Tagging and logging&lt;/strong>: Records when and why instances were stopped&lt;/li>
&lt;li>&lt;strong>Permission verification&lt;/strong>: Validates cloud provider permissions at startup&lt;/li>
&lt;/ul>
&lt;h2 id="architecture">Architecture&lt;/h2>
&lt;p>CloudSnooze consists of three main components:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Daemon (&lt;code>snoozed&lt;/code>)&lt;/strong>: A background service that continuously monitors system resources and initiates instance stopping when appropriate.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>CLI Tool (&lt;code>snooze&lt;/code>)&lt;/strong>: A command-line interface for configuration, monitoring, and control.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>GUI Application (&lt;code>snooze-gui&lt;/code>)&lt;/strong>: An Electron-based graphical interface for visual monitoring and configuration.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>The components communicate via a Unix socket, allowing for secure local interaction:&lt;/p>
&lt;pre tabindex="0">&lt;code>┌────────────────┐ ┌────────────────┐ ┌────────────────┐
│ │ │ │ │ │
│ snoozed │◄───►│ snooze │ │ snooze-gui │
│ (Daemon) │ │ (CLI) │ │ (Electron) │
│ │ │ │ │ │
└────────┬───────┘ └────────────────┘ └────────┬───────┘
│ │
│ Unix Socket │
└─────────────────────────────────────────────┘
│
▼
┌────────────────────┐
│ │
│ Configuration │
│ (/etc/snooze) │
│ │
└────────────────────┘
&lt;/code>&lt;/pre>&lt;h2 id="workflow">Workflow&lt;/h2>
&lt;ol>
&lt;li>The daemon starts and verifies it has the necessary cloud provider permissions&lt;/li>
&lt;li>System metrics are monitored at regular intervals (configurable)&lt;/li>
&lt;li>When all metrics remain below their thresholds for the &amp;ldquo;naptime&amp;rdquo; duration:
&lt;ul>
&lt;li>The instance is tagged (optional)&lt;/li>
&lt;li>The event is logged&lt;/li>
&lt;li>The instance is stopped via the cloud provider API&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="terminology">Terminology&lt;/h2>
&lt;p>CloudSnooze uses playful terminology that aligns with its name:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Naptime&lt;/strong>: The duration an instance must be idle before it&amp;rsquo;s stopped&lt;/li>
&lt;li>&lt;strong>Snooze Thresholds&lt;/strong>: Resource usage levels below which an instance is considered idle&lt;/li>
&lt;li>&lt;strong>Wake Triggers&lt;/strong>: Conditions that would prevent an instance from being snoozed&lt;/li>
&lt;li>&lt;strong>Snooze History&lt;/strong>: Record of when instances were previously stopped&lt;/li>
&lt;/ul>
&lt;h2 id="implementation-details">Implementation Details&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>Language&lt;/strong>: Go for the daemon and CLI, JavaScript/Electron for the GUI&lt;/li>
&lt;li>&lt;strong>Configuration&lt;/strong>: JSON format stored in &lt;code>/etc/snooze/snooze.json&lt;/code>&lt;/li>
&lt;li>&lt;strong>Logs&lt;/strong>: Multiple options including file, syslog, and CloudWatch&lt;/li>
&lt;li>&lt;strong>Packaging&lt;/strong>: RPM and DEB packages for easy installation&lt;/li>
&lt;li>&lt;strong>Systemd Integration&lt;/strong>: Automatic startup and reliable service management&lt;/li>
&lt;li>&lt;strong>Cross-compilation&lt;/strong>: Supports both x86_64 and ARM64 architectures&lt;/li>
&lt;/ul>
&lt;h2 id="cloud-provider-requirements">Cloud Provider Requirements&lt;/h2>
&lt;p>For AWS (initial support):&lt;/p>
&lt;ul>
&lt;li>IAM role with permissions to stop the instance and apply tags&lt;/li>
&lt;li>Network access to the AWS EC2 API endpoints&lt;/li>
&lt;li>Instance metadata service accessibility&lt;/li>
&lt;/ul>
&lt;h2 id="future-expansion">Future Expansion&lt;/h2>
&lt;ul>
&lt;li>Support for additional cloud providers (Azure, GCP)&lt;/li>
&lt;li>Wake-up scheduling for predictable instance availability&lt;/li>
&lt;li>Integration with cloud provider billing APIs for cost tracking&lt;/li>
&lt;li>Advanced prediction of idle periods based on historical patterns&lt;/li>
&lt;/ul></description></item><item><title>Docs:</title><link>https://cloudsnooze.io/docs/design/plugin-architecture/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cloudsnooze.io/docs/design/plugin-architecture/</guid><description>
&lt;h1 id="cloudsnooze-plugin-architecture">CloudSnooze Plugin Architecture&lt;/h1>
&lt;p>CloudSnooze uses a plugin architecture to provide extensibility and modularity, particularly for cloud provider integrations. This document describes the plugin architecture and how to develop new plugins.&lt;/p>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>The plugin system allows CloudSnooze to be extended with new functionality without modifying the core code. Currently, the primary use case is for cloud providers, allowing CloudSnooze to work with different cloud platforms.&lt;/p>
&lt;h2 id="plugin-registry">Plugin Registry&lt;/h2>
&lt;p>At the core of the plugin architecture is the plugin registry, which keeps track of all available plugins. Plugins self-register when loaded, making them available to the application.&lt;/p>
&lt;h2 id="plugin-types">Plugin Types&lt;/h2>
&lt;p>Currently, CloudSnooze supports the following plugin types:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Cloud Provider Plugins&lt;/strong>: Implement cloud provider-specific logic for detecting, stopping, and tagging instances&lt;/li>
&lt;/ul>
&lt;h2 id="plugin-interface">Plugin Interface&lt;/h2>
&lt;p>All plugins must implement the &lt;code>Plugin&lt;/code> interface defined in &lt;code>daemon/plugin/plugin.go&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">type&lt;/span> Plugin &lt;span style="color:#000;font-weight:bold">interface&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic">// Info returns plugin metadata
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span> &lt;span style="color:#900;font-weight:bold">Info&lt;/span>() PluginInfo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic">// Init initializes the plugin with configuration
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span> &lt;span style="color:#900;font-weight:bold">Init&lt;/span>(config &lt;span style="color:#000;font-weight:bold">interface&lt;/span>{}) &lt;span style="color:#458;font-weight:bold">error&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic">// Start starts the plugin
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span> &lt;span style="color:#900;font-weight:bold">Start&lt;/span>() &lt;span style="color:#458;font-weight:bold">error&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic">// Stop gracefully stops the plugin
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span> &lt;span style="color:#900;font-weight:bold">Stop&lt;/span>() &lt;span style="color:#458;font-weight:bold">error&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic">// IsRunning returns true if the plugin is running
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span> &lt;span style="color:#900;font-weight:bold">IsRunning&lt;/span>() &lt;span style="color:#458;font-weight:bold">bool&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="plugin-metadata">Plugin Metadata&lt;/h2>
&lt;p>Each plugin provides metadata through the &lt;code>PluginInfo&lt;/code> structure:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">type&lt;/span> PluginInfo &lt;span style="color:#000;font-weight:bold">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ID &lt;span style="color:#458;font-weight:bold">string&lt;/span> &lt;span style="color:#998;font-style:italic">// Unique identifier
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span> Name &lt;span style="color:#458;font-weight:bold">string&lt;/span> &lt;span style="color:#998;font-style:italic">// Human-readable name
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span> Type &lt;span style="color:#458;font-weight:bold">string&lt;/span> &lt;span style="color:#998;font-style:italic">// Plugin type (e.g., &amp;#34;cloud-provider&amp;#34;)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span> Version &lt;span style="color:#458;font-weight:bold">string&lt;/span> &lt;span style="color:#998;font-style:italic">// Version string
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span> Capabilities &lt;span style="color:#000;font-weight:bold">map&lt;/span>[&lt;span style="color:#458;font-weight:bold">string&lt;/span>]&lt;span style="color:#458;font-weight:bold">bool&lt;/span> &lt;span style="color:#998;font-style:italic">// Capabilities this plugin supports
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span> Author &lt;span style="color:#458;font-weight:bold">string&lt;/span> &lt;span style="color:#998;font-style:italic">// Plugin author
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span> Website &lt;span style="color:#458;font-weight:bold">string&lt;/span> &lt;span style="color:#998;font-style:italic">// Plugin website or repository
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span> Dependencies []&lt;span style="color:#458;font-weight:bold">string&lt;/span> &lt;span style="color:#998;font-style:italic">// IDs of plugins this plugin depends on
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="cloud-provider-plugins">Cloud Provider Plugins&lt;/h2>
&lt;p>Cloud provider plugins must implement the &lt;code>CloudProviderPlugin&lt;/code> interface defined in &lt;code>daemon/plugin/cloud/provider.go&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">type&lt;/span> CloudProviderPlugin &lt;span style="color:#000;font-weight:bold">interface&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> plugin.Plugin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic">// CreateProvider creates a new provider instance with the given configuration
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span> &lt;span style="color:#900;font-weight:bold">CreateProvider&lt;/span>(config &lt;span style="color:#000;font-weight:bold">interface&lt;/span>{}) (common.CloudProvider, &lt;span style="color:#458;font-weight:bold">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic">// CanDetect returns true if this plugin can detect if it&amp;#39;s running on this cloud provider
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span> &lt;span style="color:#900;font-weight:bold">CanDetect&lt;/span>() &lt;span style="color:#458;font-weight:bold">bool&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic">// Detect tries to detect if the current environment is running on this cloud provider
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span> &lt;span style="color:#900;font-weight:bold">Detect&lt;/span>() (&lt;span style="color:#458;font-weight:bold">bool&lt;/span>, &lt;span style="color:#458;font-weight:bold">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="plugin-loading">Plugin Loading&lt;/h2>
&lt;p>Plugins can be loaded in two ways:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Built-in Plugins&lt;/strong>: These are compiled directly into the binary and self-register via their &lt;code>init()&lt;/code> functions&lt;/li>
&lt;li>&lt;strong>External Plugins&lt;/strong>: These are loaded from shared libraries (.so files) in a configured plugins directory&lt;/li>
&lt;/ol>
&lt;h2 id="plugin-configuration">Plugin Configuration&lt;/h2>
&lt;p>Plugin behavior is configured through the application configuration:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;provider_type&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;aws&amp;#34;&lt;/span>, &lt;span style="color:#998;font-style:italic">// Cloud provider to use (empty for auto-detection)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span> &lt;span style="color:#000080">&amp;#34;plugins_enabled&amp;#34;&lt;/span>: &lt;span style="color:#000;font-weight:bold">true&lt;/span>, &lt;span style="color:#998;font-style:italic">// Whether to use the plugin system
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span> &lt;span style="color:#000080">&amp;#34;plugins_dir&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;/etc/cloudsnooze/plugins&amp;#34;&lt;/span> &lt;span style="color:#998;font-style:italic">// Directory to load external plugins from
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="plugin-manifests">Plugin Manifests&lt;/h2>
&lt;p>External plugins can include a manifest file (&lt;code>manifest.json&lt;/code>) with metadata:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;id&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;aws&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;AWS Cloud Provider&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;cloud-provider&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;version&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;1.0.0&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;capabilities&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;tagging&amp;#34;&lt;/span>: &lt;span style="color:#000;font-weight:bold">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;tag-polling&amp;#34;&lt;/span>: &lt;span style="color:#000;font-weight:bold">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;restart&amp;#34;&lt;/span>: &lt;span style="color:#000;font-weight:bold">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;author&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;CloudSnooze Contributors&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;website&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;https://github.com/scttfrdmn/cloudsnooze&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;dependencies&amp;#34;&lt;/span>: []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="creating-a-cloud-provider-plugin">Creating a Cloud Provider Plugin&lt;/h2>
&lt;p>To create a new cloud provider plugin:&lt;/p>
&lt;ol>
&lt;li>Create a new package in &lt;code>daemon/plugin/cloud/&amp;lt;provider-name&amp;gt;/&lt;/code>&lt;/li>
&lt;li>Implement the &lt;code>CloudProviderPlugin&lt;/code> interface&lt;/li>
&lt;li>Create a provider implementation of the &lt;code>common.CloudProvider&lt;/code> interface&lt;/li>
&lt;li>Register your plugin in the &lt;code>init()&lt;/code> function&lt;/li>
&lt;li>Create a manifest.json file with plugin metadata&lt;/li>
&lt;/ol>
&lt;p>Example implementation for a new provider:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">package&lt;/span> myprovider
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">import&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;github.com/scttfrdmn/cloudsnooze/daemon/common&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;github.com/scttfrdmn/cloudsnooze/daemon/plugin&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cloudplugin &lt;span style="color:#d14">&amp;#34;github.com/scttfrdmn/cloudsnooze/daemon/plugin/cloud&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">// MyProvider implements the CloudProviderPlugin interface
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span>&lt;span style="color:#000;font-weight:bold">type&lt;/span> MyProvider &lt;span style="color:#000;font-weight:bold">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> initialized &lt;span style="color:#458;font-weight:bold">bool&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> running &lt;span style="color:#458;font-weight:bold">bool&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> config &lt;span style="color:#000;font-weight:bold">interface&lt;/span>{}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">// Register the plugin
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span>&lt;span style="color:#000;font-weight:bold">func&lt;/span> &lt;span style="color:#900;font-weight:bold">init&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> plugin.Registry.&lt;span style="color:#900;font-weight:bold">Register&lt;/span>(&lt;span style="color:#900;font-weight:bold">NewMyProvider&lt;/span>())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">// NewMyProvider creates a new provider plugin
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span>&lt;span style="color:#000;font-weight:bold">func&lt;/span> &lt;span style="color:#900;font-weight:bold">NewMyProvider&lt;/span>() &lt;span style="color:#000;font-weight:bold">*&lt;/span>MyProvider {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">return&lt;/span> &lt;span style="color:#000;font-weight:bold">&amp;amp;&lt;/span>MyProvider{}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">// Info returns plugin metadata
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span>&lt;span style="color:#000;font-weight:bold">func&lt;/span> (p &lt;span style="color:#000;font-weight:bold">*&lt;/span>MyProvider) &lt;span style="color:#900;font-weight:bold">Info&lt;/span>() plugin.PluginInfo {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">return&lt;/span> plugin.PluginInfo{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ID: &lt;span style="color:#d14">&amp;#34;myprovider&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Name: &lt;span style="color:#d14">&amp;#34;My Cloud Provider&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Type: plugin.TypeCloudProvider,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Version: &lt;span style="color:#d14">&amp;#34;1.0.0&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Capabilities: &lt;span style="color:#000;font-weight:bold">map&lt;/span>[&lt;span style="color:#458;font-weight:bold">string&lt;/span>]&lt;span style="color:#458;font-weight:bold">bool&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;tagging&amp;#34;&lt;/span>: &lt;span style="color:#000;font-weight:bold">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Author: &lt;span style="color:#d14">&amp;#34;You&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Website: &lt;span style="color:#d14">&amp;#34;https://example.com&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">// Implement other required methods...
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="using-plugins-via-cli">Using Plugins via CLI&lt;/h2>
&lt;p>You can list installed plugins using the CLI:&lt;/p>
&lt;pre tabindex="0">&lt;code>snooze plugins
&lt;/code>&lt;/pre>&lt;p>For JSON output:&lt;/p>
&lt;pre tabindex="0">&lt;code>snooze plugins --json
&lt;/code>&lt;/pre>&lt;h2 id="future-extensions">Future Extensions&lt;/h2>
&lt;p>The plugin architecture is designed to be extended beyond cloud providers. Future plugin types might include:&lt;/p>
&lt;ul>
&lt;li>Monitoring plugins for custom metrics&lt;/li>
&lt;li>Notification plugins for alerting&lt;/li>
&lt;li>Authentication plugins&lt;/li>
&lt;li>Analytics plugins for cost savings reporting
EOF &amp;lt; /dev/null&lt;/li>
&lt;/ul></description></item><item><title>Docs:</title><link>https://cloudsnooze.io/docs/design/plugin-event-roadmap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cloudsnooze.io/docs/design/plugin-event-roadmap/</guid><description>
&lt;!--
Copyright 2025 Scott Friedman and CloudSnooze Contributors
SPDX-License-Identifier: Apache-2.0
-->
&lt;h1 id="cloudsnooze-event-driven-plugin-framework-roadmap">CloudSnooze Event-Driven Plugin Framework Roadmap&lt;/h1>
&lt;p>This document outlines the implementation plan for the CloudSnooze Event-Driven Plugin Framework, which enables plugins to respond to external events such as AWS Spot instance interruption notifications.&lt;/p>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>The Event-Driven Plugin Framework extends CloudSnooze beyond passive monitoring to active event handling. This allows CloudSnooze to trigger appropriate actions when cloud providers or system events require rapid response.&lt;/p>
&lt;h2 id="implementation-phases">Implementation Phases&lt;/h2>
&lt;h3 id="phase-1-core-event-framework-q3-2025">Phase 1: Core Event Framework (Q3 2025)&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Event System Architecture&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Design event types, priorities, and data structures&lt;/li>
&lt;li>Implement event subscription and dispatch mechanisms&lt;/li>
&lt;li>Create event queue and processing pipeline&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Event Source Integration&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>AWS EC2 metadata service monitoring for Spot interrupts&lt;/li>
&lt;li>System event sources (disk, memory, network)&lt;/li>
&lt;li>Basic event simulation for testing&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Plugin Interface Extensions&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Extend plugin interface for event handling&lt;/li>
&lt;li>Implement event handler registration and discovery&lt;/li>
&lt;li>Develop event handler prioritization system&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Testing Framework&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Create event simulation tools for testing&lt;/li>
&lt;li>Implement event processing unit tests&lt;/li>
&lt;li>Develop plugin event handling verification system&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="phase-2-aws-spot-instance-handler-q4-2025">Phase 2: AWS Spot Instance Handler (Q4 2025)&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Spot Interrupt Detection&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>EC2 instance metadata service monitoring&lt;/li>
&lt;li>Instance termination notice parsing&lt;/li>
&lt;li>Time-to-termination calculation&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Graceful Shutdown Framework&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Application notification system&lt;/li>
&lt;li>Configurable shutdown sequence&lt;/li>
&lt;li>Shutdown verification and reporting&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Official Plugins&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Database flushing plugins (MySQL, PostgreSQL, Redis)&lt;/li>
&lt;li>Application checkpoint plugins (common frameworks)&lt;/li>
&lt;li>VM state saving plugins&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Documentation and Examples&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Comprehensive developer guide&lt;/li>
&lt;li>Plugin implementation examples&lt;/li>
&lt;li>Best practices for shutdown scripting&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="phase-3-additional-cloud-providers-q1-2026">Phase 3: Additional Cloud Providers (Q1 2026)&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Azure Integration&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Azure Scheduled Events API monitoring&lt;/li>
&lt;li>VM termination event handling&lt;/li>
&lt;li>Azure-specific plugins&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>GCP Integration&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Preemptible VM monitoring&lt;/li>
&lt;li>GCE instance termination events&lt;/li>
&lt;li>GCP-specific plugins&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Cross-Provider Abstraction&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Unified event model across providers&lt;/li>
&lt;li>Provider-agnostic plugin development&lt;/li>
&lt;li>Event translation and normalization&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="phase-4-advanced-features-q2-q3-2026">Phase 4: Advanced Features (Q2-Q3 2026)&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Event Analytics&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Historical event tracking&lt;/li>
&lt;li>Pattern recognition for preemptions&lt;/li>
&lt;li>Predictive event analysis&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Multi-Instance Coordination&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Event propagation across instances&lt;/li>
&lt;li>Coordinated shutdown for distributed systems&lt;/li>
&lt;li>Leader election for orchestrated shutdowns&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Cost Optimization Strategies&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Automated bidding strategies for Spot instances&lt;/li>
&lt;li>Instance type recommendations based on interruption patterns&lt;/li>
&lt;li>Workload scheduling around interruption patterns&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="specific-implementation-milestones">Specific Implementation Milestones&lt;/h2>
&lt;h3 id="aws-spot-instance-handler">AWS Spot Instance Handler&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Metadata Service Monitoring&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Poll EC2 metadata service at &lt;code>/latest/meta-data/spot/instance-action&lt;/code>&lt;/li>
&lt;li>Parse JSON response for action and time&lt;/li>
&lt;li>Calculate remaining time before termination&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Plugin Execution Flow&lt;/strong>&lt;/p>
&lt;pre tabindex="0">&lt;code>1. CloudSnooze Daemon detects Spot termination notice
2. Event Manager creates Spot interrupt event
3. Plugin Manager finds plugins registered for this event
4. Plugins execute in priority order:
a. High priority: Critical data saving
b. Medium priority: Application state checkpointing
c. Low priority: Notification and logging
5. Results are collected and logged
6. Instance prepares for termination
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>&lt;strong>Configuration Example&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;event_handlers&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;cloud.spot.interrupt&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;enabled&amp;#34;&lt;/span>: &lt;span style="color:#000;font-weight:bold">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;polling_interval_seconds&amp;#34;&lt;/span>: &lt;span style="color:#099">5&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;plugins&amp;#34;&lt;/span>: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;mysql-flusher&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;priority&amp;#34;&lt;/span>: &lt;span style="color:#099">100&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;timeout_seconds&amp;#34;&lt;/span>: &lt;span style="color:#099">30&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;config&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;connection_string&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;user:pass@tcp(localhost:3306)/db&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;app-checkpointer&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;priority&amp;#34;&lt;/span>: &lt;span style="color:#099">80&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;timeout_seconds&amp;#34;&lt;/span>: &lt;span style="color:#099">45&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;config&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;app_endpoint&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;http://localhost:8080/checkpoint&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;verify_success&amp;#34;&lt;/span>: &lt;span style="color:#000;font-weight:bold">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;slack-notifier&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;priority&amp;#34;&lt;/span>: &lt;span style="color:#099">10&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;config&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;webhook_url&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;https://hooks.slack.com/services/...&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;channel&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;#cloud-events&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h3 id="implementing-cloud-event-sources">Implementing Cloud Event Sources&lt;/h3>
&lt;p>For AWS Spot instances, the implementation will:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Create a background goroutine that periodically polls:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">func&lt;/span> &lt;span style="color:#900;font-weight:bold">pollSpotInterruptNotices&lt;/span>(ctx context.Context, eventCh &lt;span style="color:#000;font-weight:bold">chan&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;lt;-&lt;/span> Event) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ticker &lt;span style="color:#000;font-weight:bold">:=&lt;/span> time.&lt;span style="color:#900;font-weight:bold">NewTicker&lt;/span>(&lt;span style="color:#099">5&lt;/span> &lt;span style="color:#000;font-weight:bold">*&lt;/span> time.Second)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">defer&lt;/span> ticker.&lt;span style="color:#900;font-weight:bold">Stop&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">for&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">select&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">case&lt;/span> &lt;span style="color:#000;font-weight:bold">&amp;lt;-&lt;/span>ctx.&lt;span style="color:#900;font-weight:bold">Done&lt;/span>():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">case&lt;/span> &lt;span style="color:#000;font-weight:bold">&amp;lt;-&lt;/span>ticker.C:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> resp, err &lt;span style="color:#000;font-weight:bold">:=&lt;/span> http.&lt;span style="color:#900;font-weight:bold">Get&lt;/span>(&lt;span style="color:#d14">&amp;#34;http://169.254.169.254/latest/meta-data/spot/instance-action&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">if&lt;/span> err &lt;span style="color:#000;font-weight:bold">!=&lt;/span> &lt;span style="color:#000;font-weight:bold">nil&lt;/span> &lt;span style="color:#000;font-weight:bold">||&lt;/span> resp.StatusCode &lt;span style="color:#000;font-weight:bold">!=&lt;/span> &lt;span style="color:#099">200&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic">// No notice yet
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span> &lt;span style="color:#000;font-weight:bold">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">defer&lt;/span> resp.Body.&lt;span style="color:#900;font-weight:bold">Close&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">var&lt;/span> notice SpotInterruptNotice
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">if&lt;/span> err &lt;span style="color:#000;font-weight:bold">:=&lt;/span> json.&lt;span style="color:#900;font-weight:bold">NewDecoder&lt;/span>(resp.Body).&lt;span style="color:#900;font-weight:bold">Decode&lt;/span>(&lt;span style="color:#000;font-weight:bold">&amp;amp;&lt;/span>notice); err &lt;span style="color:#000;font-weight:bold">!=&lt;/span> &lt;span style="color:#000;font-weight:bold">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> log.&lt;span style="color:#900;font-weight:bold">Printf&lt;/span>(&lt;span style="color:#d14">&amp;#34;Error decoding spot interrupt notice: %v&amp;#34;&lt;/span>, err)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic">// Create and dispatch event
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span> event &lt;span style="color:#000;font-weight:bold">:=&lt;/span> Event{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Type: EventSpotInterrupt,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Source: &lt;span style="color:#d14">&amp;#34;aws.ec2.metadata-service&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Timestamp: time.&lt;span style="color:#900;font-weight:bold">Now&lt;/span>(),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ID: uuid.&lt;span style="color:#900;font-weight:bold">New&lt;/span>().&lt;span style="color:#900;font-weight:bold">String&lt;/span>(),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Severity: SeverityUrgent,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Data: &lt;span style="color:#000;font-weight:bold">map&lt;/span>[&lt;span style="color:#458;font-weight:bold">string&lt;/span>]&lt;span style="color:#000;font-weight:bold">interface&lt;/span>{}{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;action&amp;#34;&lt;/span>: notice.Action,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;time&amp;#34;&lt;/span>: notice.Time,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;timeRemaining&amp;#34;&lt;/span>: time.&lt;span style="color:#900;font-weight:bold">Until&lt;/span>(notice.Time).&lt;span style="color:#900;font-weight:bold">Seconds&lt;/span>(),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;instanceID&amp;#34;&lt;/span>: &lt;span style="color:#900;font-weight:bold">getInstanceID&lt;/span>(),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;instanceType&amp;#34;&lt;/span>: &lt;span style="color:#900;font-weight:bold">getInstanceType&lt;/span>(),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> eventCh &lt;span style="color:#000;font-weight:bold">&amp;lt;-&lt;/span> event
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Register this poller with the Event Manager:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">func&lt;/span> (em &lt;span style="color:#000;font-weight:bold">*&lt;/span>EventManager) &lt;span style="color:#900;font-weight:bold">Start&lt;/span>(ctx context.Context) &lt;span style="color:#458;font-weight:bold">error&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> em.eventCh = &lt;span style="color:#0086b3">make&lt;/span>(&lt;span style="color:#000;font-weight:bold">chan&lt;/span> Event, &lt;span style="color:#099">100&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic">// Start event processing goroutine
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span> &lt;span style="color:#000;font-weight:bold">go&lt;/span> em.&lt;span style="color:#900;font-weight:bold">processEvents&lt;/span>(ctx)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic">// Start event sources
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span> &lt;span style="color:#000;font-weight:bold">if&lt;/span> em.config.AWS.SpotInterruptMonitoring.Enabled {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">go&lt;/span> &lt;span style="color:#900;font-weight:bold">pollSpotInterruptNotices&lt;/span>(ctx, em.eventCh)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic">// Add other event sources...
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">return&lt;/span> &lt;span style="color:#000;font-weight:bold">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="third-party-integration-examples">Third-Party Integration Examples&lt;/h2>
&lt;h3 id="1-database-flushing-on-spot-termination">1. Database Flushing on Spot Termination&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">// Example plugin for MySQL database flushing
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span>&lt;span style="color:#000;font-weight:bold">func&lt;/span> (p &lt;span style="color:#000;font-weight:bold">*&lt;/span>MySQLFlusher) &lt;span style="color:#900;font-weight:bold">HandleEvent&lt;/span>(event plugin.Event) (&lt;span style="color:#458;font-weight:bold">bool&lt;/span>, &lt;span style="color:#000;font-weight:bold">map&lt;/span>[&lt;span style="color:#458;font-weight:bold">string&lt;/span>]&lt;span style="color:#000;font-weight:bold">interface&lt;/span>{}, &lt;span style="color:#458;font-weight:bold">error&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">if&lt;/span> event.Type &lt;span style="color:#000;font-weight:bold">!=&lt;/span> plugin.EventSpotInterrupt {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">return&lt;/span> &lt;span style="color:#000;font-weight:bold">false&lt;/span>, &lt;span style="color:#000;font-weight:bold">nil&lt;/span>, &lt;span style="color:#000;font-weight:bold">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic">// Connect to database
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span> db, err &lt;span style="color:#000;font-weight:bold">:=&lt;/span> sql.&lt;span style="color:#900;font-weight:bold">Open&lt;/span>(&lt;span style="color:#d14">&amp;#34;mysql&amp;#34;&lt;/span>, p.connectionString)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">if&lt;/span> err &lt;span style="color:#000;font-weight:bold">!=&lt;/span> &lt;span style="color:#000;font-weight:bold">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">return&lt;/span> &lt;span style="color:#000;font-weight:bold">false&lt;/span>, &lt;span style="color:#000;font-weight:bold">nil&lt;/span>, fmt.&lt;span style="color:#900;font-weight:bold">Errorf&lt;/span>(&lt;span style="color:#d14">&amp;#34;failed to connect to MySQL: %w&amp;#34;&lt;/span>, err)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">defer&lt;/span> db.&lt;span style="color:#900;font-weight:bold">Close&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic">// Flush tables with read lock
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span> _, err = db.&lt;span style="color:#900;font-weight:bold">Exec&lt;/span>(&lt;span style="color:#d14">&amp;#34;FLUSH TABLES WITH READ LOCK&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">if&lt;/span> err &lt;span style="color:#000;font-weight:bold">!=&lt;/span> &lt;span style="color:#000;font-weight:bold">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">return&lt;/span> &lt;span style="color:#000;font-weight:bold">false&lt;/span>, &lt;span style="color:#000;font-weight:bold">nil&lt;/span>, fmt.&lt;span style="color:#900;font-weight:bold">Errorf&lt;/span>(&lt;span style="color:#d14">&amp;#34;failed to flush tables: %w&amp;#34;&lt;/span>, err)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic">// Unlock tables after a brief pause to ensure flush completed
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span> &lt;span style="color:#000;font-weight:bold">defer&lt;/span> &lt;span style="color:#000;font-weight:bold">func&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _, _ = db.&lt;span style="color:#900;font-weight:bold">Exec&lt;/span>(&lt;span style="color:#d14">&amp;#34;UNLOCK TABLES&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">return&lt;/span> &lt;span style="color:#000;font-weight:bold">true&lt;/span>, &lt;span style="color:#000;font-weight:bold">map&lt;/span>[&lt;span style="color:#458;font-weight:bold">string&lt;/span>]&lt;span style="color:#000;font-weight:bold">interface&lt;/span>{}{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;status&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;mysql_flushed&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;tables_flushed&amp;#34;&lt;/span>: &lt;span style="color:#000;font-weight:bold">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }, &lt;span style="color:#000;font-weight:bold">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-application-checkpoint-trigger">2. Application Checkpoint Trigger&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"># Example external plugin for application checkpoint&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">class&lt;/span> &lt;span style="color:#458;font-weight:bold">AppCheckpointer&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">def&lt;/span> __init__(&lt;span style="color:#999">self&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#999">self&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>app_endpoint &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#d14">&amp;#34;http://localhost:8080/api/checkpoint&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#999">self&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>timeout_seconds &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#099">30&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">def&lt;/span> &lt;span style="color:#900;font-weight:bold">handle_event&lt;/span>(&lt;span style="color:#999">self&lt;/span>, event):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">if&lt;/span> event&lt;span style="color:#000;font-weight:bold">.&lt;/span>get(&lt;span style="color:#d14">&amp;#34;type&amp;#34;&lt;/span>) &lt;span style="color:#000;font-weight:bold">!=&lt;/span> &lt;span style="color:#d14">&amp;#34;cloud.spot.interrupt&amp;#34;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">return&lt;/span> {&lt;span style="color:#d14">&amp;#34;handled&amp;#34;&lt;/span>: &lt;span style="color:#000;font-weight:bold">False&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic"># Call application checkpoint API&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> response &lt;span style="color:#000;font-weight:bold">=&lt;/span> requests&lt;span style="color:#000;font-weight:bold">.&lt;/span>post(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#999">self&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>app_endpoint,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> json&lt;span style="color:#000;font-weight:bold">=&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;reason&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;spot_termination&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;time_remaining&amp;#34;&lt;/span>: event[&lt;span style="color:#d14">&amp;#34;data&amp;#34;&lt;/span>][&lt;span style="color:#d14">&amp;#34;timeRemaining&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> timeout&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#999">self&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>timeout_seconds
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">if&lt;/span> response&lt;span style="color:#000;font-weight:bold">.&lt;/span>status_code &lt;span style="color:#000;font-weight:bold">==&lt;/span> &lt;span style="color:#099">200&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">return&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;handled&amp;#34;&lt;/span>: &lt;span style="color:#000;font-weight:bold">True&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;status&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;checkpoint_triggered&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;app_response&amp;#34;&lt;/span>: response&lt;span style="color:#000;font-weight:bold">.&lt;/span>json()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">return&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;handled&amp;#34;&lt;/span>: &lt;span style="color:#000;font-weight:bold">False&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;error&amp;#34;&lt;/span>: &lt;span style="color:#d14">f&lt;/span>&lt;span style="color:#d14">&amp;#34;Checkpoint API returned status &lt;/span>&lt;span style="color:#d14">{&lt;/span>response&lt;span style="color:#000;font-weight:bold">.&lt;/span>status_code&lt;span style="color:#d14">}&lt;/span>&lt;span style="color:#d14">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">except&lt;/span> &lt;span style="color:#900;font-weight:bold">Exception&lt;/span> &lt;span style="color:#000;font-weight:bold">as&lt;/span> e:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">return&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;handled&amp;#34;&lt;/span>: &lt;span style="color:#000;font-weight:bold">False&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;error&amp;#34;&lt;/span>: &lt;span style="color:#0086b3">str&lt;/span>(e)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="success-metrics-and-goals">Success Metrics and Goals&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Reliability Metrics&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>99.9% successful handling of Spot termination events&lt;/li>
&lt;li>&amp;lt;5 second detection-to-action latency&lt;/li>
&lt;li>&amp;lt;1% plugin execution failures&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Community Engagement&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>10+ event handler plugins available at launch&lt;/li>
&lt;li>5+ third-party plugins within 3 months&lt;/li>
&lt;li>Developer documentation with &amp;gt;90% satisfaction&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Business Impact&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>30%+ cost savings through safe Spot instance usage&lt;/li>
&lt;li>&amp;lt;1% data loss incidents on Spot terminations&lt;/li>
&lt;li>50%+ reduction in manual intervention for spot terminations&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol></description></item><item><title>Docs:</title><link>https://cloudsnooze.io/docs/integration/api-reference/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cloudsnooze.io/docs/integration/api-reference/</guid><description>
&lt;!--
Copyright 2025 Scott Friedman and CloudSnooze Contributors
SPDX-License-Identifier: Apache-2.0
-->
&lt;h1 id="cloudsnooze-api-reference">CloudSnooze API Reference&lt;/h1>
&lt;p>This document provides detailed information about CloudSnooze&amp;rsquo;s APIs for integration with other tools and systems.&lt;/p>
&lt;p align="center">
&lt;img src="https://cloudsnooze.io/images/api-architecture.svg" alt="CloudSnooze API Architecture" width="700"/>
&lt;/p>
&lt;h2 id="socket-api">Socket API&lt;/h2>
&lt;p>CloudSnooze provides a Unix socket-based API for local communication with other applications running on the same instance.&lt;/p>
&lt;h3 id="socket-location">Socket Location&lt;/h3>
&lt;p>By default: &lt;code>/var/run/cloudsnooze.sock&lt;/code>&lt;/p>
&lt;p>This can be configured with the &lt;code>--socket&lt;/code> command-line parameter when starting the daemon.&lt;/p>
&lt;h3 id="protocol">Protocol&lt;/h3>
&lt;p>The socket API uses a simple JSON-based request/response protocol:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Request&lt;/strong>: A JSON object with &lt;code>command&lt;/code> and &lt;code>params&lt;/code> fields&lt;/li>
&lt;li>&lt;strong>Response&lt;/strong>: A JSON object with the result or error information&lt;/li>
&lt;/ol>
&lt;h3 id="authentication">Authentication&lt;/h3>
&lt;p>The socket is protected by filesystem permissions. By default, only root and members of the &lt;code>cloudsnooze&lt;/code> group have access.&lt;/p>
&lt;h3 id="commands">Commands&lt;/h3>
&lt;h4 id="status">STATUS&lt;/h4>
&lt;p>Gets the current status of the system and idle detection.&lt;/p>
&lt;p>&lt;strong>Request:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;command&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;STATUS&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;params&amp;#34;&lt;/span>: {}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Response:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;metrics&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;timestamp&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;2023-04-19T14:23:45Z&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;cpu_percent&amp;#34;&lt;/span>: &lt;span style="color:#099">5.2&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;memory_percent&amp;#34;&lt;/span>: &lt;span style="color:#099">22.7&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;network_kbps&amp;#34;&lt;/span>: &lt;span style="color:#099">12.3&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;disk_io_kbps&amp;#34;&lt;/span>: &lt;span style="color:#099">0.5&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;input_idle_secs&amp;#34;&lt;/span>: &lt;span style="color:#099">125&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;gpu_metrics&amp;#34;&lt;/span>: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;NVIDIA&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;id&amp;#34;&lt;/span>: &lt;span style="color:#099">0&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;Tesla T4&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;utilization&amp;#34;&lt;/span>: &lt;span style="color:#099">0.05&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;memory_used&amp;#34;&lt;/span>: &lt;span style="color:#099">123456789&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;memory_total&amp;#34;&lt;/span>: &lt;span style="color:#099">16000000000&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;temperature&amp;#34;&lt;/span>: &lt;span style="color:#099">42.5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;idle_status&amp;#34;&lt;/span>: &lt;span style="color:#000;font-weight:bold">false&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;idle_reason&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;Input activity detected&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;idle_since&amp;#34;&lt;/span>: &lt;span style="color:#000;font-weight:bold">null&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;should_snooze&amp;#34;&lt;/span>: &lt;span style="color:#000;font-weight:bold">false&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;snooze_reason&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;System is not idle&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;version&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;0.1.0&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;instance_info&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;id&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;i-01234567890abcdef&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;t3.medium&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;region&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;us-east-1&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;provider&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;aws&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;tags&amp;#34;&lt;/span>: {}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="config_get">CONFIG_GET&lt;/h4>
&lt;p>Retrieves the current configuration.&lt;/p>
&lt;p>&lt;strong>Request:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;command&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;CONFIG_GET&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;params&amp;#34;&lt;/span>: {}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Response:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;check_interval_seconds&amp;#34;&lt;/span>: &lt;span style="color:#099">60&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;naptime_minutes&amp;#34;&lt;/span>: &lt;span style="color:#099">30&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;cpu_threshold_percent&amp;#34;&lt;/span>: &lt;span style="color:#099">10.0&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;memory_threshold_percent&amp;#34;&lt;/span>: &lt;span style="color:#099">30.0&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;network_threshold_kbps&amp;#34;&lt;/span>: &lt;span style="color:#099">50.0&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;disk_io_threshold_kbps&amp;#34;&lt;/span>: &lt;span style="color:#099">100.0&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;input_idle_threshold_secs&amp;#34;&lt;/span>: &lt;span style="color:#099">900&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;gpu_monitoring_enabled&amp;#34;&lt;/span>: &lt;span style="color:#000;font-weight:bold">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;gpu_threshold_percent&amp;#34;&lt;/span>: &lt;span style="color:#099">5.0&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;aws_region&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;us-east-1&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;enable_instance_tags&amp;#34;&lt;/span>: &lt;span style="color:#000;font-weight:bold">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;tagging_prefix&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;CloudSnooze&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;detailed_instance_tags&amp;#34;&lt;/span>: &lt;span style="color:#000;font-weight:bold">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;tag_polling_enabled&amp;#34;&lt;/span>: &lt;span style="color:#000;font-weight:bold">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;tag_polling_interval_secs&amp;#34;&lt;/span>: &lt;span style="color:#099">60&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;enable_restart_flag&amp;#34;&lt;/span>: &lt;span style="color:#000;font-weight:bold">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;allowed_restarter_ids&amp;#34;&lt;/span>: [&lt;span style="color:#d14">&amp;#34;UserPortal&amp;#34;&lt;/span>, &lt;span style="color:#d14">&amp;#34;JobScheduler&amp;#34;&lt;/span>],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;logging&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;log_level&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;info&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;enable_file_logging&amp;#34;&lt;/span>: &lt;span style="color:#000;font-weight:bold">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;log_file_path&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;/var/log/cloudsnooze.log&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;enable_syslog&amp;#34;&lt;/span>: &lt;span style="color:#000;font-weight:bold">false&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;enable_cloudwatch&amp;#34;&lt;/span>: &lt;span style="color:#000;font-weight:bold">false&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;cloudwatch_log_group&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;CloudSnooze&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;monitoring_mode&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;basic&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="config_set">CONFIG_SET&lt;/h4>
&lt;p>Updates configuration values. Currently a placeholder for future implementation.&lt;/p>
&lt;p>&lt;strong>Request:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;command&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;CONFIG_SET&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;params&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;naptime_minutes&amp;#34;&lt;/span>: &lt;span style="color:#099">45&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;cpu_threshold_percent&amp;#34;&lt;/span>: &lt;span style="color:#099">15.0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Response:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;updated&amp;#34;&lt;/span>: &lt;span style="color:#000;font-weight:bold">false&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;message&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;Not implemented yet&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="history">HISTORY&lt;/h4>
&lt;p>Retrieves historical snooze events. Currently a placeholder for future implementation.&lt;/p>
&lt;p>&lt;strong>Request:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;command&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;HISTORY&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;params&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;limit&amp;#34;&lt;/span>: &lt;span style="color:#099">10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Response:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>[]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="tag-based-api">Tag-Based API&lt;/h2>
&lt;p>CloudSnooze also exposes a tag-based &amp;ldquo;API&amp;rdquo; through the instance tags it manages.&lt;/p>
&lt;h3 id="tag-format">Tag Format&lt;/h3>
&lt;p>All CloudSnooze tags are prefixed with the configured prefix (default: &lt;code>CloudSnooze&lt;/code>) followed by a colon and the tag name.&lt;/p>
&lt;h3 id="standard-tags">Standard Tags&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Tag&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Example&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>CloudSnooze:Status&lt;/code>&lt;/td>
&lt;td>Current status&lt;/td>
&lt;td>&lt;code>Running&lt;/code> or &lt;code>Stopped&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>CloudSnooze:StopTimestamp&lt;/code>&lt;/td>
&lt;td>When the instance was stopped&lt;/td>
&lt;td>&lt;code>2023-04-19T14:23:45Z&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>CloudSnooze:StopReason&lt;/code>&lt;/td>
&lt;td>Why the instance was stopped&lt;/td>
&lt;td>&lt;code>System idle for 30 minutes&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>CloudSnooze:RestartAllowed&lt;/code>&lt;/td>
&lt;td>Whether external tools can restart&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>CloudSnooze:AllowedRestarters&lt;/code>&lt;/td>
&lt;td>Comma-separated list of service IDs allowed to restart&lt;/td>
&lt;td>&lt;code>UserPortal,JobScheduler&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="extended-tags">Extended Tags&lt;/h3>
&lt;p>When detailed tagging is enabled, additional tags provide metrics information:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Tag&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Example&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>CloudSnooze:CPUPercent&lt;/code>&lt;/td>
&lt;td>CPU usage at stop time&lt;/td>
&lt;td>&lt;code>2.50&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>CloudSnooze:MemoryPercent&lt;/code>&lt;/td>
&lt;td>Memory usage at stop time&lt;/td>
&lt;td>&lt;code>15.20&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>CloudSnooze:NetworkKBps&lt;/code>&lt;/td>
&lt;td>Network usage at stop time&lt;/td>
&lt;td>&lt;code>0.80&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>CloudSnooze:DiskIOKBps&lt;/code>&lt;/td>
&lt;td>Disk I/O at stop time&lt;/td>
&lt;td>&lt;code>0.30&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>CloudSnooze:InputIdleSecs&lt;/code>&lt;/td>
&lt;td>Input idle time in seconds&lt;/td>
&lt;td>&lt;code>1800&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>CloudSnooze:GPUPercent&lt;/code>&lt;/td>
&lt;td>Average GPU usage (if present)&lt;/td>
&lt;td>&lt;code>0.05&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>CloudSnooze:GPUCount&lt;/code>&lt;/td>
&lt;td>Number of GPUs detected&lt;/td>
&lt;td>&lt;code>2&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="tag-lifecycle">Tag Lifecycle&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Instance Running&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>&lt;code>CloudSnooze:Status&lt;/code> = &lt;code>Running&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Instance Stopped by CloudSnooze&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>&lt;code>CloudSnooze:Status&lt;/code> = &lt;code>Stopped&lt;/code>&lt;/li>
&lt;li>&lt;code>CloudSnooze:StopTimestamp&lt;/code> added&lt;/li>
&lt;li>&lt;code>CloudSnooze:StopReason&lt;/code> added&lt;/li>
&lt;li>&lt;code>CloudSnooze:RestartAllowed&lt;/code> added (if enabled)&lt;/li>
&lt;li>&lt;code>CloudSnooze:AllowedRestarters&lt;/code> added (if configured)&lt;/li>
&lt;li>Detailed metrics tags added (if enabled)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Instance Restarted by External Tool&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>External tool should verify it&amp;rsquo;s in the &lt;code>AllowedRestarters&lt;/code> list (if specified)&lt;/li>
&lt;li>External tool should update &lt;code>CloudSnooze:Status&lt;/code> to &lt;code>Running&lt;/code>&lt;/li>
&lt;li>External tool should add &lt;code>CloudSnooze:RestartTimestamp&lt;/code>&lt;/li>
&lt;li>External tool should add &lt;code>CloudSnooze:RestartReason&lt;/code>&lt;/li>
&lt;li>External tool should add &lt;code>CloudSnooze:RestartedBy&lt;/code> with its service ID&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="programming-examples">Programming Examples&lt;/h2>
&lt;h3 id="socket-api-in-go">Socket API in Go&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">package&lt;/span> main
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">import&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;encoding/json&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;net&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">type&lt;/span> StatusResponse &lt;span style="color:#000;font-weight:bold">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Metrics &lt;span style="color:#000;font-weight:bold">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Timestamp &lt;span style="color:#458;font-weight:bold">string&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;timestamp&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CPUPercent &lt;span style="color:#458;font-weight:bold">float64&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;cpu_percent&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> MemoryPercent &lt;span style="color:#458;font-weight:bold">float64&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;memory_percent&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> NetworkKBps &lt;span style="color:#458;font-weight:bold">float64&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;network_kbps&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DiskIOKBps &lt;span style="color:#458;font-weight:bold">float64&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;disk_io_kbps&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> InputIdleSecs &lt;span style="color:#458;font-weight:bold">int&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;input_idle_secs&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> IdleStatus &lt;span style="color:#458;font-weight:bold">bool&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;idle_status&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> IdleReason &lt;span style="color:#458;font-weight:bold">string&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;idle_reason&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#d14">`json:&amp;#34;metrics&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> IdleSince &lt;span style="color:#458;font-weight:bold">string&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;idle_since&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ShouldSnooze &lt;span style="color:#458;font-weight:bold">bool&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;should_snooze&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SnoozeReason &lt;span style="color:#458;font-weight:bold">string&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;snooze_reason&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Version &lt;span style="color:#458;font-weight:bold">string&lt;/span> &lt;span style="color:#d14">`json:&amp;#34;version&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">func&lt;/span> &lt;span style="color:#900;font-weight:bold">getStatus&lt;/span>() (&lt;span style="color:#000;font-weight:bold">*&lt;/span>StatusResponse, &lt;span style="color:#458;font-weight:bold">error&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> conn, err &lt;span style="color:#000;font-weight:bold">:=&lt;/span> net.&lt;span style="color:#900;font-weight:bold">Dial&lt;/span>(&lt;span style="color:#d14">&amp;#34;unix&amp;#34;&lt;/span>, &lt;span style="color:#d14">&amp;#34;/var/run/cloudsnooze.sock&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">if&lt;/span> err &lt;span style="color:#000;font-weight:bold">!=&lt;/span> &lt;span style="color:#000;font-weight:bold">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">return&lt;/span> &lt;span style="color:#000;font-weight:bold">nil&lt;/span>, err
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">defer&lt;/span> conn.&lt;span style="color:#900;font-weight:bold">Close&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> request &lt;span style="color:#000;font-weight:bold">:=&lt;/span> &lt;span style="color:#000;font-weight:bold">map&lt;/span>[&lt;span style="color:#458;font-weight:bold">string&lt;/span>]&lt;span style="color:#000;font-weight:bold">interface&lt;/span>{}{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;command&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;STATUS&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;params&amp;#34;&lt;/span>: &lt;span style="color:#000;font-weight:bold">map&lt;/span>[&lt;span style="color:#458;font-weight:bold">string&lt;/span>]&lt;span style="color:#000;font-weight:bold">interface&lt;/span>{}{},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> requestBytes, err &lt;span style="color:#000;font-weight:bold">:=&lt;/span> json.&lt;span style="color:#900;font-weight:bold">Marshal&lt;/span>(request)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">if&lt;/span> err &lt;span style="color:#000;font-weight:bold">!=&lt;/span> &lt;span style="color:#000;font-weight:bold">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">return&lt;/span> &lt;span style="color:#000;font-weight:bold">nil&lt;/span>, err
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _, err = conn.&lt;span style="color:#900;font-weight:bold">Write&lt;/span>(requestBytes)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">if&lt;/span> err &lt;span style="color:#000;font-weight:bold">!=&lt;/span> &lt;span style="color:#000;font-weight:bold">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">return&lt;/span> &lt;span style="color:#000;font-weight:bold">nil&lt;/span>, err
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> buf &lt;span style="color:#000;font-weight:bold">:=&lt;/span> &lt;span style="color:#0086b3">make&lt;/span>([]&lt;span style="color:#458;font-weight:bold">byte&lt;/span>, &lt;span style="color:#099">4096&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> n, err &lt;span style="color:#000;font-weight:bold">:=&lt;/span> conn.&lt;span style="color:#900;font-weight:bold">Read&lt;/span>(buf)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">if&lt;/span> err &lt;span style="color:#000;font-weight:bold">!=&lt;/span> &lt;span style="color:#000;font-weight:bold">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">return&lt;/span> &lt;span style="color:#000;font-weight:bold">nil&lt;/span>, err
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">var&lt;/span> response StatusResponse
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> err = json.&lt;span style="color:#900;font-weight:bold">Unmarshal&lt;/span>(buf[:n], &lt;span style="color:#000;font-weight:bold">&amp;amp;&lt;/span>response)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">if&lt;/span> err &lt;span style="color:#000;font-weight:bold">!=&lt;/span> &lt;span style="color:#000;font-weight:bold">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">return&lt;/span> &lt;span style="color:#000;font-weight:bold">nil&lt;/span>, err
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">return&lt;/span> &lt;span style="color:#000;font-weight:bold">&amp;amp;&lt;/span>response, &lt;span style="color:#000;font-weight:bold">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">func&lt;/span> &lt;span style="color:#900;font-weight:bold">main&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> status, err &lt;span style="color:#000;font-weight:bold">:=&lt;/span> &lt;span style="color:#900;font-weight:bold">getStatus&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">if&lt;/span> err &lt;span style="color:#000;font-weight:bold">!=&lt;/span> &lt;span style="color:#000;font-weight:bold">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fmt.&lt;span style="color:#900;font-weight:bold">Printf&lt;/span>(&lt;span style="color:#d14">&amp;#34;Error: %v\n&amp;#34;&lt;/span>, err)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fmt.&lt;span style="color:#900;font-weight:bold">Printf&lt;/span>(&lt;span style="color:#d14">&amp;#34;CPU: %.2f%%, Memory: %.2f%%\n&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> status.Metrics.CPUPercent,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> status.Metrics.MemoryPercent)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">if&lt;/span> status.ShouldSnooze {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fmt.&lt;span style="color:#900;font-weight:bold">Printf&lt;/span>(&lt;span style="color:#d14">&amp;#34;Instance should be snoozed: %s\n&amp;#34;&lt;/span>, status.SnoozeReason)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#000;font-weight:bold">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fmt.&lt;span style="color:#900;font-weight:bold">Printf&lt;/span>(&lt;span style="color:#d14">&amp;#34;Instance is active: %s\n&amp;#34;&lt;/span>, status.SnoozeReason)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="tag-based-api-in-python-aws">Tag-Based API in Python (AWS)&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">import&lt;/span> &lt;span style="color:#555">boto3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">from&lt;/span> &lt;span style="color:#555">datetime&lt;/span> &lt;span style="color:#000;font-weight:bold">import&lt;/span> datetime
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">def&lt;/span> &lt;span style="color:#900;font-weight:bold">get_cloudsnooze_status&lt;/span>(instance_id, tag_prefix&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#d14">&amp;#39;CloudSnooze&amp;#39;&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;&amp;#34;&amp;#34;Get CloudSnooze status for an instance from its tags.&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ec2 &lt;span style="color:#000;font-weight:bold">=&lt;/span> boto3&lt;span style="color:#000;font-weight:bold">.&lt;/span>client(&lt;span style="color:#d14">&amp;#39;ec2&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> response &lt;span style="color:#000;font-weight:bold">=&lt;/span> ec2&lt;span style="color:#000;font-weight:bold">.&lt;/span>describe_tags(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Filters&lt;span style="color:#000;font-weight:bold">=&lt;/span>[
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#d14">&amp;#39;Name&amp;#39;&lt;/span>: &lt;span style="color:#d14">&amp;#39;resource-id&amp;#39;&lt;/span>, &lt;span style="color:#d14">&amp;#39;Values&amp;#39;&lt;/span>: [instance_id]},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#d14">&amp;#39;Name&amp;#39;&lt;/span>: &lt;span style="color:#d14">&amp;#39;key&amp;#39;&lt;/span>, &lt;span style="color:#d14">&amp;#39;Values&amp;#39;&lt;/span>: [&lt;span style="color:#d14">f&lt;/span>&lt;span style="color:#d14">&amp;#39;&lt;/span>&lt;span style="color:#d14">{&lt;/span>tag_prefix&lt;span style="color:#d14">}&lt;/span>&lt;span style="color:#d14">:*&amp;#39;&lt;/span>]}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> status &lt;span style="color:#000;font-weight:bold">=&lt;/span> {}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">for&lt;/span> tag &lt;span style="color:#000;font-weight:bold">in&lt;/span> response&lt;span style="color:#000;font-weight:bold">.&lt;/span>get(&lt;span style="color:#d14">&amp;#39;Tags&amp;#39;&lt;/span>, []):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> key &lt;span style="color:#000;font-weight:bold">=&lt;/span> tag[&lt;span style="color:#d14">&amp;#39;Key&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> value &lt;span style="color:#000;font-weight:bold">=&lt;/span> tag[&lt;span style="color:#d14">&amp;#39;Value&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic"># Remove prefix from key&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">if&lt;/span> key&lt;span style="color:#000;font-weight:bold">.&lt;/span>startswith(&lt;span style="color:#d14">f&lt;/span>&lt;span style="color:#d14">&amp;#39;&lt;/span>&lt;span style="color:#d14">{&lt;/span>tag_prefix&lt;span style="color:#d14">}&lt;/span>&lt;span style="color:#d14">:&amp;#39;&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> clean_key &lt;span style="color:#000;font-weight:bold">=&lt;/span> key[&lt;span style="color:#0086b3">len&lt;/span>(&lt;span style="color:#d14">f&lt;/span>&lt;span style="color:#d14">&amp;#39;&lt;/span>&lt;span style="color:#d14">{&lt;/span>tag_prefix&lt;span style="color:#d14">}&lt;/span>&lt;span style="color:#d14">:&amp;#39;&lt;/span>):]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> status[clean_key] &lt;span style="color:#000;font-weight:bold">=&lt;/span> value
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">return&lt;/span> status
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">def&lt;/span> &lt;span style="color:#900;font-weight:bold">instance_was_stopped_by_cloudsnooze&lt;/span>(instance_id, tag_prefix&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#d14">&amp;#39;CloudSnooze&amp;#39;&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;&amp;#34;&amp;#34;Check if instance was stopped by CloudSnooze.&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> status &lt;span style="color:#000;font-weight:bold">=&lt;/span> get_cloudsnooze_status(instance_id, tag_prefix)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">return&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> status&lt;span style="color:#000;font-weight:bold">.&lt;/span>get(&lt;span style="color:#d14">&amp;#39;Status&amp;#39;&lt;/span>) &lt;span style="color:#000;font-weight:bold">==&lt;/span> &lt;span style="color:#d14">&amp;#39;Stopped&amp;#39;&lt;/span> &lt;span style="color:#000;font-weight:bold">and&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#39;StopTimestamp&amp;#39;&lt;/span> &lt;span style="color:#000;font-weight:bold">in&lt;/span> status &lt;span style="color:#000;font-weight:bold">and&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#39;StopReason&amp;#39;&lt;/span> &lt;span style="color:#000;font-weight:bold">in&lt;/span> status
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">def&lt;/span> &lt;span style="color:#900;font-weight:bold">can_restart_instance&lt;/span>(instance_id, service_id, tag_prefix&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#d14">&amp;#39;CloudSnooze&amp;#39;&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;&amp;#34;&amp;#34;Check if this service is allowed to restart the instance.&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> status &lt;span style="color:#000;font-weight:bold">=&lt;/span> get_cloudsnooze_status(instance_id, tag_prefix)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic"># Check if restart is allowed at all&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">if&lt;/span> status&lt;span style="color:#000;font-weight:bold">.&lt;/span>get(&lt;span style="color:#d14">&amp;#39;RestartAllowed&amp;#39;&lt;/span>) &lt;span style="color:#000;font-weight:bold">!=&lt;/span> &lt;span style="color:#d14">&amp;#39;true&amp;#39;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">return&lt;/span> &lt;span style="color:#000;font-weight:bold">False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic"># If no specific restarters are defined, any service can restart&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> allowed_restarters &lt;span style="color:#000;font-weight:bold">=&lt;/span> status&lt;span style="color:#000;font-weight:bold">.&lt;/span>get(&lt;span style="color:#d14">&amp;#39;AllowedRestarters&amp;#39;&lt;/span>, &lt;span style="color:#d14">&amp;#39;&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">if&lt;/span> &lt;span style="color:#000;font-weight:bold">not&lt;/span> allowed_restarters:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">return&lt;/span> &lt;span style="color:#000;font-weight:bold">True&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic"># Check if our service ID is in the allowed list&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> restarter_list &lt;span style="color:#000;font-weight:bold">=&lt;/span> [r&lt;span style="color:#000;font-weight:bold">.&lt;/span>strip() &lt;span style="color:#000;font-weight:bold">for&lt;/span> r &lt;span style="color:#000;font-weight:bold">in&lt;/span> allowed_restarters&lt;span style="color:#000;font-weight:bold">.&lt;/span>split(&lt;span style="color:#d14">&amp;#39;,&amp;#39;&lt;/span>)]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">return&lt;/span> service_id &lt;span style="color:#000;font-weight:bold">in&lt;/span> restarter_list
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">def&lt;/span> &lt;span style="color:#900;font-weight:bold">restart_cloudsnooze_instance&lt;/span>(instance_id, service_id, reason&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#d14">&amp;#39;Manual restart&amp;#39;&lt;/span>, tag_prefix&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#d14">&amp;#39;CloudSnooze&amp;#39;&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;&amp;#34;&amp;#34;Restart an instance that was stopped by CloudSnooze.&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">if&lt;/span> &lt;span style="color:#000;font-weight:bold">not&lt;/span> instance_was_stopped_by_cloudsnooze(instance_id, tag_prefix):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">return&lt;/span> &lt;span style="color:#000;font-weight:bold">False&lt;/span>, &lt;span style="color:#d14">&amp;#34;Instance was not stopped by CloudSnooze&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic"># Check if this service is allowed to restart the instance&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">if&lt;/span> &lt;span style="color:#000;font-weight:bold">not&lt;/span> can_restart_instance(instance_id, service_id, tag_prefix):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">return&lt;/span> &lt;span style="color:#000;font-weight:bold">False&lt;/span>, &lt;span style="color:#d14">&amp;#34;This service is not authorized to restart this instance&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ec2 &lt;span style="color:#000;font-weight:bold">=&lt;/span> boto3&lt;span style="color:#000;font-weight:bold">.&lt;/span>client(&lt;span style="color:#d14">&amp;#39;ec2&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic"># Start the instance&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ec2&lt;span style="color:#000;font-weight:bold">.&lt;/span>start_instances(InstanceIds&lt;span style="color:#000;font-weight:bold">=&lt;/span>[instance_id])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic"># Update the status tag&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ec2&lt;span style="color:#000;font-weight:bold">.&lt;/span>create_tags(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Resources&lt;span style="color:#000;font-weight:bold">=&lt;/span>[instance_id],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Tags&lt;span style="color:#000;font-weight:bold">=&lt;/span>[
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#d14">&amp;#39;Key&amp;#39;&lt;/span>: &lt;span style="color:#d14">f&lt;/span>&lt;span style="color:#d14">&amp;#39;&lt;/span>&lt;span style="color:#d14">{&lt;/span>tag_prefix&lt;span style="color:#d14">}&lt;/span>&lt;span style="color:#d14">:Status&amp;#39;&lt;/span>, &lt;span style="color:#d14">&amp;#39;Value&amp;#39;&lt;/span>: &lt;span style="color:#d14">&amp;#39;Running&amp;#39;&lt;/span>},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#d14">&amp;#39;Key&amp;#39;&lt;/span>: &lt;span style="color:#d14">f&lt;/span>&lt;span style="color:#d14">&amp;#39;&lt;/span>&lt;span style="color:#d14">{&lt;/span>tag_prefix&lt;span style="color:#d14">}&lt;/span>&lt;span style="color:#d14">:RestartTimestamp&amp;#39;&lt;/span>, &lt;span style="color:#d14">&amp;#39;Value&amp;#39;&lt;/span>: datetime&lt;span style="color:#000;font-weight:bold">.&lt;/span>now()&lt;span style="color:#000;font-weight:bold">.&lt;/span>isoformat()},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#d14">&amp;#39;Key&amp;#39;&lt;/span>: &lt;span style="color:#d14">f&lt;/span>&lt;span style="color:#d14">&amp;#39;&lt;/span>&lt;span style="color:#d14">{&lt;/span>tag_prefix&lt;span style="color:#d14">}&lt;/span>&lt;span style="color:#d14">:RestartReason&amp;#39;&lt;/span>, &lt;span style="color:#d14">&amp;#39;Value&amp;#39;&lt;/span>: reason},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#d14">&amp;#39;Key&amp;#39;&lt;/span>: &lt;span style="color:#d14">f&lt;/span>&lt;span style="color:#d14">&amp;#39;&lt;/span>&lt;span style="color:#d14">{&lt;/span>tag_prefix&lt;span style="color:#d14">}&lt;/span>&lt;span style="color:#d14">:RestartedBy&amp;#39;&lt;/span>, &lt;span style="color:#d14">&amp;#39;Value&amp;#39;&lt;/span>: service_id},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic"># Optional: Set expected usage duration if known&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic"># {&amp;#39;Key&amp;#39;: f&amp;#39;{tag_prefix}:ExpectedUsageDuration&amp;#39;, &amp;#39;Value&amp;#39;: &amp;#39;120&amp;#39;}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">return&lt;/span> &lt;span style="color:#000;font-weight:bold">True&lt;/span>, &lt;span style="color:#d14">&amp;#34;Instance restarted successfully&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">except&lt;/span> &lt;span style="color:#900;font-weight:bold">Exception&lt;/span> &lt;span style="color:#000;font-weight:bold">as&lt;/span> e:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">return&lt;/span> &lt;span style="color:#000;font-weight:bold">False&lt;/span>, &lt;span style="color:#d14">f&lt;/span>&lt;span style="color:#d14">&amp;#34;Error restarting instance: &lt;/span>&lt;span style="color:#d14">{&lt;/span>&lt;span style="color:#0086b3">str&lt;/span>(e)&lt;span style="color:#d14">}&lt;/span>&lt;span style="color:#d14">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="error-handling">Error Handling&lt;/h2>
&lt;h3 id="socket-api-errors">Socket API Errors&lt;/h3>
&lt;p>Socket API errors follow this format:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;error&amp;#34;&lt;/span>: &lt;span style="color:#000;font-weight:bold">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;message&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;Error message describing what went wrong&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;#34;code&amp;#34;&lt;/span>: &lt;span style="color:#099">123&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Common error codes:&lt;/p>
&lt;ul>
&lt;li>&lt;code>100&lt;/code>: Invalid command format&lt;/li>
&lt;li>&lt;code>101&lt;/code>: Unknown command&lt;/li>
&lt;li>&lt;code>102&lt;/code>: Invalid parameters&lt;/li>
&lt;li>&lt;code>200&lt;/code>: Internal error&lt;/li>
&lt;/ul>
&lt;h3 id="tag-api-error-handling">Tag API Error Handling&lt;/h3>
&lt;p>When working with tags, consider these error scenarios:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Missing Tags&lt;/strong>: Instance may not have CloudSnooze tags if:&lt;/p>
&lt;ul>
&lt;li>It was never managed by CloudSnooze&lt;/li>
&lt;li>Tags were deleted manually&lt;/li>
&lt;li>Tagging failed due to permissions&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Inconsistent State&lt;/strong>: Check for timestamp consistency between tags&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="versioning-and-compatibility">Versioning and Compatibility&lt;/h2>
&lt;p>The API version is tied to the CloudSnooze version:&lt;/p>
&lt;ul>
&lt;li>&lt;code>v0.1.0&lt;/code>: Initial API implementation
&lt;ul>
&lt;li>Basic socket commands&lt;/li>
&lt;li>Standard tag format&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Future versions will maintain backward compatibility with existing tag formats and socket commands.&lt;/p></description></item><item><title>Docs:</title><link>https://cloudsnooze.io/docs/integration/external-tools/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cloudsnooze.io/docs/integration/external-tools/</guid><description>
&lt;!--
Copyright 2025 Scott Friedman and CloudSnooze Contributors
SPDX-License-Identifier: Apache-2.0
-->
&lt;h1 id="cloudsnooze-integration-guide-for-external-tools">CloudSnooze Integration Guide for External Tools&lt;/h1>
&lt;p>This document describes how external tools like provisioners, schedulers, and monitoring systems can integrate with CloudSnooze to detect and respond to instance stop events.&lt;/p>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>CloudSnooze is a tool for automatically stopping idle cloud instances. External tools may need to:&lt;/p>
&lt;ol>
&lt;li>Detect when CloudSnooze has stopped an instance&lt;/li>
&lt;li>Understand why an instance was stopped&lt;/li>
&lt;li>Gather metrics that led to the stop decision&lt;/li>
&lt;li>Possibly restart instances when needed&lt;/li>
&lt;/ol>
&lt;h2 id="package-installation">Package Installation&lt;/h2>
&lt;p>CloudSnooze is distributed in several packaging formats for easy integration:&lt;/p>
&lt;h3 id="deb-packages-debian-ubuntu">DEB Packages (Debian, Ubuntu)&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"># Install specific version&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>curl -LO https://github.com/scttfrdmn/cloudsnooze/releases/download/v0.1.0/cloudsnooze_0.1.0_amd64.deb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo dpkg -i cloudsnooze_0.1.0_amd64.deb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"># Or always use latest version&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>curl -LO https://github.com/scttfrdmn/cloudsnooze/releases/download/latest/cloudsnooze-latest_amd64.deb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo dpkg -i cloudsnooze-latest_amd64.deb
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="rpm-packages-rhel-centos-fedora">RPM Packages (RHEL, CentOS, Fedora)&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"># Install specific version&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>curl -LO https://github.com/scttfrdmn/cloudsnooze/releases/download/v0.1.0/cloudsnooze-0.1.0-1.x86_64.rpm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo rpm -i cloudsnooze-0.1.0-1.x86_64.rpm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"># Or always use latest version&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>curl -LO https://github.com/scttfrdmn/cloudsnooze/releases/download/latest/cloudsnooze-latest.x86_64.rpm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo rpm -i cloudsnooze-latest.x86_64.rpm
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="integration-methods">Integration Methods&lt;/h2>
&lt;h3 id="1-tag-based-integration-recommended">1. Tag-Based Integration (Recommended)&lt;/h3>
&lt;p>CloudSnooze adds detailed tags to instances before stopping them. External tools can poll these tags to detect and analyze stop events.&lt;/p>
&lt;h4 id="tag-structure">Tag Structure&lt;/h4>
&lt;p>All CloudSnooze tags use the configured prefix (default: &lt;code>CloudSnooze&lt;/code>):&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Tag Key&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Example Value&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>CloudSnooze:Status&lt;/code>&lt;/td>
&lt;td>Current instance status&lt;/td>
&lt;td>&lt;code>Stopped&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>CloudSnooze:StopTimestamp&lt;/code>&lt;/td>
&lt;td>When the instance was stopped&lt;/td>
&lt;td>&lt;code>2023-04-19T14:23:45Z&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>CloudSnooze:StopReason&lt;/code>&lt;/td>
&lt;td>Why the instance was stopped&lt;/td>
&lt;td>&lt;code>System idle for 30 minutes (threshold: 30 minutes)&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="detailed-metrics-tags-when-enabled">Detailed Metrics Tags (When Enabled)&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Tag Key&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Example Value&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>CloudSnooze:CPUPercent&lt;/code>&lt;/td>
&lt;td>CPU usage at stop time&lt;/td>
&lt;td>&lt;code>2.50&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>CloudSnooze:MemoryPercent&lt;/code>&lt;/td>
&lt;td>Memory usage at stop time&lt;/td>
&lt;td>&lt;code>15.20&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>CloudSnooze:NetworkKBps&lt;/code>&lt;/td>
&lt;td>Network usage at stop time&lt;/td>
&lt;td>&lt;code>0.80&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>CloudSnooze:DiskIOKBps&lt;/code>&lt;/td>
&lt;td>Disk I/O at stop time&lt;/td>
&lt;td>&lt;code>0.30&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>CloudSnooze:InputIdleSecs&lt;/code>&lt;/td>
&lt;td>Input idle time in seconds&lt;/td>
&lt;td>&lt;code>1800&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>CloudSnooze:GPUPercent&lt;/code>&lt;/td>
&lt;td>Average GPU usage (if present)&lt;/td>
&lt;td>&lt;code>0.05&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>CloudSnooze:GPUCount&lt;/code>&lt;/td>
&lt;td>Number of GPUs detected&lt;/td>
&lt;td>&lt;code>2&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>CloudSnooze:NaptimeMinutes&lt;/code>&lt;/td>
&lt;td>Configured idle time threshold&lt;/td>
&lt;td>&lt;code>30&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>CloudSnooze:InstanceType&lt;/code>&lt;/td>
&lt;td>Instance type&lt;/td>
&lt;td>&lt;code>t3.medium&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>CloudSnooze:Region&lt;/code>&lt;/td>
&lt;td>Instance region&lt;/td>
&lt;td>&lt;code>us-east-1&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="2-api-socket-communication-advanced">2. API Socket Communication (Advanced)&lt;/h3>
&lt;p>CloudSnooze exposes a Unix socket API that can be accessed by other applications running on the same instance.&lt;/p>
&lt;h4 id="socket-location">Socket Location&lt;/h4>
&lt;p>By default: &lt;code>/var/run/cloudsnooze.sock&lt;/code>&lt;/p>
&lt;h4 id="available-commands">Available Commands&lt;/h4>
&lt;ul>
&lt;li>&lt;code>STATUS&lt;/code>: Get current system status and metrics&lt;/li>
&lt;li>&lt;code>CONFIG_GET&lt;/code>: Retrieve current configuration&lt;/li>
&lt;li>&lt;code>HISTORY&lt;/code>: Get historical snooze events&lt;/li>
&lt;/ul>
&lt;h2 id="implementation-guide">Implementation Guide&lt;/h2>
&lt;h3 id="1-tag-polling-implementation">1. Tag Polling Implementation&lt;/h3>
&lt;p>For external tools like provisioners, implement a tag polling mechanism with these steps:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"># Example in Python using boto3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">import&lt;/span> &lt;span style="color:#555">boto3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">import&lt;/span> &lt;span style="color:#555">time&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ec2 &lt;span style="color:#000;font-weight:bold">=&lt;/span> boto3&lt;span style="color:#000;font-weight:bold">.&lt;/span>client(&lt;span style="color:#d14">&amp;#39;ec2&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">def&lt;/span> &lt;span style="color:#900;font-weight:bold">check_cloudsnooze_status&lt;/span>(instance_id, tag_prefix&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#d14">&amp;#39;CloudSnooze&amp;#39;&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> response &lt;span style="color:#000;font-weight:bold">=&lt;/span> ec2&lt;span style="color:#000;font-weight:bold">.&lt;/span>describe_tags(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Filters&lt;span style="color:#000;font-weight:bold">=&lt;/span>[
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#d14">&amp;#39;Name&amp;#39;&lt;/span>: &lt;span style="color:#d14">&amp;#39;resource-id&amp;#39;&lt;/span>, &lt;span style="color:#d14">&amp;#39;Values&amp;#39;&lt;/span>: [instance_id]},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#d14">&amp;#39;Name&amp;#39;&lt;/span>: &lt;span style="color:#d14">&amp;#39;key&amp;#39;&lt;/span>, &lt;span style="color:#d14">&amp;#39;Values&amp;#39;&lt;/span>: [&lt;span style="color:#d14">f&lt;/span>&lt;span style="color:#d14">&amp;#39;&lt;/span>&lt;span style="color:#d14">{&lt;/span>tag_prefix&lt;span style="color:#d14">}&lt;/span>&lt;span style="color:#d14">:Status&amp;#39;&lt;/span>]}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">if&lt;/span> response[&lt;span style="color:#d14">&amp;#39;Tags&amp;#39;&lt;/span>]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> status &lt;span style="color:#000;font-weight:bold">=&lt;/span> response[&lt;span style="color:#d14">&amp;#39;Tags&amp;#39;&lt;/span>][&lt;span style="color:#099">0&lt;/span>][&lt;span style="color:#d14">&amp;#39;Value&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">if&lt;/span> status &lt;span style="color:#000;font-weight:bold">==&lt;/span> &lt;span style="color:#d14">&amp;#39;Stopped&amp;#39;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic"># Instance was stopped by CloudSnooze&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic"># Get additional tags for details&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> all_tags &lt;span style="color:#000;font-weight:bold">=&lt;/span> ec2&lt;span style="color:#000;font-weight:bold">.&lt;/span>describe_tags(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Filters&lt;span style="color:#000;font-weight:bold">=&lt;/span>[
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#d14">&amp;#39;Name&amp;#39;&lt;/span>: &lt;span style="color:#d14">&amp;#39;resource-id&amp;#39;&lt;/span>, &lt;span style="color:#d14">&amp;#39;Values&amp;#39;&lt;/span>: [instance_id]},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#d14">&amp;#39;Name&amp;#39;&lt;/span>: &lt;span style="color:#d14">&amp;#39;key&amp;#39;&lt;/span>, &lt;span style="color:#d14">&amp;#39;Values&amp;#39;&lt;/span>: [&lt;span style="color:#d14">f&lt;/span>&lt;span style="color:#d14">&amp;#39;&lt;/span>&lt;span style="color:#d14">{&lt;/span>tag_prefix&lt;span style="color:#d14">}&lt;/span>&lt;span style="color:#d14">:*&amp;#39;&lt;/span>]}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic"># Convert tags to a dictionary for easier access&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tag_dict &lt;span style="color:#000;font-weight:bold">=&lt;/span> {tag[&lt;span style="color:#d14">&amp;#39;Key&amp;#39;&lt;/span>]: tag[&lt;span style="color:#d14">&amp;#39;Value&amp;#39;&lt;/span>] &lt;span style="color:#000;font-weight:bold">for&lt;/span> tag &lt;span style="color:#000;font-weight:bold">in&lt;/span> all_tags[&lt;span style="color:#d14">&amp;#39;Tags&amp;#39;&lt;/span>]}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">return&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#39;status&amp;#39;&lt;/span>: &lt;span style="color:#d14">&amp;#39;stopped&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#39;timestamp&amp;#39;&lt;/span>: tag_dict&lt;span style="color:#000;font-weight:bold">.&lt;/span>get(&lt;span style="color:#d14">f&lt;/span>&lt;span style="color:#d14">&amp;#39;&lt;/span>&lt;span style="color:#d14">{&lt;/span>tag_prefix&lt;span style="color:#d14">}&lt;/span>&lt;span style="color:#d14">:StopTimestamp&amp;#39;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#39;reason&amp;#39;&lt;/span>: tag_dict&lt;span style="color:#000;font-weight:bold">.&lt;/span>get(&lt;span style="color:#d14">f&lt;/span>&lt;span style="color:#d14">&amp;#39;&lt;/span>&lt;span style="color:#d14">{&lt;/span>tag_prefix&lt;span style="color:#d14">}&lt;/span>&lt;span style="color:#d14">:StopReason&amp;#39;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#39;metrics&amp;#39;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#39;cpu&amp;#39;&lt;/span>: tag_dict&lt;span style="color:#000;font-weight:bold">.&lt;/span>get(&lt;span style="color:#d14">f&lt;/span>&lt;span style="color:#d14">&amp;#39;&lt;/span>&lt;span style="color:#d14">{&lt;/span>tag_prefix&lt;span style="color:#d14">}&lt;/span>&lt;span style="color:#d14">:CPUPercent&amp;#39;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#39;memory&amp;#39;&lt;/span>: tag_dict&lt;span style="color:#000;font-weight:bold">.&lt;/span>get(&lt;span style="color:#d14">f&lt;/span>&lt;span style="color:#d14">&amp;#39;&lt;/span>&lt;span style="color:#d14">{&lt;/span>tag_prefix&lt;span style="color:#d14">}&lt;/span>&lt;span style="color:#d14">:MemoryPercent&amp;#39;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic"># Add other metrics as needed&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">return&lt;/span> {&lt;span style="color:#d14">&amp;#39;status&amp;#39;&lt;/span>: &lt;span style="color:#d14">&amp;#39;running&amp;#39;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"># Usage in a polling loop&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">def&lt;/span> &lt;span style="color:#900;font-weight:bold">monitor_instances&lt;/span>(instances, interval&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#099">60&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">while&lt;/span> &lt;span style="color:#000;font-weight:bold">True&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">for&lt;/span> instance_id &lt;span style="color:#000;font-weight:bold">in&lt;/span> instances:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> status &lt;span style="color:#000;font-weight:bold">=&lt;/span> check_cloudsnooze_status(instance_id)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">if&lt;/span> status[&lt;span style="color:#d14">&amp;#39;status&amp;#39;&lt;/span>] &lt;span style="color:#000;font-weight:bold">==&lt;/span> &lt;span style="color:#d14">&amp;#39;stopped&amp;#39;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#0086b3">print&lt;/span>(&lt;span style="color:#d14">f&lt;/span>&lt;span style="color:#d14">&amp;#34;Instance &lt;/span>&lt;span style="color:#d14">{&lt;/span>instance_id&lt;span style="color:#d14">}&lt;/span>&lt;span style="color:#d14"> was stopped by CloudSnooze&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#0086b3">print&lt;/span>(&lt;span style="color:#d14">f&lt;/span>&lt;span style="color:#d14">&amp;#34;Reason: &lt;/span>&lt;span style="color:#d14">{&lt;/span>status[&lt;span style="color:#d14">&amp;#39;reason&amp;#39;&lt;/span>]&lt;span style="color:#d14">}&lt;/span>&lt;span style="color:#d14">&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#0086b3">print&lt;/span>(&lt;span style="color:#d14">f&lt;/span>&lt;span style="color:#d14">&amp;#34;Time: &lt;/span>&lt;span style="color:#d14">{&lt;/span>status[&lt;span style="color:#d14">&amp;#39;timestamp&amp;#39;&lt;/span>]&lt;span style="color:#d14">}&lt;/span>&lt;span style="color:#d14">&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic"># Implement your response logic here:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic"># - Log the event&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic"># - Update billing information&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic"># - Potentially restart the instance if needed&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> time&lt;span style="color:#000;font-weight:bold">.&lt;/span>sleep(interval)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-socket-api-integration">2. Socket API Integration&lt;/h3>
&lt;p>For applications running on the same instance:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">// Example in Go
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span>&lt;span style="color:#000;font-weight:bold">package&lt;/span> main
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">import&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;encoding/json&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;net&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">func&lt;/span> &lt;span style="color:#900;font-weight:bold">getCloudSnoozeStatus&lt;/span>() (&lt;span style="color:#000;font-weight:bold">map&lt;/span>[&lt;span style="color:#458;font-weight:bold">string&lt;/span>]&lt;span style="color:#000;font-weight:bold">interface&lt;/span>{}, &lt;span style="color:#458;font-weight:bold">error&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> conn, err &lt;span style="color:#000;font-weight:bold">:=&lt;/span> net.&lt;span style="color:#900;font-weight:bold">Dial&lt;/span>(&lt;span style="color:#d14">&amp;#34;unix&amp;#34;&lt;/span>, &lt;span style="color:#d14">&amp;#34;/var/run/cloudsnooze.sock&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">if&lt;/span> err &lt;span style="color:#000;font-weight:bold">!=&lt;/span> &lt;span style="color:#000;font-weight:bold">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">return&lt;/span> &lt;span style="color:#000;font-weight:bold">nil&lt;/span>, err
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">defer&lt;/span> conn.&lt;span style="color:#900;font-weight:bold">Close&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic">// Create command structure
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span> cmd &lt;span style="color:#000;font-weight:bold">:=&lt;/span> &lt;span style="color:#000;font-weight:bold">map&lt;/span>[&lt;span style="color:#458;font-weight:bold">string&lt;/span>]&lt;span style="color:#000;font-weight:bold">interface&lt;/span>{}{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;command&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;STATUS&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d14">&amp;#34;params&amp;#34;&lt;/span>: &lt;span style="color:#000;font-weight:bold">map&lt;/span>[&lt;span style="color:#458;font-weight:bold">string&lt;/span>]&lt;span style="color:#000;font-weight:bold">interface&lt;/span>{}{},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cmdBytes, err &lt;span style="color:#000;font-weight:bold">:=&lt;/span> json.&lt;span style="color:#900;font-weight:bold">Marshal&lt;/span>(cmd)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">if&lt;/span> err &lt;span style="color:#000;font-weight:bold">!=&lt;/span> &lt;span style="color:#000;font-weight:bold">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">return&lt;/span> &lt;span style="color:#000;font-weight:bold">nil&lt;/span>, err
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic">// Send command
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span> _, err = conn.&lt;span style="color:#900;font-weight:bold">Write&lt;/span>(cmdBytes)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">if&lt;/span> err &lt;span style="color:#000;font-weight:bold">!=&lt;/span> &lt;span style="color:#000;font-weight:bold">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">return&lt;/span> &lt;span style="color:#000;font-weight:bold">nil&lt;/span>, err
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic">// Read response
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span> buf &lt;span style="color:#000;font-weight:bold">:=&lt;/span> &lt;span style="color:#0086b3">make&lt;/span>([]&lt;span style="color:#458;font-weight:bold">byte&lt;/span>, &lt;span style="color:#099">4096&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> n, err &lt;span style="color:#000;font-weight:bold">:=&lt;/span> conn.&lt;span style="color:#900;font-weight:bold">Read&lt;/span>(buf)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">if&lt;/span> err &lt;span style="color:#000;font-weight:bold">!=&lt;/span> &lt;span style="color:#000;font-weight:bold">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">return&lt;/span> &lt;span style="color:#000;font-weight:bold">nil&lt;/span>, err
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic">// Parse response
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">&lt;/span> &lt;span style="color:#000;font-weight:bold">var&lt;/span> response &lt;span style="color:#000;font-weight:bold">map&lt;/span>[&lt;span style="color:#458;font-weight:bold">string&lt;/span>]&lt;span style="color:#000;font-weight:bold">interface&lt;/span>{}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> err = json.&lt;span style="color:#900;font-weight:bold">Unmarshal&lt;/span>(buf[:n], &lt;span style="color:#000;font-weight:bold">&amp;amp;&lt;/span>response)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">if&lt;/span> err &lt;span style="color:#000;font-weight:bold">!=&lt;/span> &lt;span style="color:#000;font-weight:bold">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">return&lt;/span> &lt;span style="color:#000;font-weight:bold">nil&lt;/span>, err
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">return&lt;/span> response, &lt;span style="color:#000;font-weight:bold">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="best-practices">Best Practices&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Poll at Appropriate Intervals&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>The recommended default polling interval is 1 minute.&lt;/li>
&lt;li>Adjust based on your requirements and instance count.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Consider a Hierarchical Approach&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>For large fleets, use tag-based filtering to only check instances with CloudSnooze tags.&lt;/li>
&lt;li>Implement exponential backoff for polling stopped instances.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Handle Restart Carefully&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>When restarting instances, preserve the CloudSnooze tags but update the status.&lt;/li>
&lt;li>Add your own tag to indicate the instance was restarted by your tool.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Track Cost Savings&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Use the stop timestamps to calculate exact savings.&lt;/li>
&lt;li>The detailed metrics can help justify the stop decisions.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Avoid API Socket for Cross-Instance Communication&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>The socket API is only intended for local communication.&lt;/li>
&lt;li>For fleet-wide management, use tag-based polling.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="security-considerations">Security Considerations&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>IAM Permissions&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Ensure your external tool has at minimum the following permissions:
&lt;ul>
&lt;li>&lt;code>ec2:DescribeTags&lt;/code>&lt;/li>
&lt;li>&lt;code>ec2:DescribeInstances&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>For restart functionality, also add:
&lt;ul>
&lt;li>&lt;code>ec2:StartInstances&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Tag Modification&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Only CloudSnooze should modify its own tags.&lt;/li>
&lt;li>Your tool should read but not modify CloudSnooze tags.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Socket API Permissions&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>The Unix socket is protected by file permissions.&lt;/li>
&lt;li>Make sure your application has appropriate filesystem access.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="troubleshooting">Troubleshooting&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Missing Tags&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Verify CloudSnooze has &lt;code>enable_instance_tags&lt;/code> set to &lt;code>true&lt;/code>.&lt;/li>
&lt;li>Check if &lt;code>detailed_instance_tags&lt;/code> is enabled for metric details.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Inconsistent Data&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Check if CloudSnooze logs show successful tagging.&lt;/li>
&lt;li>Verify the IAM role has permission to create and modify tags.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="version-information">Version Information&lt;/h2>
&lt;p>CloudSnooze follows semantic versioning (MAJOR.MINOR.PATCH):&lt;/p>
&lt;ul>
&lt;li>Current version: 0.1.0&lt;/li>
&lt;li>Latest stable release tag: v0.1.0&lt;/li>
&lt;/ul>
&lt;p>For each release, both versioned and &lt;code>-latest&lt;/code> packages are provided to support both specific versioning and automatically staying updated.&lt;/p>
&lt;h2 id="additional-resources">Additional Resources&lt;/h2>
&lt;ul>
&lt;li>CloudSnooze Configuration: See &lt;code>config/snooze.json&lt;/code>&lt;/li>
&lt;li>API Documentation: See &lt;code>docs/api/socket.md&lt;/code>&lt;/li>
&lt;li>&lt;a href="restart-logic.md">Restart Logic&lt;/a> - How CloudSnooze handles instance restarts&lt;/li>
&lt;li>&lt;a href="api-reference.md">API Reference&lt;/a> - Complete API documentation&lt;/li>
&lt;li>&lt;a href="../design/deployment-template.md">Deployment Templates&lt;/a> - AWS deployment examples&lt;/li>
&lt;/ul></description></item><item><title>Docs:</title><link>https://cloudsnooze.io/docs/integration/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cloudsnooze.io/docs/integration/readme/</guid><description>
&lt;h1 id="cloudsnooze-integration-guide">CloudSnooze Integration Guide&lt;/h1>
&lt;p>This directory contains documentation for integrating external tools and services with CloudSnooze.&lt;/p>
&lt;h2 id="contents">Contents&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="api-reference.md">API Reference&lt;/a> - Detailed information about CloudSnooze&amp;rsquo;s APIs&lt;/li>
&lt;li>&lt;a href="restart-logic.md">Restart Logic&lt;/a> - How to implement restart capabilities for stopped instances&lt;/li>
&lt;li>&lt;a href="external-tools.md">External Tools&lt;/a> - Guide for integrating specific external tools&lt;/li>
&lt;/ul>
&lt;h2 id="key-integration-points">Key Integration Points&lt;/h2>
&lt;p>CloudSnooze provides several integration points for external tools and services:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Socket API&lt;/strong> - Local communication through a Unix socket&lt;/li>
&lt;li>&lt;strong>Tag-based API&lt;/strong> - Cloud provider tags for status and metadata&lt;/li>
&lt;li>&lt;strong>Restart Capability&lt;/strong> - Authorized restart of stopped instances&lt;/li>
&lt;/ol>
&lt;h2 id="recent-updates">Recent Updates&lt;/h2>
&lt;ul>
&lt;li>Added support for explicit restart authorization through tags&lt;/li>
&lt;li>Added service-specific authorization for instance restarts&lt;/li>
&lt;li>Expanded documentation with more implementation examples&lt;/li>
&lt;/ul></description></item><item><title>Docs:</title><link>https://cloudsnooze.io/docs/integration/restart-logic/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cloudsnooze.io/docs/integration/restart-logic/</guid><description>
&lt;!--
Copyright 2025 Scott Friedman and CloudSnooze Contributors
SPDX-License-Identifier: Apache-2.0
-->
&lt;h1 id="cloudsnooze-restart-logic-for-external-tools">CloudSnooze Restart Logic for External Tools&lt;/h1>
&lt;p>This document provides detailed guidance on implementing restart logic for instances that have been stopped by CloudSnooze.&lt;/p>
&lt;h2 id="new-restart-capability">New Restart Capability&lt;/h2>
&lt;p>CloudSnooze now supports explicit restart authorization for external tools through additional tags. When an instance is stopped, CloudSnooze can be configured to tag it with a &lt;code>RestartAllowed&lt;/code> flag and optionally specify which external service IDs are allowed to perform restarts.&lt;/p>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>While CloudSnooze focuses on stopping idle instances, external tools like provisioners may need to implement logic to restart these instances when:&lt;/p>
&lt;ol>
&lt;li>Users need to access the instance&lt;/li>
&lt;li>Scheduled jobs need to run&lt;/li>
&lt;li>System maintenance requires the instance to be online&lt;/li>
&lt;/ol>
&lt;h2 id="implementation-patterns">Implementation Patterns&lt;/h2>
&lt;h3 id="1-on-demand-restart">1. On-Demand Restart&lt;/h3>
&lt;p>The simplest pattern where instances are restarted when explicitly requested:&lt;/p>
&lt;pre tabindex="0">&lt;code>User/Service Request → Check if CloudSnooze-stopped → Verify restart authorization → Restart → Update Tags
&lt;/code>&lt;/pre>&lt;h4 id="example-implementation-aws">Example Implementation (AWS)&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">import&lt;/span> &lt;span style="color:#555">boto3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">def&lt;/span> &lt;span style="color:#900;font-weight:bold">restart_cloudsnooze_instance&lt;/span>(instance_id, service_id, tag_prefix&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#d14">&amp;#39;CloudSnooze&amp;#39;&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ec2 &lt;span style="color:#000;font-weight:bold">=&lt;/span> boto3&lt;span style="color:#000;font-weight:bold">.&lt;/span>client(&lt;span style="color:#d14">&amp;#39;ec2&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic"># Check if instance was stopped by CloudSnooze&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> response &lt;span style="color:#000;font-weight:bold">=&lt;/span> ec2&lt;span style="color:#000;font-weight:bold">.&lt;/span>describe_tags(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Filters&lt;span style="color:#000;font-weight:bold">=&lt;/span>[
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#d14">&amp;#39;Name&amp;#39;&lt;/span>: &lt;span style="color:#d14">&amp;#39;resource-id&amp;#39;&lt;/span>, &lt;span style="color:#d14">&amp;#39;Values&amp;#39;&lt;/span>: [instance_id]},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#d14">&amp;#39;Name&amp;#39;&lt;/span>: &lt;span style="color:#d14">&amp;#39;key&amp;#39;&lt;/span>, &lt;span style="color:#d14">&amp;#39;Values&amp;#39;&lt;/span>: [&lt;span style="color:#d14">f&lt;/span>&lt;span style="color:#d14">&amp;#39;&lt;/span>&lt;span style="color:#d14">{&lt;/span>tag_prefix&lt;span style="color:#d14">}&lt;/span>&lt;span style="color:#d14">:Status&amp;#39;&lt;/span>]},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#d14">&amp;#39;Name&amp;#39;&lt;/span>: &lt;span style="color:#d14">&amp;#39;value&amp;#39;&lt;/span>, &lt;span style="color:#d14">&amp;#39;Values&amp;#39;&lt;/span>: [&lt;span style="color:#d14">&amp;#39;Stopped&amp;#39;&lt;/span>]}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">if&lt;/span> &lt;span style="color:#000;font-weight:bold">not&lt;/span> response[&lt;span style="color:#d14">&amp;#39;Tags&amp;#39;&lt;/span>]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">return&lt;/span> &lt;span style="color:#000;font-weight:bold">False&lt;/span>, &lt;span style="color:#d14">&amp;#34;Instance not stopped by CloudSnooze&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic"># Check if restart is allowed&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> restart_allowed_response &lt;span style="color:#000;font-weight:bold">=&lt;/span> ec2&lt;span style="color:#000;font-weight:bold">.&lt;/span>describe_tags(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Filters&lt;span style="color:#000;font-weight:bold">=&lt;/span>[
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#d14">&amp;#39;Name&amp;#39;&lt;/span>: &lt;span style="color:#d14">&amp;#39;resource-id&amp;#39;&lt;/span>, &lt;span style="color:#d14">&amp;#39;Values&amp;#39;&lt;/span>: [instance_id]},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#d14">&amp;#39;Name&amp;#39;&lt;/span>: &lt;span style="color:#d14">&amp;#39;key&amp;#39;&lt;/span>, &lt;span style="color:#d14">&amp;#39;Values&amp;#39;&lt;/span>: [&lt;span style="color:#d14">f&lt;/span>&lt;span style="color:#d14">&amp;#39;&lt;/span>&lt;span style="color:#d14">{&lt;/span>tag_prefix&lt;span style="color:#d14">}&lt;/span>&lt;span style="color:#d14">:RestartAllowed&amp;#39;&lt;/span>]},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#d14">&amp;#39;Name&amp;#39;&lt;/span>: &lt;span style="color:#d14">&amp;#39;value&amp;#39;&lt;/span>, &lt;span style="color:#d14">&amp;#39;Values&amp;#39;&lt;/span>: [&lt;span style="color:#d14">&amp;#39;true&amp;#39;&lt;/span>]}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">if&lt;/span> &lt;span style="color:#000;font-weight:bold">not&lt;/span> restart_allowed_response[&lt;span style="color:#d14">&amp;#39;Tags&amp;#39;&lt;/span>]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">return&lt;/span> &lt;span style="color:#000;font-weight:bold">False&lt;/span>, &lt;span style="color:#d14">&amp;#34;Restart not allowed for this instance&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic"># Check if specific restarters are defined&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> allowed_restarters_response &lt;span style="color:#000;font-weight:bold">=&lt;/span> ec2&lt;span style="color:#000;font-weight:bold">.&lt;/span>describe_tags(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Filters&lt;span style="color:#000;font-weight:bold">=&lt;/span>[
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#d14">&amp;#39;Name&amp;#39;&lt;/span>: &lt;span style="color:#d14">&amp;#39;resource-id&amp;#39;&lt;/span>, &lt;span style="color:#d14">&amp;#39;Values&amp;#39;&lt;/span>: [instance_id]},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#d14">&amp;#39;Name&amp;#39;&lt;/span>: &lt;span style="color:#d14">&amp;#39;key&amp;#39;&lt;/span>, &lt;span style="color:#d14">&amp;#39;Values&amp;#39;&lt;/span>: [&lt;span style="color:#d14">f&lt;/span>&lt;span style="color:#d14">&amp;#39;&lt;/span>&lt;span style="color:#d14">{&lt;/span>tag_prefix&lt;span style="color:#d14">}&lt;/span>&lt;span style="color:#d14">:AllowedRestarters&amp;#39;&lt;/span>]}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic"># If specific restarters are defined, check if this service is allowed&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">if&lt;/span> allowed_restarters_response[&lt;span style="color:#d14">&amp;#39;Tags&amp;#39;&lt;/span>]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> allowed_restarters &lt;span style="color:#000;font-weight:bold">=&lt;/span> allowed_restarters_response[&lt;span style="color:#d14">&amp;#39;Tags&amp;#39;&lt;/span>][&lt;span style="color:#099">0&lt;/span>][&lt;span style="color:#d14">&amp;#39;Value&amp;#39;&lt;/span>]&lt;span style="color:#000;font-weight:bold">.&lt;/span>split(&lt;span style="color:#d14">&amp;#39;,&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">if&lt;/span> service_id &lt;span style="color:#000;font-weight:bold">not&lt;/span> &lt;span style="color:#000;font-weight:bold">in&lt;/span> allowed_restarters:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">return&lt;/span> &lt;span style="color:#000;font-weight:bold">False&lt;/span>, &lt;span style="color:#d14">f&lt;/span>&lt;span style="color:#d14">&amp;#34;Service &lt;/span>&lt;span style="color:#d14">{&lt;/span>service_id&lt;span style="color:#d14">}&lt;/span>&lt;span style="color:#d14"> not authorized to restart this instance&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic"># Start the instance&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ec2&lt;span style="color:#000;font-weight:bold">.&lt;/span>start_instances(InstanceIds&lt;span style="color:#000;font-weight:bold">=&lt;/span>[instance_id])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic"># Update tags&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ec2&lt;span style="color:#000;font-weight:bold">.&lt;/span>create_tags(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Resources&lt;span style="color:#000;font-weight:bold">=&lt;/span>[instance_id],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Tags&lt;span style="color:#000;font-weight:bold">=&lt;/span>[
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#d14">&amp;#39;Key&amp;#39;&lt;/span>: &lt;span style="color:#d14">f&lt;/span>&lt;span style="color:#d14">&amp;#39;&lt;/span>&lt;span style="color:#d14">{&lt;/span>tag_prefix&lt;span style="color:#d14">}&lt;/span>&lt;span style="color:#d14">:Status&amp;#39;&lt;/span>, &lt;span style="color:#d14">&amp;#39;Value&amp;#39;&lt;/span>: &lt;span style="color:#d14">&amp;#39;Running&amp;#39;&lt;/span>},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#d14">&amp;#39;Key&amp;#39;&lt;/span>: &lt;span style="color:#d14">f&lt;/span>&lt;span style="color:#d14">&amp;#39;&lt;/span>&lt;span style="color:#d14">{&lt;/span>tag_prefix&lt;span style="color:#d14">}&lt;/span>&lt;span style="color:#d14">:RestartTimestamp&amp;#39;&lt;/span>, &lt;span style="color:#d14">&amp;#39;Value&amp;#39;&lt;/span>: datetime&lt;span style="color:#000;font-weight:bold">.&lt;/span>now()&lt;span style="color:#000;font-weight:bold">.&lt;/span>isoformat()},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#d14">&amp;#39;Key&amp;#39;&lt;/span>: &lt;span style="color:#d14">f&lt;/span>&lt;span style="color:#d14">&amp;#39;&lt;/span>&lt;span style="color:#d14">{&lt;/span>tag_prefix&lt;span style="color:#d14">}&lt;/span>&lt;span style="color:#d14">:RestartReason&amp;#39;&lt;/span>, &lt;span style="color:#d14">&amp;#39;Value&amp;#39;&lt;/span>: &lt;span style="color:#d14">&amp;#39;User requested restart&amp;#39;&lt;/span>},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#d14">&amp;#39;Key&amp;#39;&lt;/span>: &lt;span style="color:#d14">f&lt;/span>&lt;span style="color:#d14">&amp;#39;&lt;/span>&lt;span style="color:#d14">{&lt;/span>tag_prefix&lt;span style="color:#d14">}&lt;/span>&lt;span style="color:#d14">:RestartedBy&amp;#39;&lt;/span>, &lt;span style="color:#d14">&amp;#39;Value&amp;#39;&lt;/span>: service_id}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">return&lt;/span> &lt;span style="color:#000;font-weight:bold">True&lt;/span>, &lt;span style="color:#d14">&amp;#34;Instance restarted successfully&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">except&lt;/span> &lt;span style="color:#900;font-weight:bold">Exception&lt;/span> &lt;span style="color:#000;font-weight:bold">as&lt;/span> e:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">return&lt;/span> &lt;span style="color:#000;font-weight:bold">False&lt;/span>, &lt;span style="color:#d14">f&lt;/span>&lt;span style="color:#d14">&amp;#34;Error restarting instance: &lt;/span>&lt;span style="color:#d14">{&lt;/span>&lt;span style="color:#0086b3">str&lt;/span>(e)&lt;span style="color:#d14">}&lt;/span>&lt;span style="color:#d14">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-scheduled-restart">2. Scheduled Restart&lt;/h3>
&lt;p>For instances that need to run scheduled jobs:&lt;/p>
&lt;pre tabindex="0">&lt;code>Scheduled Event → Find Matching Stopped Instances → Restart → Run Job → Allow to Stop Again
&lt;/code>&lt;/pre>&lt;h4 id="example-implementation">Example Implementation&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">def&lt;/span> &lt;span style="color:#900;font-weight:bold">schedule_instance_restart&lt;/span>(schedule_expression, instance_tags, tag_prefix&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#d14">&amp;#39;CloudSnooze&amp;#39;&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ec2 &lt;span style="color:#000;font-weight:bold">=&lt;/span> boto3&lt;span style="color:#000;font-weight:bold">.&lt;/span>client(&lt;span style="color:#d14">&amp;#39;ec2&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic"># Find instances matching tags that were stopped by CloudSnooze&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> response &lt;span style="color:#000;font-weight:bold">=&lt;/span> ec2&lt;span style="color:#000;font-weight:bold">.&lt;/span>describe_instances(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Filters&lt;span style="color:#000;font-weight:bold">=&lt;/span>[
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#d14">&amp;#39;Name&amp;#39;&lt;/span>: &lt;span style="color:#d14">&amp;#39;tag:YourScheduleTag&amp;#39;&lt;/span>, &lt;span style="color:#d14">&amp;#39;Values&amp;#39;&lt;/span>: [schedule_expression]},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#d14">&amp;#39;Name&amp;#39;&lt;/span>: &lt;span style="color:#d14">f&lt;/span>&lt;span style="color:#d14">&amp;#39;tag:&lt;/span>&lt;span style="color:#d14">{&lt;/span>tag_prefix&lt;span style="color:#d14">}&lt;/span>&lt;span style="color:#d14">:Status&amp;#39;&lt;/span>, &lt;span style="color:#d14">&amp;#39;Values&amp;#39;&lt;/span>: [&lt;span style="color:#d14">&amp;#39;Stopped&amp;#39;&lt;/span>]},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#d14">&amp;#39;Name&amp;#39;&lt;/span>: &lt;span style="color:#d14">&amp;#39;instance-state-name&amp;#39;&lt;/span>, &lt;span style="color:#d14">&amp;#39;Values&amp;#39;&lt;/span>: [&lt;span style="color:#d14">&amp;#39;stopped&amp;#39;&lt;/span>]}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> restarted_instances &lt;span style="color:#000;font-weight:bold">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">for&lt;/span> reservation &lt;span style="color:#000;font-weight:bold">in&lt;/span> response[&lt;span style="color:#d14">&amp;#39;Reservations&amp;#39;&lt;/span>]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">for&lt;/span> instance &lt;span style="color:#000;font-weight:bold">in&lt;/span> reservation[&lt;span style="color:#d14">&amp;#39;Instances&amp;#39;&lt;/span>]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> instance_id &lt;span style="color:#000;font-weight:bold">=&lt;/span> instance[&lt;span style="color:#d14">&amp;#39;InstanceId&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic"># Restart the instance&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ec2&lt;span style="color:#000;font-weight:bold">.&lt;/span>start_instances(InstanceIds&lt;span style="color:#000;font-weight:bold">=&lt;/span>[instance_id])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic"># Update tags&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ec2&lt;span style="color:#000;font-weight:bold">.&lt;/span>create_tags(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Resources&lt;span style="color:#000;font-weight:bold">=&lt;/span>[instance_id],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Tags&lt;span style="color:#000;font-weight:bold">=&lt;/span>[
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#d14">&amp;#39;Key&amp;#39;&lt;/span>: &lt;span style="color:#d14">f&lt;/span>&lt;span style="color:#d14">&amp;#39;&lt;/span>&lt;span style="color:#d14">{&lt;/span>tag_prefix&lt;span style="color:#d14">}&lt;/span>&lt;span style="color:#d14">:Status&amp;#39;&lt;/span>, &lt;span style="color:#d14">&amp;#39;Value&amp;#39;&lt;/span>: &lt;span style="color:#d14">&amp;#39;Running&amp;#39;&lt;/span>},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#d14">&amp;#39;Key&amp;#39;&lt;/span>: &lt;span style="color:#d14">f&lt;/span>&lt;span style="color:#d14">&amp;#39;&lt;/span>&lt;span style="color:#d14">{&lt;/span>tag_prefix&lt;span style="color:#d14">}&lt;/span>&lt;span style="color:#d14">:RestartTimestamp&amp;#39;&lt;/span>, &lt;span style="color:#d14">&amp;#39;Value&amp;#39;&lt;/span>: datetime&lt;span style="color:#000;font-weight:bold">.&lt;/span>now()&lt;span style="color:#000;font-weight:bold">.&lt;/span>isoformat()},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#d14">&amp;#39;Key&amp;#39;&lt;/span>: &lt;span style="color:#d14">f&lt;/span>&lt;span style="color:#d14">&amp;#39;&lt;/span>&lt;span style="color:#d14">{&lt;/span>tag_prefix&lt;span style="color:#d14">}&lt;/span>&lt;span style="color:#d14">:RestartReason&amp;#39;&lt;/span>, &lt;span style="color:#d14">&amp;#39;Value&amp;#39;&lt;/span>: &lt;span style="color:#d14">f&lt;/span>&lt;span style="color:#d14">&amp;#39;Scheduled event: &lt;/span>&lt;span style="color:#d14">{&lt;/span>schedule_expression&lt;span style="color:#d14">}&lt;/span>&lt;span style="color:#d14">&amp;#39;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> restarted_instances&lt;span style="color:#000;font-weight:bold">.&lt;/span>append(instance_id)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">return&lt;/span> restarted_instances
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="3-predictive-restart">3. Predictive Restart&lt;/h3>
&lt;p>A more sophisticated approach that predicts when users will need instances:&lt;/p>
&lt;pre tabindex="0">&lt;code>User Activity Data → Predict Usage Pattern → Preemptively Restart → Update Tags
&lt;/code>&lt;/pre>&lt;h4 id="factors-to-consider">Factors to Consider&lt;/h4>
&lt;ul>
&lt;li>Historical usage patterns&lt;/li>
&lt;li>Time of day/week&lt;/li>
&lt;li>User login activity from other services&lt;/li>
&lt;li>Calendar/meeting data&lt;/li>
&lt;/ul>
&lt;h2 id="coordination-with-cloudsnooze">Coordination with CloudSnooze&lt;/h2>
&lt;p>To ensure proper coordination with CloudSnooze, external tools should:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Set Expected Usage Tag&lt;/strong>: When restarting an instance, set a tag indicating when the instance might become idle again.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Modify Status Tag&lt;/strong>: Set &lt;code>CloudSnooze:Status&lt;/code> to &lt;code>Running&lt;/code> when restarting.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Add Context Tags&lt;/strong>: Include information about why and when the instance was restarted.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="tag-schema-for-restarts">Tag Schema for Restarts&lt;/h3>
&lt;h3 id="tags-set-by-cloudsnooze">Tags Set by CloudSnooze&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Tag&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Example&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>CloudSnooze:Status&lt;/code>&lt;/td>
&lt;td>Current status&lt;/td>
&lt;td>&lt;code>Stopped&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>CloudSnooze:StopTimestamp&lt;/code>&lt;/td>
&lt;td>When the instance was stopped&lt;/td>
&lt;td>&lt;code>2023-04-19T15:30:00Z&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>CloudSnooze:StopReason&lt;/code>&lt;/td>
&lt;td>Why the instance was stopped&lt;/td>
&lt;td>&lt;code>System idle for 30 minutes&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>CloudSnooze:RestartAllowed&lt;/code>&lt;/td>
&lt;td>Whether external tools can restart&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>CloudSnooze:AllowedRestarters&lt;/code>&lt;/td>
&lt;td>Comma-separated list of service IDs allowed to restart&lt;/td>
&lt;td>&lt;code>UserPortal,JobScheduler&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="tags-set-by-external-tools">Tags Set by External Tools&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Tag&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Example&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>CloudSnooze:Status&lt;/code>&lt;/td>
&lt;td>Current status (updated)&lt;/td>
&lt;td>&lt;code>Running&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>CloudSnooze:RestartTimestamp&lt;/code>&lt;/td>
&lt;td>When the instance was restarted&lt;/td>
&lt;td>&lt;code>2023-04-19T15:30:00Z&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>CloudSnooze:RestartReason&lt;/code>&lt;/td>
&lt;td>Why the instance was restarted&lt;/td>
&lt;td>&lt;code>User login&lt;/code> or &lt;code>Scheduled job&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>CloudSnooze:ExpectedUsageDuration&lt;/code>&lt;/td>
&lt;td>How long the instance is expected to be needed&lt;/td>
&lt;td>&lt;code>120&lt;/code> (minutes)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>CloudSnooze:RestartedBy&lt;/code>&lt;/td>
&lt;td>Service that restarted the instance&lt;/td>
&lt;td>&lt;code>UserPortal&lt;/code> or &lt;code>JobScheduler&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="state-machine">State Machine&lt;/h2>
&lt;p>The complete lifecycle of an instance with CloudSnooze and an external restart tool:&lt;/p>
&lt;pre tabindex="0">&lt;code>Running → Idle → Stopped by CloudSnooze → Restarted by External Tool → Running → ...
&lt;/code>&lt;/pre>&lt;h3 id="state-transitions">State Transitions&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Running to Idle&lt;/strong>: CloudSnooze detects inactivity below thresholds&lt;/li>
&lt;li>&lt;strong>Idle to Stopped&lt;/strong>: CloudSnooze stops the instance after naptime&lt;/li>
&lt;li>&lt;strong>Stopped to Restarting&lt;/strong>: External tool initiates restart&lt;/li>
&lt;li>&lt;strong>Restarting to Running&lt;/strong>: Instance becomes available&lt;/li>
&lt;li>&lt;strong>Running to Monitored&lt;/strong>: CloudSnooze resumes monitoring&lt;/li>
&lt;/ol>
&lt;h2 id="best-practices">Best Practices&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Respect Authorization Boundaries&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Only attempt to restart instances where &lt;code>RestartAllowed&lt;/code> is set to &lt;code>true&lt;/code>&lt;/li>
&lt;li>Verify your service ID is in the &lt;code>AllowedRestarters&lt;/code> list if specified&lt;/li>
&lt;li>Log authorization failures for security auditing&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Respect Idle Detection&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Don&amp;rsquo;t disable CloudSnooze when restarting instances&lt;/li>
&lt;li>Allow the natural idle detection to work&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Throttle Restarts&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Implement cooldown periods to prevent rapid stop/start cycles&lt;/li>
&lt;li>Consider minimum runtime enforcements&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Track Effectiveness&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Log when an instance is restarted&lt;/li>
&lt;li>Track how long it remains active&lt;/li>
&lt;li>Analyze if the restart was necessary&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>User Communication&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Inform users when an instance is restarted&lt;/li>
&lt;li>Provide context about when it might be stopped again&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Optimize Cold Start&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>For instances that take time to become fully useful after restart&lt;/li>
&lt;li>Consider warming caches or preloading data&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="example-architecture">Example Architecture&lt;/h2>
&lt;p>For a complete solution, consider:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Central Management Service&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Maintains state of all CloudSnooze-managed instances&lt;/li>
&lt;li>Coordinates restart operations&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>User Portal Integration&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Allows users to see stopped instances&lt;/li>
&lt;li>Provides one-click restart capability&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Scheduler Integration&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Ensures instances are running for scheduled jobs&lt;/li>
&lt;li>Allows jobs to complete before instances idle out&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Monitoring Integration&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Tracks stop/restart patterns&lt;/li>
&lt;li>Identifies opportunities for optimization&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="performance-considerations">Performance Considerations&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Cold Start Time&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Account for the time needed for instances to fully restart&lt;/li>
&lt;li>For time-sensitive operations, restart in advance&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Resource Bursting&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Be aware that restarting many instances simultaneously can cause resource contention&lt;/li>
&lt;li>Consider staggered restarts for large fleets&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Cost Implications&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Balance between the cost savings of stopping and the overhead of restarting&lt;/li>
&lt;li>Some instances may be better left running if restart frequency is high&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol></description></item><item><title>Docs:</title><link>https://cloudsnooze.io/docs/roadmap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cloudsnooze.io/docs/roadmap/</guid><description>
&lt;!--
Copyright 2025 Scott Friedman and CloudSnooze Contributors
SPDX-License-Identifier: Apache-2.0
-->
&lt;h1 id="cloudsnooze-development-roadmap">CloudSnooze Development Roadmap&lt;/h1>
&lt;p>This document outlines the planned development roadmap for CloudSnooze. The roadmap is organized into phases, with each phase building upon the previous one.&lt;/p>
&lt;h2 id="completed-features">Completed Features&lt;/h2>
&lt;ul>
&lt;li>✅ Core system monitoring (CPU, memory, network, disk I/O)&lt;/li>
&lt;li>✅ Configuration structure and loading&lt;/li>
&lt;li>✅ Basic daemon architecture&lt;/li>
&lt;li>✅ Socket API infrastructure&lt;/li>
&lt;li>✅ AWS instance metadata integration&lt;/li>
&lt;li>✅ Input activity monitoring (Linux, macOS)&lt;/li>
&lt;li>✅ GPU monitoring (NVIDIA, AMD)&lt;/li>
&lt;li>✅ Tag-based monitoring for external tools&lt;/li>
&lt;li>✅ Documentation for external tool integration&lt;/li>
&lt;/ul>
&lt;h2 id="next-steps">Next Steps&lt;/h2>
&lt;h3 id="phase-1-core-functionality-completion">Phase 1: Core Functionality Completion&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Implement Unit Testing Framework&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Set up testing infrastructure for Go components&lt;/li>
&lt;li>Add tests for core monitoring modules&lt;/li>
&lt;li>Implement integration tests for the system as a whole&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Complete AWS SDK Integration&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Replace placeholder code with actual AWS SDK calls&lt;/li>
&lt;li>Implement instance stopping functionality&lt;/li>
&lt;li>Add proper tag management through the SDK&lt;/li>
&lt;li>Implement IAM permission verification&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Enhance CLI Command Implementation&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Complete the &lt;code>status&lt;/code> command with live data&lt;/li>
&lt;li>Implement configuration management commands&lt;/li>
&lt;li>Add history retrieval functionality&lt;/li>
&lt;li>Create help and documentation commands&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Add Logging Implementation&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Implement file-based logging with rotation&lt;/li>
&lt;li>Add syslog integration&lt;/li>
&lt;li>Implement CloudWatch logging for AWS&lt;/li>
&lt;li>Add proper error handling throughout the codebase&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="phase-2-packaging-and-distribution">Phase 2: Packaging and Distribution&lt;/h3>
&lt;ol start="5">
&lt;li>
&lt;p>&lt;strong>Create Packaging Scripts&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Develop DEB packaging for Debian-based systems&lt;/li>
&lt;li>Implement RPM packaging for Red Hat-based systems&lt;/li>
&lt;li>Add installation instructions&lt;/li>
&lt;li>Create configuration templates&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Systemd Integration&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Finalize the systemd service configuration&lt;/li>
&lt;li>Add proper signal handling&lt;/li>
&lt;li>Implement graceful startup and shutdown&lt;/li>
&lt;li>Create service management documentation&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="phase-3-user-experience">Phase 3: User Experience&lt;/h3>
&lt;ol start="7">
&lt;li>
&lt;p>&lt;strong>Develop Electron GUI&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Create basic UI layout&lt;/li>
&lt;li>Implement real-time monitoring dashboard&lt;/li>
&lt;li>Add configuration management interface&lt;/li>
&lt;li>Develop historical data visualization&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Document Installation Process&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Create comprehensive installation guides&lt;/li>
&lt;li>Add configuration walkthroughs&lt;/li>
&lt;li>Develop troubleshooting documentation&lt;/li>
&lt;li>Create user manual&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="phase-4-expansion">Phase 4: Expansion&lt;/h3>
&lt;ol start="9">
&lt;li>
&lt;p>&lt;strong>Plugin Framework Implementation&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Create plugin architecture for extensible idle detection&lt;/li>
&lt;li>Develop plugin manager for discovery and lifecycle management&lt;/li>
&lt;li>Implement both native Go and external process plugins&lt;/li>
&lt;li>Provide SDK and examples for plugin developers&lt;/li>
&lt;li>See &lt;a href="design/plugin-architecture.md">Plugin Architecture&lt;/a> for details&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Event-Driven Plugin Framework&lt;/strong>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>Implement cloud event monitoring (AWS Spot interrupts, etc.)&lt;/li>
&lt;li>Develop event dispatch and handling system&lt;/li>
&lt;li>Create plugins for graceful shutdowns and data preservation&lt;/li>
&lt;li>Add prioritized event handling for critical operations&lt;/li>
&lt;li>See &lt;a href="design/plugin-event-roadmap.md">Event Framework Roadmap&lt;/a> for details&lt;/li>
&lt;/ul>
&lt;ol start="11">
&lt;li>&lt;strong>Expand Cloud Provider Support&lt;/strong>&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>Add GCP integration&lt;/li>
&lt;li>Implement Azure support&lt;/li>
&lt;li>Create abstraction layer for multi-cloud deployments&lt;/li>
&lt;li>Test and document cross-cloud functionality&lt;/li>
&lt;/ul>
&lt;ol start="12">
&lt;li>
&lt;p>&lt;strong>External Integration Framework&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Implement webhook system for event notifications&lt;/li>
&lt;li>Add direct integrations with Slack and Microsoft Teams&lt;/li>
&lt;li>Develop connectors for automation platforms (Zapier, Make.com)&lt;/li>
&lt;li>Create extensible API for third-party systems&lt;/li>
&lt;li>See &lt;a href="design/integration-roadmap.md">Integration Roadmap&lt;/a> for details&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Advanced Features&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Implement predictive idle detection&lt;/li>
&lt;li>Add scheduled operation policies&lt;/li>
&lt;li>Create cost savings reports&lt;/li>
&lt;li>Develop administrator dashboard&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="future-considerations">Future Considerations&lt;/h2>
&lt;ul>
&lt;li>Multi-instance coordination and orchestrated shutdowns&lt;/li>
&lt;li>Cost optimization suggestions and automatic instance bidding&lt;/li>
&lt;li>Instance right-sizing recommendations based on usage patterns&lt;/li>
&lt;li>Integration with cost management tools&lt;/li>
&lt;li>Mobile app for remote monitoring and control&lt;/li>
&lt;li>REST API for third-party integrations&lt;/li>
&lt;li>Webhook notifications for important events&lt;/li>
&lt;li>Team collaboration with permission levels&lt;/li>
&lt;li>Machine learning for predictive idle detection and event forecasting&lt;/li>
&lt;li>Infrastructure as Code integration (Terraform, CloudFormation)&lt;/li>
&lt;li>Tagged instance groups with different policies&lt;/li>
&lt;li>Instance resume functionality&lt;/li>
&lt;li>Cost analytics dashboard&lt;/li>
&lt;li>Advanced event correlation for complex cloud environments&lt;/li>
&lt;li>Plugin marketplace with rating system&lt;/li>
&lt;li>Cross-instance event propagation for distributed systems&lt;/li>
&lt;li>Custom event source plugins for application-specific monitoring&lt;/li>
&lt;li>Automated application-aware recovery after spot interruptions&lt;/li>
&lt;/ul>
&lt;h2 id="contributing">Contributing&lt;/h2>
&lt;p>If you&amp;rsquo;re interested in contributing to CloudSnooze, please focus on the tasks in the current phase. Check the GitHub issues for specific tasks that need attention.&lt;/p>
&lt;h2 id="roadmap-status">Roadmap Status&lt;/h2>
&lt;p>This roadmap was last updated on: April 20, 2025&lt;/p>
&lt;p>Please note that this roadmap is subject to change based on user feedback and development priorities.&lt;/p></description></item></channel></rss>